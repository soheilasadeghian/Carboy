#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarBoyWebservice
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CarBoyDBLive")]
	public partial class DataAccessDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActiveDayTbl(ActiveDayTbl instance);
    partial void UpdateActiveDayTbl(ActiveDayTbl instance);
    partial void DeleteActiveDayTbl(ActiveDayTbl instance);
    partial void InsertversionControlTbl(versionControlTbl instance);
    partial void UpdateversionControlTbl(versionControlTbl instance);
    partial void DeleteversionControlTbl(versionControlTbl instance);
    partial void InsertAreaGeoTbl(AreaGeoTbl instance);
    partial void UpdateAreaGeoTbl(AreaGeoTbl instance);
    partial void DeleteAreaGeoTbl(AreaGeoTbl instance);
    partial void InsertAreaTbl(AreaTbl instance);
    partial void UpdateAreaTbl(AreaTbl instance);
    partial void DeleteAreaTbl(AreaTbl instance);
    partial void InsertAreaToAreaTbl(AreaToAreaTbl instance);
    partial void UpdateAreaToAreaTbl(AreaToAreaTbl instance);
    partial void DeleteAreaToAreaTbl(AreaToAreaTbl instance);
    partial void InsertAssetTbl(AssetTbl instance);
    partial void UpdateAssetTbl(AssetTbl instance);
    partial void DeleteAssetTbl(AssetTbl instance);
    partial void InsertAttributeTbl(AttributeTbl instance);
    partial void UpdateAttributeTbl(AttributeTbl instance);
    partial void DeleteAttributeTbl(AttributeTbl instance);
    partial void InsertCarBrandTbl(CarBrandTbl instance);
    partial void UpdateCarBrandTbl(CarBrandTbl instance);
    partial void DeleteCarBrandTbl(CarBrandTbl instance);
    partial void InsertCarTbl(CarTbl instance);
    partial void UpdateCarTbl(CarTbl instance);
    partial void DeleteCarTbl(CarTbl instance);
    partial void InsertCarType_ColorTbl(CarType_ColorTbl instance);
    partial void UpdateCarType_ColorTbl(CarType_ColorTbl instance);
    partial void DeleteCarType_ColorTbl(CarType_ColorTbl instance);
    partial void InsertCarType_EngineVolumeTbl(CarType_EngineVolumeTbl instance);
    partial void UpdateCarType_EngineVolumeTbl(CarType_EngineVolumeTbl instance);
    partial void DeleteCarType_EngineVolumeTbl(CarType_EngineVolumeTbl instance);
    partial void InsertCarTypeTbl(CarTypeTbl instance);
    partial void UpdateCarTypeTbl(CarTypeTbl instance);
    partial void DeleteCarTypeTbl(CarTypeTbl instance);
    partial void InsertCategoryTbl(CategoryTbl instance);
    partial void UpdateCategoryTbl(CategoryTbl instance);
    partial void DeleteCategoryTbl(CategoryTbl instance);
    partial void InsertColorTbl(ColorTbl instance);
    partial void UpdateColorTbl(ColorTbl instance);
    partial void DeleteColorTbl(ColorTbl instance);
    partial void InsertCustomer_GiftCardTbl(Customer_GiftCardTbl instance);
    partial void UpdateCustomer_GiftCardTbl(Customer_GiftCardTbl instance);
    partial void DeleteCustomer_GiftCardTbl(Customer_GiftCardTbl instance);
    partial void InsertCustomerAddressTbl(CustomerAddressTbl instance);
    partial void UpdateCustomerAddressTbl(CustomerAddressTbl instance);
    partial void DeleteCustomerAddressTbl(CustomerAddressTbl instance);
    partial void InsertCustomerMessageTbl(CustomerMessageTbl instance);
    partial void UpdateCustomerMessageTbl(CustomerMessageTbl instance);
    partial void DeleteCustomerMessageTbl(CustomerMessageTbl instance);
    partial void InsertCustomerPendingRateTbl(CustomerPendingRateTbl instance);
    partial void UpdateCustomerPendingRateTbl(CustomerPendingRateTbl instance);
    partial void DeleteCustomerPendingRateTbl(CustomerPendingRateTbl instance);
    partial void InsertcustomerPushTbl(customerPushTbl instance);
    partial void UpdatecustomerPushTbl(customerPushTbl instance);
    partial void DeletecustomerPushTbl(customerPushTbl instance);
    partial void InsertCustomerRateTbl(CustomerRateTbl instance);
    partial void UpdateCustomerRateTbl(CustomerRateTbl instance);
    partial void DeleteCustomerRateTbl(CustomerRateTbl instance);
    partial void InsertCustomerTbl(CustomerTbl instance);
    partial void UpdateCustomerTbl(CustomerTbl instance);
    partial void DeleteCustomerTbl(CustomerTbl instance);
    partial void InsertCustomerWalletTbl(CustomerWalletTbl instance);
    partial void UpdateCustomerWalletTbl(CustomerWalletTbl instance);
    partial void DeleteCustomerWalletTbl(CustomerWalletTbl instance);
    partial void InsertCustomerWalletTransactionTbl(CustomerWalletTransactionTbl instance);
    partial void UpdateCustomerWalletTransactionTbl(CustomerWalletTransactionTbl instance);
    partial void DeleteCustomerWalletTransactionTbl(CustomerWalletTransactionTbl instance);
    partial void InsertDayTbl(DayTbl instance);
    partial void UpdateDayTbl(DayTbl instance);
    partial void DeleteDayTbl(DayTbl instance);
    partial void InsertDistributorCancelerLogTbl(DistributorCancelerLogTbl instance);
    partial void UpdateDistributorCancelerLogTbl(DistributorCancelerLogTbl instance);
    partial void DeleteDistributorCancelerLogTbl(DistributorCancelerLogTbl instance);
    partial void InsertDistributorCancelingOrderTbl(DistributorCancelingOrderTbl instance);
    partial void UpdateDistributorCancelingOrderTbl(DistributorCancelingOrderTbl instance);
    partial void DeleteDistributorCancelingOrderTbl(DistributorCancelingOrderTbl instance);
    partial void InsertDistributorStartLocationTbl(DistributorStartLocationTbl instance);
    partial void UpdateDistributorStartLocationTbl(DistributorStartLocationTbl instance);
    partial void DeleteDistributorStartLocationTbl(DistributorStartLocationTbl instance);
    partial void InsertDistributorTimeSheetTbl(DistributorTimeSheetTbl instance);
    partial void UpdateDistributorTimeSheetTbl(DistributorTimeSheetTbl instance);
    partial void DeleteDistributorTimeSheetTbl(DistributorTimeSheetTbl instance);
    partial void InsertDraftDetailProductFieldsTbl(DraftDetailProductFieldsTbl instance);
    partial void UpdateDraftDetailProductFieldsTbl(DraftDetailProductFieldsTbl instance);
    partial void DeleteDraftDetailProductFieldsTbl(DraftDetailProductFieldsTbl instance);
    partial void InsertDraftDetailTbl(DraftDetailTbl instance);
    partial void UpdateDraftDetailTbl(DraftDetailTbl instance);
    partial void DeleteDraftDetailTbl(DraftDetailTbl instance);
    partial void InsertDraftTbl(DraftTbl instance);
    partial void UpdateDraftTbl(DraftTbl instance);
    partial void DeleteDraftTbl(DraftTbl instance);
    partial void InsertEngineVolumeTbl(EngineVolumeTbl instance);
    partial void UpdateEngineVolumeTbl(EngineVolumeTbl instance);
    partial void DeleteEngineVolumeTbl(EngineVolumeTbl instance);
    partial void InsertExcludDaysTbl(ExcludDaysTbl instance);
    partial void UpdateExcludDaysTbl(ExcludDaysTbl instance);
    partial void DeleteExcludDaysTbl(ExcludDaysTbl instance);
    partial void InsertGiftCardMellatTbl(GiftCardMellatTbl instance);
    partial void UpdateGiftCardMellatTbl(GiftCardMellatTbl instance);
    partial void DeleteGiftCardMellatTbl(GiftCardMellatTbl instance);
    partial void InsertGiftCardTbl(GiftCardTbl instance);
    partial void UpdateGiftCardTbl(GiftCardTbl instance);
    partial void DeleteGiftCardTbl(GiftCardTbl instance);
    partial void InsertMBProto_sessionTbl(MBProto_sessionTbl instance);
    partial void UpdateMBProto_sessionTbl(MBProto_sessionTbl instance);
    partial void DeleteMBProto_sessionTbl(MBProto_sessionTbl instance);
    partial void InsertMBProto_user_sessionTbl(MBProto_user_sessionTbl instance);
    partial void UpdateMBProto_user_sessionTbl(MBProto_user_sessionTbl instance);
    partial void DeleteMBProto_user_sessionTbl(MBProto_user_sessionTbl instance);
    partial void InsertMBProtoObjectTbl(MBProtoObjectTbl instance);
    partial void UpdateMBProtoObjectTbl(MBProtoObjectTbl instance);
    partial void DeleteMBProtoObjectTbl(MBProtoObjectTbl instance);
    partial void InsertOnlinePayOrderDiscountTbl(OnlinePayOrderDiscountTbl instance);
    partial void UpdateOnlinePayOrderDiscountTbl(OnlinePayOrderDiscountTbl instance);
    partial void DeleteOnlinePayOrderDiscountTbl(OnlinePayOrderDiscountTbl instance);
    partial void InsertPackageServiceTbl(PackageServiceTbl instance);
    partial void UpdatePackageServiceTbl(PackageServiceTbl instance);
    partial void DeletePackageServiceTbl(PackageServiceTbl instance);
    partial void InsertPackageTbl(PackageTbl instance);
    partial void UpdatePackageTbl(PackageTbl instance);
    partial void DeletePackageTbl(PackageTbl instance);
    partial void InsertPaymentTbl(PaymentTbl instance);
    partial void UpdatePaymentTbl(PaymentTbl instance);
    partial void DeletePaymentTbl(PaymentTbl instance);
    partial void InsertperiodGiftCardTbl(periodGiftCardTbl instance);
    partial void UpdateperiodGiftCardTbl(periodGiftCardTbl instance);
    partial void DeleteperiodGiftCardTbl(periodGiftCardTbl instance);
    partial void InsertPeriodTbl(PeriodTbl instance);
    partial void UpdatePeriodTbl(PeriodTbl instance);
    partial void DeletePeriodTbl(PeriodTbl instance);
    partial void InsertPermissionTbl(PermissionTbl instance);
    partial void UpdatePermissionTbl(PermissionTbl instance);
    partial void DeletePermissionTbl(PermissionTbl instance);
    partial void InsertProduct_AttributeTbl(Product_AttributeTbl instance);
    partial void UpdateProduct_AttributeTbl(Product_AttributeTbl instance);
    partial void DeleteProduct_AttributeTbl(Product_AttributeTbl instance);
    partial void InsertProduct_CategoryTbl(Product_CategoryTbl instance);
    partial void UpdateProduct_CategoryTbl(Product_CategoryTbl instance);
    partial void DeleteProduct_CategoryTbl(Product_CategoryTbl instance);
    partial void InsertProduct_SellerTbl(Product_SellerTbl instance);
    partial void UpdateProduct_SellerTbl(Product_SellerTbl instance);
    partial void DeleteProduct_SellerTbl(Product_SellerTbl instance);
    partial void InsertProduct_SpecificationOptionTbl(Product_SpecificationOptionTbl instance);
    partial void UpdateProduct_SpecificationOptionTbl(Product_SpecificationOptionTbl instance);
    partial void DeleteProduct_SpecificationOptionTbl(Product_SpecificationOptionTbl instance);
    partial void InsertProductCompactDetailsTbl(ProductCompactDetailsTbl instance);
    partial void UpdateProductCompactDetailsTbl(ProductCompactDetailsTbl instance);
    partial void DeleteProductCompactDetailsTbl(ProductCompactDetailsTbl instance);
    partial void InsertProductCompactTbl(ProductCompactTbl instance);
    partial void UpdateProductCompactTbl(ProductCompactTbl instance);
    partial void DeleteProductCompactTbl(ProductCompactTbl instance);
    partial void InsertProductContentTbl(ProductContentTbl instance);
    partial void UpdateProductContentTbl(ProductContentTbl instance);
    partial void DeleteProductContentTbl(ProductContentTbl instance);
    partial void InsertProductDiscountProductFieldsTbl(ProductDiscountProductFieldsTbl instance);
    partial void UpdateProductDiscountProductFieldsTbl(ProductDiscountProductFieldsTbl instance);
    partial void DeleteProductDiscountProductFieldsTbl(ProductDiscountProductFieldsTbl instance);
    partial void InsertProductDiscountTbl(ProductDiscountTbl instance);
    partial void UpdateProductDiscountTbl(ProductDiscountTbl instance);
    partial void DeleteProductDiscountTbl(ProductDiscountTbl instance);
    partial void InsertProductImageTbl(ProductImageTbl instance);
    partial void UpdateProductImageTbl(ProductImageTbl instance);
    partial void DeleteProductImageTbl(ProductImageTbl instance);
    partial void InsertProductTbl(ProductTbl instance);
    partial void UpdateProductTbl(ProductTbl instance);
    partial void DeleteProductTbl(ProductTbl instance);
    partial void InsertReceiptDetailProductFieldsTbl(ReceiptDetailProductFieldsTbl instance);
    partial void UpdateReceiptDetailProductFieldsTbl(ReceiptDetailProductFieldsTbl instance);
    partial void DeleteReceiptDetailProductFieldsTbl(ReceiptDetailProductFieldsTbl instance);
    partial void InsertReceiptDetailTbl(ReceiptDetailTbl instance);
    partial void UpdateReceiptDetailTbl(ReceiptDetailTbl instance);
    partial void DeleteReceiptDetailTbl(ReceiptDetailTbl instance);
    partial void InsertReceiptTbl(ReceiptTbl instance);
    partial void UpdateReceiptTbl(ReceiptTbl instance);
    partial void DeleteReceiptTbl(ReceiptTbl instance);
    partial void InsertReferalGiftSettingTbl(ReferalGiftSettingTbl instance);
    partial void UpdateReferalGiftSettingTbl(ReferalGiftSettingTbl instance);
    partial void DeleteReferalGiftSettingTbl(ReferalGiftSettingTbl instance);
    partial void InsertRepairman_AreaTbl(Repairman_AreaTbl instance);
    partial void UpdateRepairman_AreaTbl(Repairman_AreaTbl instance);
    partial void DeleteRepairman_AreaTbl(Repairman_AreaTbl instance);
    partial void InsertRepairmanCancelerLogTbl(RepairmanCancelerLogTbl instance);
    partial void UpdateRepairmanCancelerLogTbl(RepairmanCancelerLogTbl instance);
    partial void DeleteRepairmanCancelerLogTbl(RepairmanCancelerLogTbl instance);
    partial void InsertRepairmanCancelingOrderTbl(RepairmanCancelingOrderTbl instance);
    partial void UpdateRepairmanCancelingOrderTbl(RepairmanCancelingOrderTbl instance);
    partial void DeleteRepairmanCancelingOrderTbl(RepairmanCancelingOrderTbl instance);
    partial void InsertrepairmanRoleDetailsTbl(repairmanRoleDetailsTbl instance);
    partial void UpdaterepairmanRoleDetailsTbl(repairmanRoleDetailsTbl instance);
    partial void DeleterepairmanRoleDetailsTbl(repairmanRoleDetailsTbl instance);
    partial void InsertrepairmanRoleTbl(repairmanRoleTbl instance);
    partial void UpdaterepairmanRoleTbl(repairmanRoleTbl instance);
    partial void DeleterepairmanRoleTbl(repairmanRoleTbl instance);
    partial void InsertRepairmanTimeSheet1Tbl(RepairmanTimeSheet1Tbl instance);
    partial void UpdateRepairmanTimeSheet1Tbl(RepairmanTimeSheet1Tbl instance);
    partial void DeleteRepairmanTimeSheet1Tbl(RepairmanTimeSheet1Tbl instance);
    partial void InsertReport_CustomerAmarTbl(Report_CustomerAmarTbl instance);
    partial void UpdateReport_CustomerAmarTbl(Report_CustomerAmarTbl instance);
    partial void DeleteReport_CustomerAmarTbl(Report_CustomerAmarTbl instance);
    partial void InsertReturnDetailProductFieldsTbl(ReturnDetailProductFieldsTbl instance);
    partial void UpdateReturnDetailProductFieldsTbl(ReturnDetailProductFieldsTbl instance);
    partial void DeleteReturnDetailProductFieldsTbl(ReturnDetailProductFieldsTbl instance);
    partial void InsertReturnDetailTbl(ReturnDetailTbl instance);
    partial void UpdateReturnDetailTbl(ReturnDetailTbl instance);
    partial void DeleteReturnDetailTbl(ReturnDetailTbl instance);
    partial void InsertReturnTbl(ReturnTbl instance);
    partial void UpdateReturnTbl(ReturnTbl instance);
    partial void DeleteReturnTbl(ReturnTbl instance);
    partial void InsertRole_PermissionTbl(Role_PermissionTbl instance);
    partial void UpdateRole_PermissionTbl(Role_PermissionTbl instance);
    partial void DeleteRole_PermissionTbl(Role_PermissionTbl instance);
    partial void InsertRoleTbl(RoleTbl instance);
    partial void UpdateRoleTbl(RoleTbl instance);
    partial void DeleteRoleTbl(RoleTbl instance);
    partial void InsertSellerTbl(SellerTbl instance);
    partial void UpdateSellerTbl(SellerTbl instance);
    partial void DeleteSellerTbl(SellerTbl instance);
    partial void InsertService_CarTypeTbl(Service_CarTypeTbl instance);
    partial void UpdateService_CarTypeTbl(Service_CarTypeTbl instance);
    partial void DeleteService_CarTypeTbl(Service_CarTypeTbl instance);
    partial void InsertServiceCarType_RepairemanRoleTbl(ServiceCarType_RepairemanRoleTbl instance);
    partial void UpdateServiceCarType_RepairemanRoleTbl(ServiceCarType_RepairemanRoleTbl instance);
    partial void DeleteServiceCarType_RepairemanRoleTbl(ServiceCarType_RepairemanRoleTbl instance);
    partial void InsertServiceCarTypeGroup_EngineVolumeTbl(ServiceCarTypeGroup_EngineVolumeTbl instance);
    partial void UpdateServiceCarTypeGroup_EngineVolumeTbl(ServiceCarTypeGroup_EngineVolumeTbl instance);
    partial void DeleteServiceCarTypeGroup_EngineVolumeTbl(ServiceCarTypeGroup_EngineVolumeTbl instance);
    partial void InsertServiceCarTypeGroupProductTbl(ServiceCarTypeGroupProductTbl instance);
    partial void UpdateServiceCarTypeGroupProductTbl(ServiceCarTypeGroupProductTbl instance);
    partial void DeleteServiceCarTypeGroupProductTbl(ServiceCarTypeGroupProductTbl instance);
    partial void InsertServiceCarTypeGroupTbl(ServiceCarTypeGroupTbl instance);
    partial void UpdateServiceCarTypeGroupTbl(ServiceCarTypeGroupTbl instance);
    partial void DeleteServiceCarTypeGroupTbl(ServiceCarTypeGroupTbl instance);
    partial void InsertServiceDiscountTbl(ServiceDiscountTbl instance);
    partial void UpdateServiceDiscountTbl(ServiceDiscountTbl instance);
    partial void DeleteServiceDiscountTbl(ServiceDiscountTbl instance);
    partial void InsertServiceGroupTbl(ServiceGroupTbl instance);
    partial void UpdateServiceGroupTbl(ServiceGroupTbl instance);
    partial void DeleteServiceGroupTbl(ServiceGroupTbl instance);
    partial void InsertServiceOrder_ReportTbl(ServiceOrder_ReportTbl instance);
    partial void UpdateServiceOrder_ReportTbl(ServiceOrder_ReportTbl instance);
    partial void DeleteServiceOrder_ReportTbl(ServiceOrder_ReportTbl instance);
    partial void InsertServiceOrderDiscountTbl(ServiceOrderDiscountTbl instance);
    partial void UpdateServiceOrderDiscountTbl(ServiceOrderDiscountTbl instance);
    partial void DeleteServiceOrderDiscountTbl(ServiceOrderDiscountTbl instance);
    partial void InsertServiceOrderLatencyTbl(ServiceOrderLatencyTbl instance);
    partial void UpdateServiceOrderLatencyTbl(ServiceOrderLatencyTbl instance);
    partial void DeleteServiceOrderLatencyTbl(ServiceOrderLatencyTbl instance);
    partial void InsertServiceOrderProductDetailProductFieldsTbl(ServiceOrderProductDetailProductFieldsTbl instance);
    partial void UpdateServiceOrderProductDetailProductFieldsTbl(ServiceOrderProductDetailProductFieldsTbl instance);
    partial void DeleteServiceOrderProductDetailProductFieldsTbl(ServiceOrderProductDetailProductFieldsTbl instance);
    partial void InsertServiceOrderProductDetailTbl(ServiceOrderProductDetailTbl instance);
    partial void UpdateServiceOrderProductDetailTbl(ServiceOrderProductDetailTbl instance);
    partial void DeleteServiceOrderProductDetailTbl(ServiceOrderProductDetailTbl instance);
    partial void InsertServiceOrderServiceDetailTbl(ServiceOrderServiceDetailTbl instance);
    partial void UpdateServiceOrderServiceDetailTbl(ServiceOrderServiceDetailTbl instance);
    partial void DeleteServiceOrderServiceDetailTbl(ServiceOrderServiceDetailTbl instance);
    partial void InsertServiceOrderTbl(ServiceOrderTbl instance);
    partial void UpdateServiceOrderTbl(ServiceOrderTbl instance);
    partial void DeleteServiceOrderTbl(ServiceOrderTbl instance);
    partial void InsertServicePriceTariffTbl(ServicePriceTariffTbl instance);
    partial void UpdateServicePriceTariffTbl(ServicePriceTariffTbl instance);
    partial void DeleteServicePriceTariffTbl(ServicePriceTariffTbl instance);
    partial void InsertServiceTbl(ServiceTbl instance);
    partial void UpdateServiceTbl(ServiceTbl instance);
    partial void DeleteServiceTbl(ServiceTbl instance);
    partial void InsertServiceTimeTariffTbl(ServiceTimeTariffTbl instance);
    partial void UpdateServiceTimeTariffTbl(ServiceTimeTariffTbl instance);
    partial void DeleteServiceTimeTariffTbl(ServiceTimeTariffTbl instance);
    partial void InsertSettingTbl(SettingTbl instance);
    partial void UpdateSettingTbl(SettingTbl instance);
    partial void DeleteSettingTbl(SettingTbl instance);
    partial void InsertShopOrderDetailProductFieldsTbl(ShopOrderDetailProductFieldsTbl instance);
    partial void UpdateShopOrderDetailProductFieldsTbl(ShopOrderDetailProductFieldsTbl instance);
    partial void DeleteShopOrderDetailProductFieldsTbl(ShopOrderDetailProductFieldsTbl instance);
    partial void InsertShopOrderDetailTbl(ShopOrderDetailTbl instance);
    partial void UpdateShopOrderDetailTbl(ShopOrderDetailTbl instance);
    partial void DeleteShopOrderDetailTbl(ShopOrderDetailTbl instance);
    partial void InsertShopOrderDiscountTbl(ShopOrderDiscountTbl instance);
    partial void UpdateShopOrderDiscountTbl(ShopOrderDiscountTbl instance);
    partial void DeleteShopOrderDiscountTbl(ShopOrderDiscountTbl instance);
    partial void InsertShopOrderTbl(ShopOrderTbl instance);
    partial void UpdateShopOrderTbl(ShopOrderTbl instance);
    partial void DeleteShopOrderTbl(ShopOrderTbl instance);
    partial void InsertShopProductCommentTbl(ShopProductCommentTbl instance);
    partial void UpdateShopProductCommentTbl(ShopProductCommentTbl instance);
    partial void DeleteShopProductCommentTbl(ShopProductCommentTbl instance);
    partial void InsertSpecificationOptionTbl(SpecificationOptionTbl instance);
    partial void UpdateSpecificationOptionTbl(SpecificationOptionTbl instance);
    partial void DeleteSpecificationOptionTbl(SpecificationOptionTbl instance);
    partial void InsertSpecificationTbl(SpecificationTbl instance);
    partial void UpdateSpecificationTbl(SpecificationTbl instance);
    partial void DeleteSpecificationTbl(SpecificationTbl instance);
    partial void InsertSystemMessageTextTbl(SystemMessageTextTbl instance);
    partial void UpdateSystemMessageTextTbl(SystemMessageTextTbl instance);
    partial void DeleteSystemMessageTextTbl(SystemMessageTextTbl instance);
    partial void InsertTransactionTypeTbl(TransactionTypeTbl instance);
    partial void UpdateTransactionTypeTbl(TransactionTypeTbl instance);
    partial void DeleteTransactionTypeTbl(TransactionTypeTbl instance);
    partial void InsertUnitTbl(UnitTbl instance);
    partial void UpdateUnitTbl(UnitTbl instance);
    partial void DeleteUnitTbl(UnitTbl instance);
    partial void InsertUser_RoleTbl(User_RoleTbl instance);
    partial void UpdateUser_RoleTbl(User_RoleTbl instance);
    partial void DeleteUser_RoleTbl(User_RoleTbl instance);
    partial void InsertUserGeoTrackTbl(UserGeoTrackTbl instance);
    partial void UpdateUserGeoTrackTbl(UserGeoTrackTbl instance);
    partial void DeleteUserGeoTrackTbl(UserGeoTrackTbl instance);
    partial void InsertUserInactiveTimeTbl(UserInactiveTimeTbl instance);
    partial void UpdateUserInactiveTimeTbl(UserInactiveTimeTbl instance);
    partial void DeleteUserInactiveTimeTbl(UserInactiveTimeTbl instance);
    partial void InsertUserMessageTbl(UserMessageTbl instance);
    partial void UpdateUserMessageTbl(UserMessageTbl instance);
    partial void DeleteUserMessageTbl(UserMessageTbl instance);
    partial void InsertuserPushTbl(userPushTbl instance);
    partial void UpdateuserPushTbl(userPushTbl instance);
    partial void DeleteuserPushTbl(userPushTbl instance);
    partial void InsertUserTbl(UserTbl instance);
    partial void UpdateUserTbl(UserTbl instance);
    partial void DeleteUserTbl(UserTbl instance);
    #endregion
		
		public DataAccessDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CarBoyDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActiveDayTbl> ActiveDayTbls
		{
			get
			{
				return this.GetTable<ActiveDayTbl>();
			}
		}
		
		public System.Data.Linq.Table<versionControlTbl> versionControlTbls
		{
			get
			{
				return this.GetTable<versionControlTbl>();
			}
		}
		
		public System.Data.Linq.Table<AreaGeoTbl> AreaGeoTbls
		{
			get
			{
				return this.GetTable<AreaGeoTbl>();
			}
		}
		
		public System.Data.Linq.Table<AreaTbl> AreaTbls
		{
			get
			{
				return this.GetTable<AreaTbl>();
			}
		}
		
		public System.Data.Linq.Table<AreaToAreaTbl> AreaToAreaTbls
		{
			get
			{
				return this.GetTable<AreaToAreaTbl>();
			}
		}
		
		public System.Data.Linq.Table<AssetTbl> AssetTbls
		{
			get
			{
				return this.GetTable<AssetTbl>();
			}
		}
		
		public System.Data.Linq.Table<AttributeTbl> AttributeTbls
		{
			get
			{
				return this.GetTable<AttributeTbl>();
			}
		}
		
		public System.Data.Linq.Table<CarBrandTbl> CarBrandTbls
		{
			get
			{
				return this.GetTable<CarBrandTbl>();
			}
		}
		
		public System.Data.Linq.Table<CarTbl> CarTbls
		{
			get
			{
				return this.GetTable<CarTbl>();
			}
		}
		
		public System.Data.Linq.Table<CarType_ColorTbl> CarType_ColorTbls
		{
			get
			{
				return this.GetTable<CarType_ColorTbl>();
			}
		}
		
		public System.Data.Linq.Table<CarType_EngineVolumeTbl> CarType_EngineVolumeTbls
		{
			get
			{
				return this.GetTable<CarType_EngineVolumeTbl>();
			}
		}
		
		public System.Data.Linq.Table<CarTypeDetailsData> CarTypeDetailsDatas
		{
			get
			{
				return this.GetTable<CarTypeDetailsData>();
			}
		}
		
		public System.Data.Linq.Table<CarTypeTbl> CarTypeTbls
		{
			get
			{
				return this.GetTable<CarTypeTbl>();
			}
		}
		
		public System.Data.Linq.Table<CategoryTbl> CategoryTbls
		{
			get
			{
				return this.GetTable<CategoryTbl>();
			}
		}
		
		public System.Data.Linq.Table<ColorTbl> ColorTbls
		{
			get
			{
				return this.GetTable<ColorTbl>();
			}
		}
		
		public System.Data.Linq.Table<Customer_GiftCardTbl> Customer_GiftCardTbls
		{
			get
			{
				return this.GetTable<Customer_GiftCardTbl>();
			}
		}
		
		public System.Data.Linq.Table<CustomerAddressTbl> CustomerAddressTbls
		{
			get
			{
				return this.GetTable<CustomerAddressTbl>();
			}
		}
		
		public System.Data.Linq.Table<CustomerMessageTbl> CustomerMessageTbls
		{
			get
			{
				return this.GetTable<CustomerMessageTbl>();
			}
		}
		
		public System.Data.Linq.Table<CustomerPendingRateTbl> CustomerPendingRateTbls
		{
			get
			{
				return this.GetTable<CustomerPendingRateTbl>();
			}
		}
		
		public System.Data.Linq.Table<customerPushTbl> customerPushTbls
		{
			get
			{
				return this.GetTable<customerPushTbl>();
			}
		}
		
		public System.Data.Linq.Table<CustomerRateTbl> CustomerRateTbls
		{
			get
			{
				return this.GetTable<CustomerRateTbl>();
			}
		}
		
		public System.Data.Linq.Table<CustomerTbl> CustomerTbls
		{
			get
			{
				return this.GetTable<CustomerTbl>();
			}
		}
		
		public System.Data.Linq.Table<CustomerWalletTbl> CustomerWalletTbls
		{
			get
			{
				return this.GetTable<CustomerWalletTbl>();
			}
		}
		
		public System.Data.Linq.Table<CustomerWalletTransactionTbl> CustomerWalletTransactionTbls
		{
			get
			{
				return this.GetTable<CustomerWalletTransactionTbl>();
			}
		}
		
		public System.Data.Linq.Table<DayTbl> DayTbls
		{
			get
			{
				return this.GetTable<DayTbl>();
			}
		}
		
		public System.Data.Linq.Table<DistributorCancelerLogTbl> DistributorCancelerLogTbls
		{
			get
			{
				return this.GetTable<DistributorCancelerLogTbl>();
			}
		}
		
		public System.Data.Linq.Table<DistributorCancelingOrderTbl> DistributorCancelingOrderTbls
		{
			get
			{
				return this.GetTable<DistributorCancelingOrderTbl>();
			}
		}
		
		public System.Data.Linq.Table<DistributorStartLocationTbl> DistributorStartLocationTbls
		{
			get
			{
				return this.GetTable<DistributorStartLocationTbl>();
			}
		}
		
		public System.Data.Linq.Table<DistributorTimeSheetTbl> DistributorTimeSheetTbls
		{
			get
			{
				return this.GetTable<DistributorTimeSheetTbl>();
			}
		}
		
		public System.Data.Linq.Table<DraftDetailProductFieldsTbl> DraftDetailProductFieldsTbls
		{
			get
			{
				return this.GetTable<DraftDetailProductFieldsTbl>();
			}
		}
		
		public System.Data.Linq.Table<DraftDetailTbl> DraftDetailTbls
		{
			get
			{
				return this.GetTable<DraftDetailTbl>();
			}
		}
		
		public System.Data.Linq.Table<DraftTbl> DraftTbls
		{
			get
			{
				return this.GetTable<DraftTbl>();
			}
		}
		
		public System.Data.Linq.Table<EngineVolumeTbl> EngineVolumeTbls
		{
			get
			{
				return this.GetTable<EngineVolumeTbl>();
			}
		}
		
		public System.Data.Linq.Table<ExcludDaysTbl> ExcludDaysTbls
		{
			get
			{
				return this.GetTable<ExcludDaysTbl>();
			}
		}
		
		public System.Data.Linq.Table<GiftCardMellatTbl> GiftCardMellatTbls
		{
			get
			{
				return this.GetTable<GiftCardMellatTbl>();
			}
		}
		
		public System.Data.Linq.Table<GiftCardTbl> GiftCardTbls
		{
			get
			{
				return this.GetTable<GiftCardTbl>();
			}
		}
		
		public System.Data.Linq.Table<MBProto_sessionTbl> MBProto_sessionTbls
		{
			get
			{
				return this.GetTable<MBProto_sessionTbl>();
			}
		}
		
		public System.Data.Linq.Table<MBProto_user_sessionTbl> MBProto_user_sessionTbls
		{
			get
			{
				return this.GetTable<MBProto_user_sessionTbl>();
			}
		}
		
		public System.Data.Linq.Table<MBProtoObjectTbl> MBProtoObjectTbls
		{
			get
			{
				return this.GetTable<MBProtoObjectTbl>();
			}
		}
		
		public System.Data.Linq.Table<OnlinePayOrderDiscountTbl> OnlinePayOrderDiscountTbls
		{
			get
			{
				return this.GetTable<OnlinePayOrderDiscountTbl>();
			}
		}
		
		public System.Data.Linq.Table<PackageServiceTbl> PackageServiceTbls
		{
			get
			{
				return this.GetTable<PackageServiceTbl>();
			}
		}
		
		public System.Data.Linq.Table<PackageTbl> PackageTbls
		{
			get
			{
				return this.GetTable<PackageTbl>();
			}
		}
		
		public System.Data.Linq.Table<PaymentTbl> PaymentTbls
		{
			get
			{
				return this.GetTable<PaymentTbl>();
			}
		}
		
		public System.Data.Linq.Table<periodGiftCardTbl> periodGiftCardTbls
		{
			get
			{
				return this.GetTable<periodGiftCardTbl>();
			}
		}
		
		public System.Data.Linq.Table<PeriodTbl> PeriodTbls
		{
			get
			{
				return this.GetTable<PeriodTbl>();
			}
		}
		
		public System.Data.Linq.Table<PermissionTbl> PermissionTbls
		{
			get
			{
				return this.GetTable<PermissionTbl>();
			}
		}
		
		public System.Data.Linq.Table<Product_AttributeTbl> Product_AttributeTbls
		{
			get
			{
				return this.GetTable<Product_AttributeTbl>();
			}
		}
		
		public System.Data.Linq.Table<Product_CategoryTbl> Product_CategoryTbls
		{
			get
			{
				return this.GetTable<Product_CategoryTbl>();
			}
		}
		
		public System.Data.Linq.Table<Product_SellerTbl> Product_SellerTbls
		{
			get
			{
				return this.GetTable<Product_SellerTbl>();
			}
		}
		
		public System.Data.Linq.Table<Product_SpecificationOptionTbl> Product_SpecificationOptionTbls
		{
			get
			{
				return this.GetTable<Product_SpecificationOptionTbl>();
			}
		}
		
		public System.Data.Linq.Table<ProductCompactDetailsTbl> ProductCompactDetailsTbls
		{
			get
			{
				return this.GetTable<ProductCompactDetailsTbl>();
			}
		}
		
		public System.Data.Linq.Table<ProductCompactTbl> ProductCompactTbls
		{
			get
			{
				return this.GetTable<ProductCompactTbl>();
			}
		}
		
		public System.Data.Linq.Table<ProductContentTbl> ProductContentTbls
		{
			get
			{
				return this.GetTable<ProductContentTbl>();
			}
		}
		
		public System.Data.Linq.Table<ProductDiscountProductFieldsTbl> ProductDiscountProductFieldsTbls
		{
			get
			{
				return this.GetTable<ProductDiscountProductFieldsTbl>();
			}
		}
		
		public System.Data.Linq.Table<ProductDiscountTbl> ProductDiscountTbls
		{
			get
			{
				return this.GetTable<ProductDiscountTbl>();
			}
		}
		
		public System.Data.Linq.Table<ProductImageTbl> ProductImageTbls
		{
			get
			{
				return this.GetTable<ProductImageTbl>();
			}
		}
		
		public System.Data.Linq.Table<ProductTbl> ProductTbls
		{
			get
			{
				return this.GetTable<ProductTbl>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptDetailProductFieldsTbl> ReceiptDetailProductFieldsTbls
		{
			get
			{
				return this.GetTable<ReceiptDetailProductFieldsTbl>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptDetailTbl> ReceiptDetailTbls
		{
			get
			{
				return this.GetTable<ReceiptDetailTbl>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptTbl> ReceiptTbls
		{
			get
			{
				return this.GetTable<ReceiptTbl>();
			}
		}
		
		public System.Data.Linq.Table<ReferalGiftSettingTbl> ReferalGiftSettingTbls
		{
			get
			{
				return this.GetTable<ReferalGiftSettingTbl>();
			}
		}
		
		public System.Data.Linq.Table<Repairman_AreaTbl> Repairman_AreaTbls
		{
			get
			{
				return this.GetTable<Repairman_AreaTbl>();
			}
		}
		
		public System.Data.Linq.Table<RepairmanCancelerLogTbl> RepairmanCancelerLogTbls
		{
			get
			{
				return this.GetTable<RepairmanCancelerLogTbl>();
			}
		}
		
		public System.Data.Linq.Table<RepairmanCancelingOrderTbl> RepairmanCancelingOrderTbls
		{
			get
			{
				return this.GetTable<RepairmanCancelingOrderTbl>();
			}
		}
		
		public System.Data.Linq.Table<repairmanRoleDetailsTbl> repairmanRoleDetailsTbls
		{
			get
			{
				return this.GetTable<repairmanRoleDetailsTbl>();
			}
		}
		
		public System.Data.Linq.Table<repairmanRoleTbl> repairmanRoleTbls
		{
			get
			{
				return this.GetTable<repairmanRoleTbl>();
			}
		}
		
		public System.Data.Linq.Table<RepairmanTimeSheet1Tbl> RepairmanTimeSheet1Tbls
		{
			get
			{
				return this.GetTable<RepairmanTimeSheet1Tbl>();
			}
		}
		
		public System.Data.Linq.Table<Report_CustomerAmarTbl> Report_CustomerAmarTbls
		{
			get
			{
				return this.GetTable<Report_CustomerAmarTbl>();
			}
		}
		
		public System.Data.Linq.Table<ReturnDetailProductFieldsTbl> ReturnDetailProductFieldsTbls
		{
			get
			{
				return this.GetTable<ReturnDetailProductFieldsTbl>();
			}
		}
		
		public System.Data.Linq.Table<ReturnDetailTbl> ReturnDetailTbls
		{
			get
			{
				return this.GetTable<ReturnDetailTbl>();
			}
		}
		
		public System.Data.Linq.Table<ReturnTbl> ReturnTbls
		{
			get
			{
				return this.GetTable<ReturnTbl>();
			}
		}
		
		public System.Data.Linq.Table<Role_PermissionTbl> Role_PermissionTbls
		{
			get
			{
				return this.GetTable<Role_PermissionTbl>();
			}
		}
		
		public System.Data.Linq.Table<RoleTbl> RoleTbls
		{
			get
			{
				return this.GetTable<RoleTbl>();
			}
		}
		
		public System.Data.Linq.Table<SellerTbl> SellerTbls
		{
			get
			{
				return this.GetTable<SellerTbl>();
			}
		}
		
		public System.Data.Linq.Table<Service_CarTypeTbl> Service_CarTypeTbls
		{
			get
			{
				return this.GetTable<Service_CarTypeTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCarType_RepairemanRoleTbl> ServiceCarType_RepairemanRoleTbls
		{
			get
			{
				return this.GetTable<ServiceCarType_RepairemanRoleTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCarTypeGroup_EngineVolumeTbl> ServiceCarTypeGroup_EngineVolumeTbls
		{
			get
			{
				return this.GetTable<ServiceCarTypeGroup_EngineVolumeTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCarTypeGroupProductTbl> ServiceCarTypeGroupProductTbls
		{
			get
			{
				return this.GetTable<ServiceCarTypeGroupProductTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCarTypeGroupTbl> ServiceCarTypeGroupTbls
		{
			get
			{
				return this.GetTable<ServiceCarTypeGroupTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDiscountTbl> ServiceDiscountTbls
		{
			get
			{
				return this.GetTable<ServiceDiscountTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceGroupTbl> ServiceGroupTbls
		{
			get
			{
				return this.GetTable<ServiceGroupTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceOrder_ReportTbl> ServiceOrder_ReportTbls
		{
			get
			{
				return this.GetTable<ServiceOrder_ReportTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceOrderDiscountTbl> ServiceOrderDiscountTbls
		{
			get
			{
				return this.GetTable<ServiceOrderDiscountTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceOrderLatencyTbl> ServiceOrderLatencyTbls
		{
			get
			{
				return this.GetTable<ServiceOrderLatencyTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceOrderProductDetailProductFieldsTbl> ServiceOrderProductDetailProductFieldsTbls
		{
			get
			{
				return this.GetTable<ServiceOrderProductDetailProductFieldsTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceOrderProductDetailTbl> ServiceOrderProductDetailTbls
		{
			get
			{
				return this.GetTable<ServiceOrderProductDetailTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceOrderServiceDetailTbl> ServiceOrderServiceDetailTbls
		{
			get
			{
				return this.GetTable<ServiceOrderServiceDetailTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceOrderTbl> ServiceOrderTbls
		{
			get
			{
				return this.GetTable<ServiceOrderTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServicePriceTariffTbl> ServicePriceTariffTbls
		{
			get
			{
				return this.GetTable<ServicePriceTariffTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceTbl> ServiceTbls
		{
			get
			{
				return this.GetTable<ServiceTbl>();
			}
		}
		
		public System.Data.Linq.Table<ServiceTimeTariffTbl> ServiceTimeTariffTbls
		{
			get
			{
				return this.GetTable<ServiceTimeTariffTbl>();
			}
		}
		
		public System.Data.Linq.Table<SettingTbl> SettingTbls
		{
			get
			{
				return this.GetTable<SettingTbl>();
			}
		}
		
		public System.Data.Linq.Table<ShopOrderDetailProductFieldsTbl> ShopOrderDetailProductFieldsTbls
		{
			get
			{
				return this.GetTable<ShopOrderDetailProductFieldsTbl>();
			}
		}
		
		public System.Data.Linq.Table<ShopOrderDetailTbl> ShopOrderDetailTbls
		{
			get
			{
				return this.GetTable<ShopOrderDetailTbl>();
			}
		}
		
		public System.Data.Linq.Table<ShopOrderDiscountTbl> ShopOrderDiscountTbls
		{
			get
			{
				return this.GetTable<ShopOrderDiscountTbl>();
			}
		}
		
		public System.Data.Linq.Table<ShopOrderTbl> ShopOrderTbls
		{
			get
			{
				return this.GetTable<ShopOrderTbl>();
			}
		}
		
		public System.Data.Linq.Table<ShopProductCommentTbl> ShopProductCommentTbls
		{
			get
			{
				return this.GetTable<ShopProductCommentTbl>();
			}
		}
		
		public System.Data.Linq.Table<SpecificationOptionTbl> SpecificationOptionTbls
		{
			get
			{
				return this.GetTable<SpecificationOptionTbl>();
			}
		}
		
		public System.Data.Linq.Table<SpecificationTbl> SpecificationTbls
		{
			get
			{
				return this.GetTable<SpecificationTbl>();
			}
		}
		
		public System.Data.Linq.Table<SystemMessageTextTbl> SystemMessageTextTbls
		{
			get
			{
				return this.GetTable<SystemMessageTextTbl>();
			}
		}
		
		public System.Data.Linq.Table<TransactionTypeTbl> TransactionTypeTbls
		{
			get
			{
				return this.GetTable<TransactionTypeTbl>();
			}
		}
		
		public System.Data.Linq.Table<UnitTbl> UnitTbls
		{
			get
			{
				return this.GetTable<UnitTbl>();
			}
		}
		
		public System.Data.Linq.Table<User_RoleTbl> User_RoleTbls
		{
			get
			{
				return this.GetTable<User_RoleTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserGeoTrackTbl> UserGeoTrackTbls
		{
			get
			{
				return this.GetTable<UserGeoTrackTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserInactiveTimeTbl> UserInactiveTimeTbls
		{
			get
			{
				return this.GetTable<UserInactiveTimeTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserMessageTbl> UserMessageTbls
		{
			get
			{
				return this.GetTable<UserMessageTbl>();
			}
		}
		
		public System.Data.Linq.Table<userPushTbl> userPushTbls
		{
			get
			{
				return this.GetTable<userPushTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserTbl> UserTbls
		{
			get
			{
				return this.GetTable<UserTbl>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActiveDayTbl")]
	public partial class ActiveDayTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _date;
		
		private bool _isActive;
		
		private EntitySet<DistributorTimeSheetTbl> _DistributorTimeSheetTbls;
		
		private EntitySet<RepairmanTimeSheet1Tbl> _RepairmanTimeSheet1Tbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public ActiveDayTbl()
		{
			this._DistributorTimeSheetTbls = new EntitySet<DistributorTimeSheetTbl>(new Action<DistributorTimeSheetTbl>(this.attach_DistributorTimeSheetTbls), new Action<DistributorTimeSheetTbl>(this.detach_DistributorTimeSheetTbls));
			this._RepairmanTimeSheet1Tbls = new EntitySet<RepairmanTimeSheet1Tbl>(new Action<RepairmanTimeSheet1Tbl>(this.attach_RepairmanTimeSheet1Tbls), new Action<RepairmanTimeSheet1Tbl>(this.detach_RepairmanTimeSheet1Tbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveDayTbl_DistributorTimeSheetTbl", Storage="_DistributorTimeSheetTbls", ThisKey="ID", OtherKey="activeDayId")]
		public EntitySet<DistributorTimeSheetTbl> DistributorTimeSheetTbls
		{
			get
			{
				return this._DistributorTimeSheetTbls;
			}
			set
			{
				this._DistributorTimeSheetTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveDayTbl_RepairmanTimeSheet1Tbl", Storage="_RepairmanTimeSheet1Tbls", ThisKey="ID", OtherKey="activeDayId")]
		public EntitySet<RepairmanTimeSheet1Tbl> RepairmanTimeSheet1Tbls
		{
			get
			{
				return this._RepairmanTimeSheet1Tbls;
			}
			set
			{
				this._RepairmanTimeSheet1Tbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DistributorTimeSheetTbls(DistributorTimeSheetTbl entity)
		{
			this.SendPropertyChanging();
			entity.ActiveDayTbl = this;
		}
		
		private void detach_DistributorTimeSheetTbls(DistributorTimeSheetTbl entity)
		{
			this.SendPropertyChanging();
			entity.ActiveDayTbl = null;
		}
		
		private void attach_RepairmanTimeSheet1Tbls(RepairmanTimeSheet1Tbl entity)
		{
			this.SendPropertyChanging();
			entity.ActiveDayTbl = this;
		}
		
		private void detach_RepairmanTimeSheet1Tbls(RepairmanTimeSheet1Tbl entity)
		{
			this.SendPropertyChanging();
			entity.ActiveDayTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.versionControlTbl")]
	public partial class versionControlTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _platform;
		
		private string _platformVersion;
		
		private string _bundle;
		
		private string _versionCode;
		
		private string _url;
		
		private System.DateTime _regDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnplatformChanging(string value);
    partial void OnplatformChanged();
    partial void OnplatformVersionChanging(string value);
    partial void OnplatformVersionChanged();
    partial void OnbundleChanging(string value);
    partial void OnbundleChanged();
    partial void OnversionCodeChanging(string value);
    partial void OnversionCodeChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public versionControlTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_platform", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string platform
		{
			get
			{
				return this._platform;
			}
			set
			{
				if ((this._platform != value))
				{
					this.OnplatformChanging(value);
					this.SendPropertyChanging();
					this._platform = value;
					this.SendPropertyChanged("platform");
					this.OnplatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_platformVersion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string platformVersion
		{
			get
			{
				return this._platformVersion;
			}
			set
			{
				if ((this._platformVersion != value))
				{
					this.OnplatformVersionChanging(value);
					this.SendPropertyChanging();
					this._platformVersion = value;
					this.SendPropertyChanged("platformVersion");
					this.OnplatformVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bundle", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string bundle
		{
			get
			{
				return this._bundle;
			}
			set
			{
				if ((this._bundle != value))
				{
					this.OnbundleChanging(value);
					this.SendPropertyChanging();
					this._bundle = value;
					this.SendPropertyChanged("bundle");
					this.OnbundleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_versionCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string versionCode
		{
			get
			{
				return this._versionCode;
			}
			set
			{
				if ((this._versionCode != value))
				{
					this.OnversionCodeChanging(value);
					this.SendPropertyChanging();
					this._versionCode = value;
					this.SendPropertyChanged("versionCode");
					this.OnversionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AreaGeoTbl")]
	public partial class AreaGeoTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _areaId;
		
		private double _latitude;
		
		private double _longitude;
		
		private EntityRef<AreaTbl> _AreaTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnareaIdChanging(long value);
    partial void OnareaIdChanged();
    partial void OnlatitudeChanging(double value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(double value);
    partial void OnlongitudeChanged();
    #endregion
		
		public AreaGeoTbl()
		{
			this._AreaTbl = default(EntityRef<AreaTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_areaId", DbType="BigInt NOT NULL")]
		public long areaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					if (this._AreaTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnareaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("areaId");
					this.OnareaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float NOT NULL")]
		public double latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float NOT NULL")]
		public double longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTbl_AreaGeoTbl", Storage="_AreaTbl", ThisKey="areaId", OtherKey="ID", IsForeignKey=true)]
		public AreaTbl AreaTbl
		{
			get
			{
				return this._AreaTbl.Entity;
			}
			set
			{
				AreaTbl previousValue = this._AreaTbl.Entity;
				if (((previousValue != value) 
							|| (this._AreaTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaTbl.Entity = null;
						previousValue.AreaGeoTbls.Remove(this);
					}
					this._AreaTbl.Entity = value;
					if ((value != null))
					{
						value.AreaGeoTbls.Add(this);
						this._areaId = value.ID;
					}
					else
					{
						this._areaId = default(long);
					}
					this.SendPropertyChanged("AreaTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AreaTbl")]
	public partial class AreaTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private System.TimeSpan _time;
		
		private EntitySet<AreaGeoTbl> _AreaGeoTbls;
		
		private EntitySet<AreaToAreaTbl> _AreaToAreaTbls;
		
		private EntitySet<AreaToAreaTbl> _AreaToAreaTbls1;
		
		private EntitySet<Repairman_AreaTbl> _Repairman_AreaTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntimeChanging(System.TimeSpan value);
    partial void OntimeChanged();
    #endregion
		
		public AreaTbl()
		{
			this._AreaGeoTbls = new EntitySet<AreaGeoTbl>(new Action<AreaGeoTbl>(this.attach_AreaGeoTbls), new Action<AreaGeoTbl>(this.detach_AreaGeoTbls));
			this._AreaToAreaTbls = new EntitySet<AreaToAreaTbl>(new Action<AreaToAreaTbl>(this.attach_AreaToAreaTbls), new Action<AreaToAreaTbl>(this.detach_AreaToAreaTbls));
			this._AreaToAreaTbls1 = new EntitySet<AreaToAreaTbl>(new Action<AreaToAreaTbl>(this.attach_AreaToAreaTbls1), new Action<AreaToAreaTbl>(this.detach_AreaToAreaTbls1));
			this._Repairman_AreaTbls = new EntitySet<Repairman_AreaTbl>(new Action<Repairman_AreaTbl>(this.attach_Repairman_AreaTbls), new Action<Repairman_AreaTbl>(this.detach_Repairman_AreaTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="Time NOT NULL")]
		public System.TimeSpan time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTbl_AreaGeoTbl", Storage="_AreaGeoTbls", ThisKey="ID", OtherKey="areaId")]
		public EntitySet<AreaGeoTbl> AreaGeoTbls
		{
			get
			{
				return this._AreaGeoTbls;
			}
			set
			{
				this._AreaGeoTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTbl_AreaToAreaTbl", Storage="_AreaToAreaTbls", ThisKey="ID", OtherKey="fromAreaId")]
		public EntitySet<AreaToAreaTbl> AreaToAreaTbls
		{
			get
			{
				return this._AreaToAreaTbls;
			}
			set
			{
				this._AreaToAreaTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTbl_AreaToAreaTbl1", Storage="_AreaToAreaTbls1", ThisKey="ID", OtherKey="toAreaId")]
		public EntitySet<AreaToAreaTbl> AreaToAreaTbls1
		{
			get
			{
				return this._AreaToAreaTbls1;
			}
			set
			{
				this._AreaToAreaTbls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTbl_Repairman_AreaTbl", Storage="_Repairman_AreaTbls", ThisKey="ID", OtherKey="areaId")]
		public EntitySet<Repairman_AreaTbl> Repairman_AreaTbls
		{
			get
			{
				return this._Repairman_AreaTbls;
			}
			set
			{
				this._Repairman_AreaTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AreaGeoTbls(AreaGeoTbl entity)
		{
			this.SendPropertyChanging();
			entity.AreaTbl = this;
		}
		
		private void detach_AreaGeoTbls(AreaGeoTbl entity)
		{
			this.SendPropertyChanging();
			entity.AreaTbl = null;
		}
		
		private void attach_AreaToAreaTbls(AreaToAreaTbl entity)
		{
			this.SendPropertyChanging();
			entity.AreaTbl = this;
		}
		
		private void detach_AreaToAreaTbls(AreaToAreaTbl entity)
		{
			this.SendPropertyChanging();
			entity.AreaTbl = null;
		}
		
		private void attach_AreaToAreaTbls1(AreaToAreaTbl entity)
		{
			this.SendPropertyChanging();
			entity.AreaTbl1 = this;
		}
		
		private void detach_AreaToAreaTbls1(AreaToAreaTbl entity)
		{
			this.SendPropertyChanging();
			entity.AreaTbl1 = null;
		}
		
		private void attach_Repairman_AreaTbls(Repairman_AreaTbl entity)
		{
			this.SendPropertyChanging();
			entity.AreaTbl = this;
		}
		
		private void detach_Repairman_AreaTbls(Repairman_AreaTbl entity)
		{
			this.SendPropertyChanging();
			entity.AreaTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AreaToAreaTbl")]
	public partial class AreaToAreaTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _fromAreaId;
		
		private long _toAreaId;
		
		private int _time;
		
		private EntityRef<AreaTbl> _AreaTbl;
		
		private EntityRef<AreaTbl> _AreaTbl1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnfromAreaIdChanging(long value);
    partial void OnfromAreaIdChanged();
    partial void OntoAreaIdChanging(long value);
    partial void OntoAreaIdChanged();
    partial void OntimeChanging(int value);
    partial void OntimeChanged();
    #endregion
		
		public AreaToAreaTbl()
		{
			this._AreaTbl = default(EntityRef<AreaTbl>);
			this._AreaTbl1 = default(EntityRef<AreaTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromAreaId", DbType="BigInt NOT NULL")]
		public long fromAreaId
		{
			get
			{
				return this._fromAreaId;
			}
			set
			{
				if ((this._fromAreaId != value))
				{
					if (this._AreaTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfromAreaIdChanging(value);
					this.SendPropertyChanging();
					this._fromAreaId = value;
					this.SendPropertyChanged("fromAreaId");
					this.OnfromAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toAreaId", DbType="BigInt NOT NULL")]
		public long toAreaId
		{
			get
			{
				return this._toAreaId;
			}
			set
			{
				if ((this._toAreaId != value))
				{
					if (this._AreaTbl1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntoAreaIdChanging(value);
					this.SendPropertyChanging();
					this._toAreaId = value;
					this.SendPropertyChanged("toAreaId");
					this.OntoAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="Int NOT NULL")]
		public int time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTbl_AreaToAreaTbl", Storage="_AreaTbl", ThisKey="fromAreaId", OtherKey="ID", IsForeignKey=true)]
		public AreaTbl AreaTbl
		{
			get
			{
				return this._AreaTbl.Entity;
			}
			set
			{
				AreaTbl previousValue = this._AreaTbl.Entity;
				if (((previousValue != value) 
							|| (this._AreaTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaTbl.Entity = null;
						previousValue.AreaToAreaTbls.Remove(this);
					}
					this._AreaTbl.Entity = value;
					if ((value != null))
					{
						value.AreaToAreaTbls.Add(this);
						this._fromAreaId = value.ID;
					}
					else
					{
						this._fromAreaId = default(long);
					}
					this.SendPropertyChanged("AreaTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTbl_AreaToAreaTbl1", Storage="_AreaTbl1", ThisKey="toAreaId", OtherKey="ID", IsForeignKey=true)]
		public AreaTbl AreaTbl1
		{
			get
			{
				return this._AreaTbl1.Entity;
			}
			set
			{
				AreaTbl previousValue = this._AreaTbl1.Entity;
				if (((previousValue != value) 
							|| (this._AreaTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaTbl1.Entity = null;
						previousValue.AreaToAreaTbls1.Remove(this);
					}
					this._AreaTbl1.Entity = value;
					if ((value != null))
					{
						value.AreaToAreaTbls1.Add(this);
						this._toAreaId = value.ID;
					}
					else
					{
						this._toAreaId = default(long);
					}
					this.SendPropertyChanged("AreaTbl1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetTbl")]
	public partial class AssetTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userID;
		
		private long _productID;
		
		private string _productCode;
		
		private int _quantity;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIDChanging(long value);
    partial void OnuserIDChanged();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public AssetTbl()
		{
			this._ProductTbl = default(EntityRef<ProductTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="BigInt NOT NULL")]
		public long userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL")]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_AssetTbl", Storage="_ProductTbl", ThisKey="productID", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.AssetTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTbls.Add(this);
						this._productID = value.ID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_AssetTbl", Storage="_UserTbl", ThisKey="userID", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.AssetTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTbls.Add(this);
						this._userID = value.ID;
					}
					else
					{
						this._userID = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttributeTbl")]
	public partial class AttributeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private EntitySet<Product_AttributeTbl> _Product_AttributeTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public AttributeTbl()
		{
			this._Product_AttributeTbls = new EntitySet<Product_AttributeTbl>(new Action<Product_AttributeTbl>(this.attach_Product_AttributeTbls), new Action<Product_AttributeTbl>(this.detach_Product_AttributeTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeTbl_Product_AttributeTbl", Storage="_Product_AttributeTbls", ThisKey="ID", OtherKey="attributeId")]
		public EntitySet<Product_AttributeTbl> Product_AttributeTbls
		{
			get
			{
				return this._Product_AttributeTbls;
			}
			set
			{
				this._Product_AttributeTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_AttributeTbls(Product_AttributeTbl entity)
		{
			this.SendPropertyChanging();
			entity.AttributeTbl = this;
		}
		
		private void detach_Product_AttributeTbls(Product_AttributeTbl entity)
		{
			this.SendPropertyChanging();
			entity.AttributeTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarBrandTbl")]
	public partial class CarBrandTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _image;
		
		private long _priority;
		
		private byte _status;
		
		private EntitySet<CarTypeTbl> _CarTypeTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnpriorityChanging(long value);
    partial void OnpriorityChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public CarBrandTbl()
		{
			this._CarTypeTbls = new EntitySet<CarTypeTbl>(new Action<CarTypeTbl>(this.attach_CarTypeTbls), new Action<CarTypeTbl>(this.detach_CarTypeTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="BigInt NOT NULL")]
		public long priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarBrandTbl_CarTypeTbl", Storage="_CarTypeTbls", ThisKey="ID", OtherKey="carBrandId")]
		public EntitySet<CarTypeTbl> CarTypeTbls
		{
			get
			{
				return this._CarTypeTbls;
			}
			set
			{
				this._CarTypeTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarTypeTbls(CarTypeTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarBrandTbl = this;
		}
		
		private void detach_CarTypeTbls(CarTypeTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarBrandTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarTbl")]
	public partial class CarTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _plateNumber;
		
		private long _carTypeId;
		
		private long _customerId;
		
		private long _colorID;
		
		private int _kilometer;
		
		private int _year;
		
		private System.DateTime _regDate;
		
		private byte _status;
		
		private long _engineVolumeID;
		
		private EntitySet<PeriodTbl> _PeriodTbls;
		
		private EntitySet<ServiceOrderServiceDetailTbl> _ServiceOrderServiceDetailTbls;
		
		private EntitySet<ServiceOrderTbl> _ServiceOrderTbls;
		
		private EntityRef<CarTypeTbl> _CarTypeTbl;
		
		private EntityRef<ColorTbl> _ColorTbl;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<EngineVolumeTbl> _EngineVolumeTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnplateNumberChanging(string value);
    partial void OnplateNumberChanged();
    partial void OncarTypeIdChanging(long value);
    partial void OncarTypeIdChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OncolorIDChanging(long value);
    partial void OncolorIDChanged();
    partial void OnkilometerChanging(int value);
    partial void OnkilometerChanged();
    partial void OnyearChanging(int value);
    partial void OnyearChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnengineVolumeIDChanging(long value);
    partial void OnengineVolumeIDChanged();
    #endregion
		
		public CarTbl()
		{
			this._PeriodTbls = new EntitySet<PeriodTbl>(new Action<PeriodTbl>(this.attach_PeriodTbls), new Action<PeriodTbl>(this.detach_PeriodTbls));
			this._ServiceOrderServiceDetailTbls = new EntitySet<ServiceOrderServiceDetailTbl>(new Action<ServiceOrderServiceDetailTbl>(this.attach_ServiceOrderServiceDetailTbls), new Action<ServiceOrderServiceDetailTbl>(this.detach_ServiceOrderServiceDetailTbls));
			this._ServiceOrderTbls = new EntitySet<ServiceOrderTbl>(new Action<ServiceOrderTbl>(this.attach_ServiceOrderTbls), new Action<ServiceOrderTbl>(this.detach_ServiceOrderTbls));
			this._CarTypeTbl = default(EntityRef<CarTypeTbl>);
			this._ColorTbl = default(EntityRef<ColorTbl>);
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._EngineVolumeTbl = default(EntityRef<EngineVolumeTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plateNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string plateNumber
		{
			get
			{
				return this._plateNumber;
			}
			set
			{
				if ((this._plateNumber != value))
				{
					this.OnplateNumberChanging(value);
					this.SendPropertyChanging();
					this._plateNumber = value;
					this.SendPropertyChanged("plateNumber");
					this.OnplateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carTypeId", DbType="BigInt NOT NULL")]
		public long carTypeId
		{
			get
			{
				return this._carTypeId;
			}
			set
			{
				if ((this._carTypeId != value))
				{
					if (this._CarTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncarTypeIdChanging(value);
					this.SendPropertyChanging();
					this._carTypeId = value;
					this.SendPropertyChanged("carTypeId");
					this.OncarTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colorID", DbType="BigInt NOT NULL")]
		public long colorID
		{
			get
			{
				return this._colorID;
			}
			set
			{
				if ((this._colorID != value))
				{
					if (this._ColorTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolorIDChanging(value);
					this.SendPropertyChanging();
					this._colorID = value;
					this.SendPropertyChanged("colorID");
					this.OncolorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kilometer", DbType="Int NOT NULL")]
		public int kilometer
		{
			get
			{
				return this._kilometer;
			}
			set
			{
				if ((this._kilometer != value))
				{
					this.OnkilometerChanging(value);
					this.SendPropertyChanging();
					this._kilometer = value;
					this.SendPropertyChanged("kilometer");
					this.OnkilometerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int NOT NULL")]
		public int year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_engineVolumeID", DbType="BigInt NOT NULL")]
		public long engineVolumeID
		{
			get
			{
				return this._engineVolumeID;
			}
			set
			{
				if ((this._engineVolumeID != value))
				{
					if (this._EngineVolumeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnengineVolumeIDChanging(value);
					this.SendPropertyChanging();
					this._engineVolumeID = value;
					this.SendPropertyChanged("engineVolumeID");
					this.OnengineVolumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTbl_PeriodTbl", Storage="_PeriodTbls", ThisKey="ID", OtherKey="carId")]
		public EntitySet<PeriodTbl> PeriodTbls
		{
			get
			{
				return this._PeriodTbls;
			}
			set
			{
				this._PeriodTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTbl_ServiceOrderServiceDetailTbl", Storage="_ServiceOrderServiceDetailTbls", ThisKey="ID", OtherKey="carId")]
		public EntitySet<ServiceOrderServiceDetailTbl> ServiceOrderServiceDetailTbls
		{
			get
			{
				return this._ServiceOrderServiceDetailTbls;
			}
			set
			{
				this._ServiceOrderServiceDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTbl_ServiceOrderTbl", Storage="_ServiceOrderTbls", ThisKey="ID", OtherKey="carId")]
		public EntitySet<ServiceOrderTbl> ServiceOrderTbls
		{
			get
			{
				return this._ServiceOrderTbls;
			}
			set
			{
				this._ServiceOrderTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTypeTbl_CarTbl", Storage="_CarTypeTbl", ThisKey="carTypeId", OtherKey="ID", IsForeignKey=true)]
		public CarTypeTbl CarTypeTbl
		{
			get
			{
				return this._CarTypeTbl.Entity;
			}
			set
			{
				CarTypeTbl previousValue = this._CarTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._CarTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarTypeTbl.Entity = null;
						previousValue.CarTbls.Remove(this);
					}
					this._CarTypeTbl.Entity = value;
					if ((value != null))
					{
						value.CarTbls.Add(this);
						this._carTypeId = value.ID;
					}
					else
					{
						this._carTypeId = default(long);
					}
					this.SendPropertyChanged("CarTypeTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColorTbl_CarTbl", Storage="_ColorTbl", ThisKey="colorID", OtherKey="ID", IsForeignKey=true)]
		public ColorTbl ColorTbl
		{
			get
			{
				return this._ColorTbl.Entity;
			}
			set
			{
				ColorTbl previousValue = this._ColorTbl.Entity;
				if (((previousValue != value) 
							|| (this._ColorTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ColorTbl.Entity = null;
						previousValue.CarTbls.Remove(this);
					}
					this._ColorTbl.Entity = value;
					if ((value != null))
					{
						value.CarTbls.Add(this);
						this._colorID = value.ID;
					}
					else
					{
						this._colorID = default(long);
					}
					this.SendPropertyChanged("ColorTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CarTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.CarTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.CarTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngineVolumeTbl_CarTbl", Storage="_EngineVolumeTbl", ThisKey="engineVolumeID", OtherKey="ID", IsForeignKey=true)]
		public EngineVolumeTbl EngineVolumeTbl
		{
			get
			{
				return this._EngineVolumeTbl.Entity;
			}
			set
			{
				EngineVolumeTbl previousValue = this._EngineVolumeTbl.Entity;
				if (((previousValue != value) 
							|| (this._EngineVolumeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EngineVolumeTbl.Entity = null;
						previousValue.CarTbls.Remove(this);
					}
					this._EngineVolumeTbl.Entity = value;
					if ((value != null))
					{
						value.CarTbls.Add(this);
						this._engineVolumeID = value.ID;
					}
					else
					{
						this._engineVolumeID = default(long);
					}
					this.SendPropertyChanged("EngineVolumeTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PeriodTbls(PeriodTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTbl = this;
		}
		
		private void detach_PeriodTbls(PeriodTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTbl = null;
		}
		
		private void attach_ServiceOrderServiceDetailTbls(ServiceOrderServiceDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTbl = this;
		}
		
		private void detach_ServiceOrderServiceDetailTbls(ServiceOrderServiceDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTbl = null;
		}
		
		private void attach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTbl = this;
		}
		
		private void detach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarType_ColorTbl")]
	public partial class CarType_ColorTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _carTypeID;
		
		private long _colorID;
		
		private long _priority;
		
		private EntityRef<CarTypeTbl> _CarTypeTbl;
		
		private EntityRef<ColorTbl> _ColorTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncarTypeIDChanging(long value);
    partial void OncarTypeIDChanged();
    partial void OncolorIDChanging(long value);
    partial void OncolorIDChanged();
    partial void OnpriorityChanging(long value);
    partial void OnpriorityChanged();
    #endregion
		
		public CarType_ColorTbl()
		{
			this._CarTypeTbl = default(EntityRef<CarTypeTbl>);
			this._ColorTbl = default(EntityRef<ColorTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carTypeID", DbType="BigInt NOT NULL")]
		public long carTypeID
		{
			get
			{
				return this._carTypeID;
			}
			set
			{
				if ((this._carTypeID != value))
				{
					if (this._CarTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._carTypeID = value;
					this.SendPropertyChanged("carTypeID");
					this.OncarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colorID", DbType="BigInt NOT NULL")]
		public long colorID
		{
			get
			{
				return this._colorID;
			}
			set
			{
				if ((this._colorID != value))
				{
					if (this._ColorTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolorIDChanging(value);
					this.SendPropertyChanging();
					this._colorID = value;
					this.SendPropertyChanged("colorID");
					this.OncolorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="BigInt NOT NULL")]
		public long priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTypeTbl_CarType_ColorTbl", Storage="_CarTypeTbl", ThisKey="carTypeID", OtherKey="ID", IsForeignKey=true)]
		public CarTypeTbl CarTypeTbl
		{
			get
			{
				return this._CarTypeTbl.Entity;
			}
			set
			{
				CarTypeTbl previousValue = this._CarTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._CarTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarTypeTbl.Entity = null;
						previousValue.CarType_ColorTbls.Remove(this);
					}
					this._CarTypeTbl.Entity = value;
					if ((value != null))
					{
						value.CarType_ColorTbls.Add(this);
						this._carTypeID = value.ID;
					}
					else
					{
						this._carTypeID = default(long);
					}
					this.SendPropertyChanged("CarTypeTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColorTbl_CarType_ColorTbl", Storage="_ColorTbl", ThisKey="colorID", OtherKey="ID", IsForeignKey=true)]
		public ColorTbl ColorTbl
		{
			get
			{
				return this._ColorTbl.Entity;
			}
			set
			{
				ColorTbl previousValue = this._ColorTbl.Entity;
				if (((previousValue != value) 
							|| (this._ColorTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ColorTbl.Entity = null;
						previousValue.CarType_ColorTbls.Remove(this);
					}
					this._ColorTbl.Entity = value;
					if ((value != null))
					{
						value.CarType_ColorTbls.Add(this);
						this._colorID = value.ID;
					}
					else
					{
						this._colorID = default(long);
					}
					this.SendPropertyChanged("ColorTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarType_EngineVolumeTbl")]
	public partial class CarType_EngineVolumeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _carTypeID;
		
		private long _engineVolumeID;
		
		private EntityRef<CarTypeTbl> _CarTypeTbl;
		
		private EntityRef<EngineVolumeTbl> _EngineVolumeTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncarTypeIDChanging(long value);
    partial void OncarTypeIDChanged();
    partial void OnengineVolumeIDChanging(long value);
    partial void OnengineVolumeIDChanged();
    #endregion
		
		public CarType_EngineVolumeTbl()
		{
			this._CarTypeTbl = default(EntityRef<CarTypeTbl>);
			this._EngineVolumeTbl = default(EntityRef<EngineVolumeTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carTypeID", DbType="BigInt NOT NULL")]
		public long carTypeID
		{
			get
			{
				return this._carTypeID;
			}
			set
			{
				if ((this._carTypeID != value))
				{
					if (this._CarTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._carTypeID = value;
					this.SendPropertyChanged("carTypeID");
					this.OncarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_engineVolumeID", DbType="BigInt NOT NULL")]
		public long engineVolumeID
		{
			get
			{
				return this._engineVolumeID;
			}
			set
			{
				if ((this._engineVolumeID != value))
				{
					if (this._EngineVolumeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnengineVolumeIDChanging(value);
					this.SendPropertyChanging();
					this._engineVolumeID = value;
					this.SendPropertyChanged("engineVolumeID");
					this.OnengineVolumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTypeTbl_CarType_EngineVolumeTbl", Storage="_CarTypeTbl", ThisKey="carTypeID", OtherKey="ID", IsForeignKey=true)]
		public CarTypeTbl CarTypeTbl
		{
			get
			{
				return this._CarTypeTbl.Entity;
			}
			set
			{
				CarTypeTbl previousValue = this._CarTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._CarTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarTypeTbl.Entity = null;
						previousValue.CarType_EngineVolumeTbls.Remove(this);
					}
					this._CarTypeTbl.Entity = value;
					if ((value != null))
					{
						value.CarType_EngineVolumeTbls.Add(this);
						this._carTypeID = value.ID;
					}
					else
					{
						this._carTypeID = default(long);
					}
					this.SendPropertyChanged("CarTypeTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngineVolumeTbl_CarType_EngineVolumeTbl", Storage="_EngineVolumeTbl", ThisKey="engineVolumeID", OtherKey="ID", IsForeignKey=true)]
		public EngineVolumeTbl EngineVolumeTbl
		{
			get
			{
				return this._EngineVolumeTbl.Entity;
			}
			set
			{
				EngineVolumeTbl previousValue = this._EngineVolumeTbl.Entity;
				if (((previousValue != value) 
							|| (this._EngineVolumeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EngineVolumeTbl.Entity = null;
						previousValue.CarType_EngineVolumeTbls.Remove(this);
					}
					this._EngineVolumeTbl.Entity = value;
					if ((value != null))
					{
						value.CarType_EngineVolumeTbls.Add(this);
						this._engineVolumeID = value.ID;
					}
					else
					{
						this._engineVolumeID = default(long);
					}
					this.SendPropertyChanged("EngineVolumeTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarTypeDetailsData")]
	public partial class CarTypeDetailsData
	{
		
		private int _ID;
		
		private string _Brand;
		
		private string _Model;
		
		private System.Nullable<int> _CarTypeID;
		
		private string _Volume;
		
		private System.Nullable<int> _VolumeID;
		
		private System.Nullable<double> _Litr;
		
		public CarTypeDetailsData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(255)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this._Model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTypeID", DbType="Int")]
		public System.Nullable<int> CarTypeID
		{
			get
			{
				return this._CarTypeID;
			}
			set
			{
				if ((this._CarTypeID != value))
				{
					this._CarTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="NVarChar(255)")]
		public string Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeID", DbType="Int")]
		public System.Nullable<int> VolumeID
		{
			get
			{
				return this._VolumeID;
			}
			set
			{
				if ((this._VolumeID != value))
				{
					this._VolumeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Litr", DbType="Float")]
		public System.Nullable<double> Litr
		{
			get
			{
				return this._Litr;
			}
			set
			{
				if ((this._Litr != value))
				{
					this._Litr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarTypeTbl")]
	public partial class CarTypeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private long _carBrandId;
		
		private long _registerUserId;
		
		private int _fromYear;
		
		private int _toYear;
		
		private string _image;
		
		private byte _status;
		
		private long _priority;
		
		private EntitySet<CarTbl> _CarTbls;
		
		private EntitySet<CarType_ColorTbl> _CarType_ColorTbls;
		
		private EntitySet<CarType_EngineVolumeTbl> _CarType_EngineVolumeTbls;
		
		private EntitySet<Service_CarTypeTbl> _Service_CarTypeTbls;
		
		private EntityRef<CarBrandTbl> _CarBrandTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncarBrandIdChanging(long value);
    partial void OncarBrandIdChanged();
    partial void OnregisterUserIdChanging(long value);
    partial void OnregisterUserIdChanged();
    partial void OnfromYearChanging(int value);
    partial void OnfromYearChanged();
    partial void OntoYearChanging(int value);
    partial void OntoYearChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnpriorityChanging(long value);
    partial void OnpriorityChanged();
    #endregion
		
		public CarTypeTbl()
		{
			this._CarTbls = new EntitySet<CarTbl>(new Action<CarTbl>(this.attach_CarTbls), new Action<CarTbl>(this.detach_CarTbls));
			this._CarType_ColorTbls = new EntitySet<CarType_ColorTbl>(new Action<CarType_ColorTbl>(this.attach_CarType_ColorTbls), new Action<CarType_ColorTbl>(this.detach_CarType_ColorTbls));
			this._CarType_EngineVolumeTbls = new EntitySet<CarType_EngineVolumeTbl>(new Action<CarType_EngineVolumeTbl>(this.attach_CarType_EngineVolumeTbls), new Action<CarType_EngineVolumeTbl>(this.detach_CarType_EngineVolumeTbls));
			this._Service_CarTypeTbls = new EntitySet<Service_CarTypeTbl>(new Action<Service_CarTypeTbl>(this.attach_Service_CarTypeTbls), new Action<Service_CarTypeTbl>(this.detach_Service_CarTypeTbls));
			this._CarBrandTbl = default(EntityRef<CarBrandTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carBrandId", DbType="BigInt NOT NULL")]
		public long carBrandId
		{
			get
			{
				return this._carBrandId;
			}
			set
			{
				if ((this._carBrandId != value))
				{
					if (this._CarBrandTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncarBrandIdChanging(value);
					this.SendPropertyChanging();
					this._carBrandId = value;
					this.SendPropertyChanged("carBrandId");
					this.OncarBrandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserId", DbType="BigInt NOT NULL")]
		public long registerUserId
		{
			get
			{
				return this._registerUserId;
			}
			set
			{
				if ((this._registerUserId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnregisterUserIdChanging(value);
					this.SendPropertyChanging();
					this._registerUserId = value;
					this.SendPropertyChanged("registerUserId");
					this.OnregisterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromYear", DbType="Int NOT NULL")]
		public int fromYear
		{
			get
			{
				return this._fromYear;
			}
			set
			{
				if ((this._fromYear != value))
				{
					this.OnfromYearChanging(value);
					this.SendPropertyChanging();
					this._fromYear = value;
					this.SendPropertyChanged("fromYear");
					this.OnfromYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toYear", DbType="Int NOT NULL")]
		public int toYear
		{
			get
			{
				return this._toYear;
			}
			set
			{
				if ((this._toYear != value))
				{
					this.OntoYearChanging(value);
					this.SendPropertyChanging();
					this._toYear = value;
					this.SendPropertyChanged("toYear");
					this.OntoYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="BigInt NOT NULL")]
		public long priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTypeTbl_CarTbl", Storage="_CarTbls", ThisKey="ID", OtherKey="carTypeId")]
		public EntitySet<CarTbl> CarTbls
		{
			get
			{
				return this._CarTbls;
			}
			set
			{
				this._CarTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTypeTbl_CarType_ColorTbl", Storage="_CarType_ColorTbls", ThisKey="ID", OtherKey="carTypeID")]
		public EntitySet<CarType_ColorTbl> CarType_ColorTbls
		{
			get
			{
				return this._CarType_ColorTbls;
			}
			set
			{
				this._CarType_ColorTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTypeTbl_CarType_EngineVolumeTbl", Storage="_CarType_EngineVolumeTbls", ThisKey="ID", OtherKey="carTypeID")]
		public EntitySet<CarType_EngineVolumeTbl> CarType_EngineVolumeTbls
		{
			get
			{
				return this._CarType_EngineVolumeTbls;
			}
			set
			{
				this._CarType_EngineVolumeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTypeTbl_Service_CarTypeTbl", Storage="_Service_CarTypeTbls", ThisKey="ID", OtherKey="carTypeId")]
		public EntitySet<Service_CarTypeTbl> Service_CarTypeTbls
		{
			get
			{
				return this._Service_CarTypeTbls;
			}
			set
			{
				this._Service_CarTypeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarBrandTbl_CarTypeTbl", Storage="_CarBrandTbl", ThisKey="carBrandId", OtherKey="ID", IsForeignKey=true)]
		public CarBrandTbl CarBrandTbl
		{
			get
			{
				return this._CarBrandTbl.Entity;
			}
			set
			{
				CarBrandTbl previousValue = this._CarBrandTbl.Entity;
				if (((previousValue != value) 
							|| (this._CarBrandTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarBrandTbl.Entity = null;
						previousValue.CarTypeTbls.Remove(this);
					}
					this._CarBrandTbl.Entity = value;
					if ((value != null))
					{
						value.CarTypeTbls.Add(this);
						this._carBrandId = value.ID;
					}
					else
					{
						this._carBrandId = default(long);
					}
					this.SendPropertyChanged("CarBrandTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_CarTypeTbl", Storage="_UserTbl", ThisKey="registerUserId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.CarTypeTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.CarTypeTbls.Add(this);
						this._registerUserId = value.ID;
					}
					else
					{
						this._registerUserId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarTbls(CarTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTypeTbl = this;
		}
		
		private void detach_CarTbls(CarTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTypeTbl = null;
		}
		
		private void attach_CarType_ColorTbls(CarType_ColorTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTypeTbl = this;
		}
		
		private void detach_CarType_ColorTbls(CarType_ColorTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTypeTbl = null;
		}
		
		private void attach_CarType_EngineVolumeTbls(CarType_EngineVolumeTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTypeTbl = this;
		}
		
		private void detach_CarType_EngineVolumeTbls(CarType_EngineVolumeTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTypeTbl = null;
		}
		
		private void attach_Service_CarTypeTbls(Service_CarTypeTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTypeTbl = this;
		}
		
		private void detach_Service_CarTypeTbls(Service_CarTypeTbl entity)
		{
			this.SendPropertyChanging();
			entity.CarTypeTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryTbl")]
	public partial class CategoryTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private long _parentCategory;
		
		private EntitySet<Product_CategoryTbl> _Product_CategoryTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentCategoryChanging(long value);
    partial void OnparentCategoryChanged();
    #endregion
		
		public CategoryTbl()
		{
			this._Product_CategoryTbls = new EntitySet<Product_CategoryTbl>(new Action<Product_CategoryTbl>(this.attach_Product_CategoryTbls), new Action<Product_CategoryTbl>(this.detach_Product_CategoryTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentCategory", DbType="BigInt NOT NULL")]
		public long parentCategory
		{
			get
			{
				return this._parentCategory;
			}
			set
			{
				if ((this._parentCategory != value))
				{
					this.OnparentCategoryChanging(value);
					this.SendPropertyChanging();
					this._parentCategory = value;
					this.SendPropertyChanged("parentCategory");
					this.OnparentCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryTbl_Product_CategoryTbl", Storage="_Product_CategoryTbls", ThisKey="ID", OtherKey="categoryId")]
		public EntitySet<Product_CategoryTbl> Product_CategoryTbls
		{
			get
			{
				return this._Product_CategoryTbls;
			}
			set
			{
				this._Product_CategoryTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_CategoryTbls(Product_CategoryTbl entity)
		{
			this.SendPropertyChanging();
			entity.CategoryTbl = this;
		}
		
		private void detach_Product_CategoryTbls(Product_CategoryTbl entity)
		{
			this.SendPropertyChanging();
			entity.CategoryTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColorTbl")]
	public partial class ColorTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private byte _status;
		
		private EntitySet<CarTbl> _CarTbls;
		
		private EntitySet<CarType_ColorTbl> _CarType_ColorTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ColorTbl()
		{
			this._CarTbls = new EntitySet<CarTbl>(new Action<CarTbl>(this.attach_CarTbls), new Action<CarTbl>(this.detach_CarTbls));
			this._CarType_ColorTbls = new EntitySet<CarType_ColorTbl>(new Action<CarType_ColorTbl>(this.attach_CarType_ColorTbls), new Action<CarType_ColorTbl>(this.detach_CarType_ColorTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColorTbl_CarTbl", Storage="_CarTbls", ThisKey="ID", OtherKey="colorID")]
		public EntitySet<CarTbl> CarTbls
		{
			get
			{
				return this._CarTbls;
			}
			set
			{
				this._CarTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColorTbl_CarType_ColorTbl", Storage="_CarType_ColorTbls", ThisKey="ID", OtherKey="colorID")]
		public EntitySet<CarType_ColorTbl> CarType_ColorTbls
		{
			get
			{
				return this._CarType_ColorTbls;
			}
			set
			{
				this._CarType_ColorTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarTbls(CarTbl entity)
		{
			this.SendPropertyChanging();
			entity.ColorTbl = this;
		}
		
		private void detach_CarTbls(CarTbl entity)
		{
			this.SendPropertyChanging();
			entity.ColorTbl = null;
		}
		
		private void attach_CarType_ColorTbls(CarType_ColorTbl entity)
		{
			this.SendPropertyChanging();
			entity.ColorTbl = this;
		}
		
		private void detach_CarType_ColorTbls(CarType_ColorTbl entity)
		{
			this.SendPropertyChanging();
			entity.ColorTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_GiftCardTbl")]
	public partial class Customer_GiftCardTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private long _giftCardId;
		
		private System.DateTime _date;
		
		private int _reUsedCount;
		
		private string _customerName;
		
		private string _customerFamily;
		
		private string _customerMobile;
		
		private EntitySet<ServiceOrderTbl> _ServiceOrderTbls;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<GiftCardTbl> _GiftCardTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OngiftCardIdChanging(long value);
    partial void OngiftCardIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnreUsedCountChanging(int value);
    partial void OnreUsedCountChanged();
    partial void OncustomerNameChanging(string value);
    partial void OncustomerNameChanged();
    partial void OncustomerFamilyChanging(string value);
    partial void OncustomerFamilyChanged();
    partial void OncustomerMobileChanging(string value);
    partial void OncustomerMobileChanged();
    #endregion
		
		public Customer_GiftCardTbl()
		{
			this._ServiceOrderTbls = new EntitySet<ServiceOrderTbl>(new Action<ServiceOrderTbl>(this.attach_ServiceOrderTbls), new Action<ServiceOrderTbl>(this.detach_ServiceOrderTbls));
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._GiftCardTbl = default(EntityRef<GiftCardTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giftCardId", DbType="BigInt NOT NULL")]
		public long giftCardId
		{
			get
			{
				return this._giftCardId;
			}
			set
			{
				if ((this._giftCardId != value))
				{
					if (this._GiftCardTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngiftCardIdChanging(value);
					this.SendPropertyChanging();
					this._giftCardId = value;
					this.SendPropertyChanged("giftCardId");
					this.OngiftCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reUsedCount", DbType="Int NOT NULL")]
		public int reUsedCount
		{
			get
			{
				return this._reUsedCount;
			}
			set
			{
				if ((this._reUsedCount != value))
				{
					this.OnreUsedCountChanging(value);
					this.SendPropertyChanging();
					this._reUsedCount = value;
					this.SendPropertyChanged("reUsedCount");
					this.OnreUsedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OncustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("customerName");
					this.OncustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerFamily
		{
			get
			{
				return this._customerFamily;
			}
			set
			{
				if ((this._customerFamily != value))
				{
					this.OncustomerFamilyChanging(value);
					this.SendPropertyChanging();
					this._customerFamily = value;
					this.SendPropertyChanged("customerFamily");
					this.OncustomerFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string customerMobile
		{
			get
			{
				return this._customerMobile;
			}
			set
			{
				if ((this._customerMobile != value))
				{
					this.OncustomerMobileChanging(value);
					this.SendPropertyChanging();
					this._customerMobile = value;
					this.SendPropertyChanged("customerMobile");
					this.OncustomerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_GiftCardTbl_ServiceOrderTbl", Storage="_ServiceOrderTbls", ThisKey="ID", OtherKey="customer_GiftCardId")]
		public EntitySet<ServiceOrderTbl> ServiceOrderTbls
		{
			get
			{
				return this._ServiceOrderTbls;
			}
			set
			{
				this._ServiceOrderTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_Customer_GiftCardTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.Customer_GiftCardTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.Customer_GiftCardTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiftCardTbl_Customer_GiftCardTbl", Storage="_GiftCardTbl", ThisKey="giftCardId", OtherKey="ID", IsForeignKey=true)]
		public GiftCardTbl GiftCardTbl
		{
			get
			{
				return this._GiftCardTbl.Entity;
			}
			set
			{
				GiftCardTbl previousValue = this._GiftCardTbl.Entity;
				if (((previousValue != value) 
							|| (this._GiftCardTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiftCardTbl.Entity = null;
						previousValue.Customer_GiftCardTbls.Remove(this);
					}
					this._GiftCardTbl.Entity = value;
					if ((value != null))
					{
						value.Customer_GiftCardTbls.Add(this);
						this._giftCardId = value.ID;
					}
					else
					{
						this._giftCardId = default(long);
					}
					this.SendPropertyChanged("GiftCardTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.Customer_GiftCardTbl = this;
		}
		
		private void detach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.Customer_GiftCardTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerAddressTbl")]
	public partial class CustomerAddressTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private string _addressTitle;
		
		private int _houseNumber;
		
		private System.Nullable<int> _houseUnit;
		
		private double _latitude;
		
		private double _longitude;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnaddressTitleChanging(string value);
    partial void OnaddressTitleChanged();
    partial void OnhouseNumberChanging(int value);
    partial void OnhouseNumberChanged();
    partial void OnhouseUnitChanging(System.Nullable<int> value);
    partial void OnhouseUnitChanged();
    partial void OnlatitudeChanging(double value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(double value);
    partial void OnlongitudeChanged();
    #endregion
		
		public CustomerAddressTbl()
		{
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressTitle", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string addressTitle
		{
			get
			{
				return this._addressTitle;
			}
			set
			{
				if ((this._addressTitle != value))
				{
					this.OnaddressTitleChanging(value);
					this.SendPropertyChanging();
					this._addressTitle = value;
					this.SendPropertyChanged("addressTitle");
					this.OnaddressTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_houseNumber", DbType="Int NOT NULL")]
		public int houseNumber
		{
			get
			{
				return this._houseNumber;
			}
			set
			{
				if ((this._houseNumber != value))
				{
					this.OnhouseNumberChanging(value);
					this.SendPropertyChanging();
					this._houseNumber = value;
					this.SendPropertyChanged("houseNumber");
					this.OnhouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_houseUnit", DbType="Int")]
		public System.Nullable<int> houseUnit
		{
			get
			{
				return this._houseUnit;
			}
			set
			{
				if ((this._houseUnit != value))
				{
					this.OnhouseUnitChanging(value);
					this.SendPropertyChanging();
					this._houseUnit = value;
					this.SendPropertyChanged("houseUnit");
					this.OnhouseUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float NOT NULL")]
		public double latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float NOT NULL")]
		public double longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerAddressTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.CustomerAddressTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerAddressTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerMessageTbl")]
	public partial class CustomerMessageTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private string _text;
		
		private byte _type;
		
		private bool _isRead;
		
		private System.DateTime _regDate;
		
		private string _mobile;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OnisReadChanging(bool value);
    partial void OnisReadChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    #endregion
		
		public CustomerMessageTbl()
		{
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRead", DbType="Bit NOT NULL")]
		public bool isRead
		{
			get
			{
				return this._isRead;
			}
			set
			{
				if ((this._isRead != value))
				{
					this.OnisReadChanging(value);
					this.SendPropertyChanging();
					this._isRead = value;
					this.SendPropertyChanged("isRead");
					this.OnisReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerMessageTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.CustomerMessageTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerMessageTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerPendingRateTbl")]
	public partial class CustomerPendingRateTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private long _serviceOrderId;
		
		private string _serviceOrderCode;
		
		private long _repairmanId;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnserviceOrderIdChanging(long value);
    partial void OnserviceOrderIdChanged();
    partial void OnserviceOrderCodeChanging(string value);
    partial void OnserviceOrderCodeChanged();
    partial void OnrepairmanIdChanging(long value);
    partial void OnrepairmanIdChanged();
    #endregion
		
		public CustomerPendingRateTbl()
		{
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderId", DbType="BigInt NOT NULL")]
		public long serviceOrderId
		{
			get
			{
				return this._serviceOrderId;
			}
			set
			{
				if ((this._serviceOrderId != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderId = value;
					this.SendPropertyChanged("serviceOrderId");
					this.OnserviceOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string serviceOrderCode
		{
			get
			{
				return this._serviceOrderCode;
			}
			set
			{
				if ((this._serviceOrderCode != value))
				{
					this.OnserviceOrderCodeChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderCode = value;
					this.SendPropertyChanged("serviceOrderCode");
					this.OnserviceOrderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanId", DbType="BigInt NOT NULL")]
		public long repairmanId
		{
			get
			{
				return this._repairmanId;
			}
			set
			{
				if ((this._repairmanId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._repairmanId = value;
					this.SendPropertyChanged("repairmanId");
					this.OnrepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerPendingRateTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.CustomerPendingRateTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerPendingRateTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_CustomerPendingRateTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.CustomerPendingRateTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerPendingRateTbls.Add(this);
						this._serviceOrderId = value.ID;
					}
					else
					{
						this._serviceOrderId = default(long);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_CustomerPendingRateTbl", Storage="_UserTbl", ThisKey="repairmanId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.CustomerPendingRateTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerPendingRateTbls.Add(this);
						this._repairmanId = value.ID;
					}
					else
					{
						this._repairmanId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customerPushTbl")]
	public partial class customerPushTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private string _token;
		
		private System.DateTime _lastUpdate;
		
		private System.DateTime _regDate;
		
		private int _openedCount;
		
		private string _platform;
		
		private bool _isOneSignal;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OntokenChanging(string value);
    partial void OntokenChanged();
    partial void OnlastUpdateChanging(System.DateTime value);
    partial void OnlastUpdateChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnopenedCountChanging(int value);
    partial void OnopenedCountChanged();
    partial void OnplatformChanging(string value);
    partial void OnplatformChanged();
    partial void OnisOneSignalChanging(bool value);
    partial void OnisOneSignalChanged();
    #endregion
		
		public customerPushTbl()
		{
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openedCount", DbType="Int NOT NULL")]
		public int openedCount
		{
			get
			{
				return this._openedCount;
			}
			set
			{
				if ((this._openedCount != value))
				{
					this.OnopenedCountChanging(value);
					this.SendPropertyChanging();
					this._openedCount = value;
					this.SendPropertyChanged("openedCount");
					this.OnopenedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_platform", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string platform
		{
			get
			{
				return this._platform;
			}
			set
			{
				if ((this._platform != value))
				{
					this.OnplatformChanging(value);
					this.SendPropertyChanging();
					this._platform = value;
					this.SendPropertyChanged("platform");
					this.OnplatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOneSignal", DbType="Bit NOT NULL")]
		public bool isOneSignal
		{
			get
			{
				return this._isOneSignal;
			}
			set
			{
				if ((this._isOneSignal != value))
				{
					this.OnisOneSignalChanging(value);
					this.SendPropertyChanging();
					this._isOneSignal = value;
					this.SendPropertyChanged("isOneSignal");
					this.OnisOneSignalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_customerPushTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.customerPushTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.customerPushTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerRateTbl")]
	public partial class CustomerRateTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private long _serviceOrderId;
		
		private string _serviceOrderCode;
		
		private long _repairmanId;
		
		private string _text;
		
		private System.DateTime _regDate;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnserviceOrderIdChanging(long value);
    partial void OnserviceOrderIdChanged();
    partial void OnserviceOrderCodeChanging(string value);
    partial void OnserviceOrderCodeChanged();
    partial void OnrepairmanIdChanging(long value);
    partial void OnrepairmanIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public CustomerRateTbl()
		{
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderId", DbType="BigInt NOT NULL")]
		public long serviceOrderId
		{
			get
			{
				return this._serviceOrderId;
			}
			set
			{
				if ((this._serviceOrderId != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderId = value;
					this.SendPropertyChanged("serviceOrderId");
					this.OnserviceOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string serviceOrderCode
		{
			get
			{
				return this._serviceOrderCode;
			}
			set
			{
				if ((this._serviceOrderCode != value))
				{
					this.OnserviceOrderCodeChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderCode = value;
					this.SendPropertyChanged("serviceOrderCode");
					this.OnserviceOrderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanId", DbType="BigInt NOT NULL")]
		public long repairmanId
		{
			get
			{
				return this._repairmanId;
			}
			set
			{
				if ((this._repairmanId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._repairmanId = value;
					this.SendPropertyChanged("repairmanId");
					this.OnrepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(160)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerRateTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.CustomerRateTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerRateTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_CustomerRateTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.CustomerRateTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerRateTbls.Add(this);
						this._serviceOrderId = value.ID;
					}
					else
					{
						this._serviceOrderId = default(long);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_CustomerRateTbl", Storage="_UserTbl", ThisKey="repairmanId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.CustomerRateTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerRateTbls.Add(this);
						this._repairmanId = value.ID;
					}
					else
					{
						this._repairmanId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerTbl")]
	public partial class CustomerTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _family;
		
		private string _mobile;
		
		private string _email;
		
		private string _password;
		
		private System.DateTime _lastLoginDate;
		
		private System.DateTime _regDate;
		
		private byte _status;
		
		private double _wallet;
		
		private string _code;
		
		private int _serviceCount;
		
		private EntitySet<CarTbl> _CarTbls;
		
		private EntitySet<Customer_GiftCardTbl> _Customer_GiftCardTbls;
		
		private EntitySet<CustomerAddressTbl> _CustomerAddressTbls;
		
		private EntitySet<CustomerMessageTbl> _CustomerMessageTbls;
		
		private EntitySet<CustomerPendingRateTbl> _CustomerPendingRateTbls;
		
		private EntitySet<customerPushTbl> _customerPushTbls;
		
		private EntitySet<CustomerRateTbl> _CustomerRateTbls;
		
		private EntitySet<CustomerWalletTbl> _CustomerWalletTbls;
		
		private EntitySet<CustomerWalletTbl> _CustomerWalletTbls1;
		
		private EntitySet<GiftCardTbl> _GiftCardTbls;
		
		private EntitySet<MBProto_sessionTbl> _MBProto_sessionTbls;
		
		private EntitySet<PaymentTbl> _PaymentTbls;
		
		private EntitySet<PeriodTbl> _PeriodTbls;
		
		private EntitySet<RepairmanTimeSheet1Tbl> _RepairmanTimeSheet1Tbls;
		
		private EntitySet<ServiceOrderTbl> _ServiceOrderTbls;
		
		private EntitySet<ShopOrderTbl> _ShopOrderTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfamilyChanging(string value);
    partial void OnfamilyChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnlastLoginDateChanging(System.DateTime value);
    partial void OnlastLoginDateChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnwalletChanging(double value);
    partial void OnwalletChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnserviceCountChanging(int value);
    partial void OnserviceCountChanged();
    #endregion
		
		public CustomerTbl()
		{
			this._CarTbls = new EntitySet<CarTbl>(new Action<CarTbl>(this.attach_CarTbls), new Action<CarTbl>(this.detach_CarTbls));
			this._Customer_GiftCardTbls = new EntitySet<Customer_GiftCardTbl>(new Action<Customer_GiftCardTbl>(this.attach_Customer_GiftCardTbls), new Action<Customer_GiftCardTbl>(this.detach_Customer_GiftCardTbls));
			this._CustomerAddressTbls = new EntitySet<CustomerAddressTbl>(new Action<CustomerAddressTbl>(this.attach_CustomerAddressTbls), new Action<CustomerAddressTbl>(this.detach_CustomerAddressTbls));
			this._CustomerMessageTbls = new EntitySet<CustomerMessageTbl>(new Action<CustomerMessageTbl>(this.attach_CustomerMessageTbls), new Action<CustomerMessageTbl>(this.detach_CustomerMessageTbls));
			this._CustomerPendingRateTbls = new EntitySet<CustomerPendingRateTbl>(new Action<CustomerPendingRateTbl>(this.attach_CustomerPendingRateTbls), new Action<CustomerPendingRateTbl>(this.detach_CustomerPendingRateTbls));
			this._customerPushTbls = new EntitySet<customerPushTbl>(new Action<customerPushTbl>(this.attach_customerPushTbls), new Action<customerPushTbl>(this.detach_customerPushTbls));
			this._CustomerRateTbls = new EntitySet<CustomerRateTbl>(new Action<CustomerRateTbl>(this.attach_CustomerRateTbls), new Action<CustomerRateTbl>(this.detach_CustomerRateTbls));
			this._CustomerWalletTbls = new EntitySet<CustomerWalletTbl>(new Action<CustomerWalletTbl>(this.attach_CustomerWalletTbls), new Action<CustomerWalletTbl>(this.detach_CustomerWalletTbls));
			this._CustomerWalletTbls1 = new EntitySet<CustomerWalletTbl>(new Action<CustomerWalletTbl>(this.attach_CustomerWalletTbls1), new Action<CustomerWalletTbl>(this.detach_CustomerWalletTbls1));
			this._GiftCardTbls = new EntitySet<GiftCardTbl>(new Action<GiftCardTbl>(this.attach_GiftCardTbls), new Action<GiftCardTbl>(this.detach_GiftCardTbls));
			this._MBProto_sessionTbls = new EntitySet<MBProto_sessionTbl>(new Action<MBProto_sessionTbl>(this.attach_MBProto_sessionTbls), new Action<MBProto_sessionTbl>(this.detach_MBProto_sessionTbls));
			this._PaymentTbls = new EntitySet<PaymentTbl>(new Action<PaymentTbl>(this.attach_PaymentTbls), new Action<PaymentTbl>(this.detach_PaymentTbls));
			this._PeriodTbls = new EntitySet<PeriodTbl>(new Action<PeriodTbl>(this.attach_PeriodTbls), new Action<PeriodTbl>(this.detach_PeriodTbls));
			this._RepairmanTimeSheet1Tbls = new EntitySet<RepairmanTimeSheet1Tbl>(new Action<RepairmanTimeSheet1Tbl>(this.attach_RepairmanTimeSheet1Tbls), new Action<RepairmanTimeSheet1Tbl>(this.detach_RepairmanTimeSheet1Tbls));
			this._ServiceOrderTbls = new EntitySet<ServiceOrderTbl>(new Action<ServiceOrderTbl>(this.attach_ServiceOrderTbls), new Action<ServiceOrderTbl>(this.detach_ServiceOrderTbls));
			this._ShopOrderTbls = new EntitySet<ShopOrderTbl>(new Action<ShopOrderTbl>(this.attach_ShopOrderTbls), new Action<ShopOrderTbl>(this.detach_ShopOrderTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string family
		{
			get
			{
				return this._family;
			}
			set
			{
				if ((this._family != value))
				{
					this.OnfamilyChanging(value);
					this.SendPropertyChanging();
					this._family = value;
					this.SendPropertyChanged("family");
					this.OnfamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(150)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime lastLoginDate
		{
			get
			{
				return this._lastLoginDate;
			}
			set
			{
				if ((this._lastLoginDate != value))
				{
					this.OnlastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._lastLoginDate = value;
					this.SendPropertyChanged("lastLoginDate");
					this.OnlastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallet", DbType="Float NOT NULL")]
		public double wallet
		{
			get
			{
				return this._wallet;
			}
			set
			{
				if ((this._wallet != value))
				{
					this.OnwalletChanging(value);
					this.SendPropertyChanging();
					this._wallet = value;
					this.SendPropertyChanged("wallet");
					this.OnwalletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceCount", DbType="Int NOT NULL")]
		public int serviceCount
		{
			get
			{
				return this._serviceCount;
			}
			set
			{
				if ((this._serviceCount != value))
				{
					this.OnserviceCountChanging(value);
					this.SendPropertyChanging();
					this._serviceCount = value;
					this.SendPropertyChanged("serviceCount");
					this.OnserviceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CarTbl", Storage="_CarTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<CarTbl> CarTbls
		{
			get
			{
				return this._CarTbls;
			}
			set
			{
				this._CarTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_Customer_GiftCardTbl", Storage="_Customer_GiftCardTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<Customer_GiftCardTbl> Customer_GiftCardTbls
		{
			get
			{
				return this._Customer_GiftCardTbls;
			}
			set
			{
				this._Customer_GiftCardTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerAddressTbl", Storage="_CustomerAddressTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<CustomerAddressTbl> CustomerAddressTbls
		{
			get
			{
				return this._CustomerAddressTbls;
			}
			set
			{
				this._CustomerAddressTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerMessageTbl", Storage="_CustomerMessageTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<CustomerMessageTbl> CustomerMessageTbls
		{
			get
			{
				return this._CustomerMessageTbls;
			}
			set
			{
				this._CustomerMessageTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerPendingRateTbl", Storage="_CustomerPendingRateTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<CustomerPendingRateTbl> CustomerPendingRateTbls
		{
			get
			{
				return this._CustomerPendingRateTbls;
			}
			set
			{
				this._CustomerPendingRateTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_customerPushTbl", Storage="_customerPushTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<customerPushTbl> customerPushTbls
		{
			get
			{
				return this._customerPushTbls;
			}
			set
			{
				this._customerPushTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerRateTbl", Storage="_CustomerRateTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<CustomerRateTbl> CustomerRateTbls
		{
			get
			{
				return this._CustomerRateTbls;
			}
			set
			{
				this._CustomerRateTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerWalletTbl", Storage="_CustomerWalletTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<CustomerWalletTbl> CustomerWalletTbls
		{
			get
			{
				return this._CustomerWalletTbls;
			}
			set
			{
				this._CustomerWalletTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerWalletTbl1", Storage="_CustomerWalletTbls1", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<CustomerWalletTbl> CustomerWalletTbls1
		{
			get
			{
				return this._CustomerWalletTbls1;
			}
			set
			{
				this._CustomerWalletTbls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_GiftCardTbl", Storage="_GiftCardTbls", ThisKey="ID", OtherKey="presenterId")]
		public EntitySet<GiftCardTbl> GiftCardTbls
		{
			get
			{
				return this._GiftCardTbls;
			}
			set
			{
				this._GiftCardTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_MBProto_sessionTbl", Storage="_MBProto_sessionTbls", ThisKey="ID", OtherKey="customerID")]
		public EntitySet<MBProto_sessionTbl> MBProto_sessionTbls
		{
			get
			{
				return this._MBProto_sessionTbls;
			}
			set
			{
				this._MBProto_sessionTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_PaymentTbl", Storage="_PaymentTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<PaymentTbl> PaymentTbls
		{
			get
			{
				return this._PaymentTbls;
			}
			set
			{
				this._PaymentTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_PeriodTbl", Storage="_PeriodTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<PeriodTbl> PeriodTbls
		{
			get
			{
				return this._PeriodTbls;
			}
			set
			{
				this._PeriodTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_RepairmanTimeSheet1Tbl", Storage="_RepairmanTimeSheet1Tbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<RepairmanTimeSheet1Tbl> RepairmanTimeSheet1Tbls
		{
			get
			{
				return this._RepairmanTimeSheet1Tbls;
			}
			set
			{
				this._RepairmanTimeSheet1Tbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_ServiceOrderTbl", Storage="_ServiceOrderTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<ServiceOrderTbl> ServiceOrderTbls
		{
			get
			{
				return this._ServiceOrderTbls;
			}
			set
			{
				this._ServiceOrderTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_ShopOrderTbl", Storage="_ShopOrderTbls", ThisKey="ID", OtherKey="customerId")]
		public EntitySet<ShopOrderTbl> ShopOrderTbls
		{
			get
			{
				return this._ShopOrderTbls;
			}
			set
			{
				this._ShopOrderTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarTbls(CarTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_CarTbls(CarTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_Customer_GiftCardTbls(Customer_GiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_Customer_GiftCardTbls(Customer_GiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_CustomerAddressTbls(CustomerAddressTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_CustomerAddressTbls(CustomerAddressTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_CustomerMessageTbls(CustomerMessageTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_CustomerMessageTbls(CustomerMessageTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_CustomerPendingRateTbls(CustomerPendingRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_CustomerPendingRateTbls(CustomerPendingRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_customerPushTbls(customerPushTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_customerPushTbls(customerPushTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_CustomerRateTbls(CustomerRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_CustomerRateTbls(CustomerRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_CustomerWalletTbls(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_CustomerWalletTbls(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_CustomerWalletTbls1(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl1 = this;
		}
		
		private void detach_CustomerWalletTbls1(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl1 = null;
		}
		
		private void attach_GiftCardTbls(GiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_GiftCardTbls(GiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_MBProto_sessionTbls(MBProto_sessionTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_MBProto_sessionTbls(MBProto_sessionTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_PaymentTbls(PaymentTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_PaymentTbls(PaymentTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_PeriodTbls(PeriodTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_PeriodTbls(PeriodTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_RepairmanTimeSheet1Tbls(RepairmanTimeSheet1Tbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_RepairmanTimeSheet1Tbls(RepairmanTimeSheet1Tbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
		
		private void attach_ShopOrderTbls(ShopOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_ShopOrderTbls(ShopOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerWalletTbl")]
	public partial class CustomerWalletTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private double _price;
		
		private System.Nullable<long> _paymentId;
		
		private System.Nullable<long> _serviceOrderId;
		
		private System.Nullable<long> _shopOrderId;
		
		private System.Nullable<long> _toCustomer;
		
		private System.DateTime _regDate;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<CustomerTbl> _CustomerTbl1;
		
		private EntityRef<PaymentTbl> _PaymentTbl;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
		private EntityRef<ShopOrderTbl> _ShopOrderTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnpaymentIdChanging(System.Nullable<long> value);
    partial void OnpaymentIdChanged();
    partial void OnserviceOrderIdChanging(System.Nullable<long> value);
    partial void OnserviceOrderIdChanged();
    partial void OnshopOrderIdChanging(System.Nullable<long> value);
    partial void OnshopOrderIdChanged();
    partial void OntoCustomerChanging(System.Nullable<long> value);
    partial void OntoCustomerChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public CustomerWalletTbl()
		{
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._CustomerTbl1 = default(EntityRef<CustomerTbl>);
			this._PaymentTbl = default(EntityRef<PaymentTbl>);
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			this._ShopOrderTbl = default(EntityRef<ShopOrderTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if ((this._CustomerTbl.HasLoadedOrAssignedValue || this._CustomerTbl1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentId", DbType="BigInt")]
		public System.Nullable<long> paymentId
		{
			get
			{
				return this._paymentId;
			}
			set
			{
				if ((this._paymentId != value))
				{
					if (this._PaymentTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpaymentIdChanging(value);
					this.SendPropertyChanging();
					this._paymentId = value;
					this.SendPropertyChanged("paymentId");
					this.OnpaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderId", DbType="BigInt")]
		public System.Nullable<long> serviceOrderId
		{
			get
			{
				return this._serviceOrderId;
			}
			set
			{
				if ((this._serviceOrderId != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderId = value;
					this.SendPropertyChanged("serviceOrderId");
					this.OnserviceOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopOrderId", DbType="BigInt")]
		public System.Nullable<long> shopOrderId
		{
			get
			{
				return this._shopOrderId;
			}
			set
			{
				if ((this._shopOrderId != value))
				{
					if (this._ShopOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopOrderIdChanging(value);
					this.SendPropertyChanging();
					this._shopOrderId = value;
					this.SendPropertyChanged("shopOrderId");
					this.OnshopOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toCustomer", DbType="BigInt")]
		public System.Nullable<long> toCustomer
		{
			get
			{
				return this._toCustomer;
			}
			set
			{
				if ((this._toCustomer != value))
				{
					this.OntoCustomerChanging(value);
					this.SendPropertyChanging();
					this._toCustomer = value;
					this.SendPropertyChanged("toCustomer");
					this.OntoCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerWalletTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.CustomerWalletTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerWalletTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_CustomerWalletTbl1", Storage="_CustomerTbl1", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl1
		{
			get
			{
				return this._CustomerTbl1.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl1.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl1.Entity = null;
						previousValue.CustomerWalletTbls1.Remove(this);
					}
					this._CustomerTbl1.Entity = value;
					if ((value != null))
					{
						value.CustomerWalletTbls1.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentTbl_CustomerWalletTbl", Storage="_PaymentTbl", ThisKey="paymentId", OtherKey="ID", IsForeignKey=true)]
		public PaymentTbl PaymentTbl
		{
			get
			{
				return this._PaymentTbl.Entity;
			}
			set
			{
				PaymentTbl previousValue = this._PaymentTbl.Entity;
				if (((previousValue != value) 
							|| (this._PaymentTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentTbl.Entity = null;
						previousValue.CustomerWalletTbls.Remove(this);
					}
					this._PaymentTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerWalletTbls.Add(this);
						this._paymentId = value.ID;
					}
					else
					{
						this._paymentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PaymentTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_CustomerWalletTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.CustomerWalletTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerWalletTbls.Add(this);
						this._serviceOrderId = value.ID;
					}
					else
					{
						this._serviceOrderId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopOrderTbl_CustomerWalletTbl", Storage="_ShopOrderTbl", ThisKey="shopOrderId", OtherKey="ID", IsForeignKey=true)]
		public ShopOrderTbl ShopOrderTbl
		{
			get
			{
				return this._ShopOrderTbl.Entity;
			}
			set
			{
				ShopOrderTbl previousValue = this._ShopOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ShopOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopOrderTbl.Entity = null;
						previousValue.CustomerWalletTbls.Remove(this);
					}
					this._ShopOrderTbl.Entity = value;
					if ((value != null))
					{
						value.CustomerWalletTbls.Add(this);
						this._shopOrderId = value.ID;
					}
					else
					{
						this._shopOrderId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ShopOrderTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerWalletTransactionTbl")]
	public partial class CustomerWalletTransactionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private double _price;
		
		private long _transactionId;
		
		private short _transactionCode;
		
		private bool _transactionType;
		
		private System.DateTime _transactionDate;
		
		private System.TimeSpan _transactionTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OntransactionIdChanging(long value);
    partial void OntransactionIdChanged();
    partial void OntransactionCodeChanging(short value);
    partial void OntransactionCodeChanged();
    partial void OntransactionTypeChanging(bool value);
    partial void OntransactionTypeChanged();
    partial void OntransactionDateChanging(System.DateTime value);
    partial void OntransactionDateChanged();
    partial void OntransactionTimeChanging(System.TimeSpan value);
    partial void OntransactionTimeChanged();
    #endregion
		
		public CustomerWalletTransactionTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionId", DbType="BigInt NOT NULL")]
		public long transactionId
		{
			get
			{
				return this._transactionId;
			}
			set
			{
				if ((this._transactionId != value))
				{
					this.OntransactionIdChanging(value);
					this.SendPropertyChanging();
					this._transactionId = value;
					this.SendPropertyChanged("transactionId");
					this.OntransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionCode", DbType="SmallInt NOT NULL")]
		public short transactionCode
		{
			get
			{
				return this._transactionCode;
			}
			set
			{
				if ((this._transactionCode != value))
				{
					this.OntransactionCodeChanging(value);
					this.SendPropertyChanging();
					this._transactionCode = value;
					this.SendPropertyChanged("transactionCode");
					this.OntransactionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionType", DbType="Bit NOT NULL")]
		public bool transactionType
		{
			get
			{
				return this._transactionType;
			}
			set
			{
				if ((this._transactionType != value))
				{
					this.OntransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._transactionType = value;
					this.SendPropertyChanged("transactionType");
					this.OntransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionDate", DbType="Date NOT NULL")]
		public System.DateTime transactionDate
		{
			get
			{
				return this._transactionDate;
			}
			set
			{
				if ((this._transactionDate != value))
				{
					this.OntransactionDateChanging(value);
					this.SendPropertyChanging();
					this._transactionDate = value;
					this.SendPropertyChanged("transactionDate");
					this.OntransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionTime", DbType="Time NOT NULL")]
		public System.TimeSpan transactionTime
		{
			get
			{
				return this._transactionTime;
			}
			set
			{
				if ((this._transactionTime != value))
				{
					this.OntransactionTimeChanging(value);
					this.SendPropertyChanging();
					this._transactionTime = value;
					this.SendPropertyChanged("transactionTime");
					this.OntransactionTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DayTbl")]
	public partial class DayTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _code;
		
		private string _name;
		
		private System.TimeSpan _start;
		
		private System.TimeSpan _end;
		
		private EntitySet<periodGiftCardTbl> _periodGiftCardTbls;
		
		private EntitySet<ServicePriceTariffTbl> _ServicePriceTariffTbls;
		
		private EntitySet<ServiceTimeTariffTbl> _ServiceTimeTariffTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncodeChanging(byte value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstartChanging(System.TimeSpan value);
    partial void OnstartChanged();
    partial void OnendChanging(System.TimeSpan value);
    partial void OnendChanged();
    #endregion
		
		public DayTbl()
		{
			this._periodGiftCardTbls = new EntitySet<periodGiftCardTbl>(new Action<periodGiftCardTbl>(this.attach_periodGiftCardTbls), new Action<periodGiftCardTbl>(this.detach_periodGiftCardTbls));
			this._ServicePriceTariffTbls = new EntitySet<ServicePriceTariffTbl>(new Action<ServicePriceTariffTbl>(this.attach_ServicePriceTariffTbls), new Action<ServicePriceTariffTbl>(this.detach_ServicePriceTariffTbls));
			this._ServiceTimeTariffTbls = new EntitySet<ServiceTimeTariffTbl>(new Action<ServiceTimeTariffTbl>(this.attach_ServiceTimeTariffTbls), new Action<ServiceTimeTariffTbl>(this.detach_ServiceTimeTariffTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="TinyInt NOT NULL")]
		public byte code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start", DbType="Time NOT NULL")]
		public System.TimeSpan start
		{
			get
			{
				return this._start;
			}
			set
			{
				if ((this._start != value))
				{
					this.OnstartChanging(value);
					this.SendPropertyChanging();
					this._start = value;
					this.SendPropertyChanged("start");
					this.OnstartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[end]", Storage="_end", DbType="Time NOT NULL")]
		public System.TimeSpan end
		{
			get
			{
				return this._end;
			}
			set
			{
				if ((this._end != value))
				{
					this.OnendChanging(value);
					this.SendPropertyChanging();
					this._end = value;
					this.SendPropertyChanged("end");
					this.OnendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayTbl_periodGiftCardTbl", Storage="_periodGiftCardTbls", ThisKey="ID", OtherKey="dayId")]
		public EntitySet<periodGiftCardTbl> periodGiftCardTbls
		{
			get
			{
				return this._periodGiftCardTbls;
			}
			set
			{
				this._periodGiftCardTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayTbl_ServicePriceTariffTbl", Storage="_ServicePriceTariffTbls", ThisKey="ID", OtherKey="dayId")]
		public EntitySet<ServicePriceTariffTbl> ServicePriceTariffTbls
		{
			get
			{
				return this._ServicePriceTariffTbls;
			}
			set
			{
				this._ServicePriceTariffTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayTbl_ServiceTimeTariffTbl", Storage="_ServiceTimeTariffTbls", ThisKey="ID", OtherKey="dayId")]
		public EntitySet<ServiceTimeTariffTbl> ServiceTimeTariffTbls
		{
			get
			{
				return this._ServiceTimeTariffTbls;
			}
			set
			{
				this._ServiceTimeTariffTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_periodGiftCardTbls(periodGiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.DayTbl = this;
		}
		
		private void detach_periodGiftCardTbls(periodGiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.DayTbl = null;
		}
		
		private void attach_ServicePriceTariffTbls(ServicePriceTariffTbl entity)
		{
			this.SendPropertyChanging();
			entity.DayTbl = this;
		}
		
		private void detach_ServicePriceTariffTbls(ServicePriceTariffTbl entity)
		{
			this.SendPropertyChanging();
			entity.DayTbl = null;
		}
		
		private void attach_ServiceTimeTariffTbls(ServiceTimeTariffTbl entity)
		{
			this.SendPropertyChanging();
			entity.DayTbl = this;
		}
		
		private void detach_ServiceTimeTariffTbls(ServiceTimeTariffTbl entity)
		{
			this.SendPropertyChanging();
			entity.DayTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributorCancelerLogTbl")]
	public partial class DistributorCancelerLogTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _cancelerId;
		
		private long _replaceId;
		
		private long _serviceOrderId;
		
		private System.DateTime _regDate;
		
		private long _regUserId;
		
		private string _regUserName;
		
		private string _regUserFamily;
		
		private string _regUserMobile;
		
		private string _cancelerName;
		
		private string _cancelerFamily;
		
		private string _cancelerMobile;
		
		private string _replaceName;
		
		private string _replaceFamily;
		
		private string _replaceMobile;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
		private EntityRef<UserTbl> _UserTbl1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncancelerIdChanging(long value);
    partial void OncancelerIdChanged();
    partial void OnreplaceIdChanging(long value);
    partial void OnreplaceIdChanged();
    partial void OnserviceOrderIdChanging(long value);
    partial void OnserviceOrderIdChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnregUserIdChanging(long value);
    partial void OnregUserIdChanged();
    partial void OnregUserNameChanging(string value);
    partial void OnregUserNameChanged();
    partial void OnregUserFamilyChanging(string value);
    partial void OnregUserFamilyChanged();
    partial void OnregUserMobileChanging(string value);
    partial void OnregUserMobileChanged();
    partial void OncancelerNameChanging(string value);
    partial void OncancelerNameChanged();
    partial void OncancelerFamilyChanging(string value);
    partial void OncancelerFamilyChanged();
    partial void OncancelerMobileChanging(string value);
    partial void OncancelerMobileChanged();
    partial void OnreplaceNameChanging(string value);
    partial void OnreplaceNameChanged();
    partial void OnreplaceFamilyChanging(string value);
    partial void OnreplaceFamilyChanged();
    partial void OnreplaceMobileChanging(string value);
    partial void OnreplaceMobileChanged();
    #endregion
		
		public DistributorCancelerLogTbl()
		{
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			this._UserTbl1 = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerId", DbType="BigInt NOT NULL")]
		public long cancelerId
		{
			get
			{
				return this._cancelerId;
			}
			set
			{
				if ((this._cancelerId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncancelerIdChanging(value);
					this.SendPropertyChanging();
					this._cancelerId = value;
					this.SendPropertyChanged("cancelerId");
					this.OncancelerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replaceId", DbType="BigInt NOT NULL")]
		public long replaceId
		{
			get
			{
				return this._replaceId;
			}
			set
			{
				if ((this._replaceId != value))
				{
					if (this._UserTbl1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreplaceIdChanging(value);
					this.SendPropertyChanging();
					this._replaceId = value;
					this.SendPropertyChanged("replaceId");
					this.OnreplaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderId", DbType="BigInt NOT NULL")]
		public long serviceOrderId
		{
			get
			{
				return this._serviceOrderId;
			}
			set
			{
				if ((this._serviceOrderId != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderId = value;
					this.SendPropertyChanged("serviceOrderId");
					this.OnserviceOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regUserId", DbType="BigInt NOT NULL")]
		public long regUserId
		{
			get
			{
				return this._regUserId;
			}
			set
			{
				if ((this._regUserId != value))
				{
					this.OnregUserIdChanging(value);
					this.SendPropertyChanging();
					this._regUserId = value;
					this.SendPropertyChanged("regUserId");
					this.OnregUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regUserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string regUserName
		{
			get
			{
				return this._regUserName;
			}
			set
			{
				if ((this._regUserName != value))
				{
					this.OnregUserNameChanging(value);
					this.SendPropertyChanging();
					this._regUserName = value;
					this.SendPropertyChanged("regUserName");
					this.OnregUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regUserFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string regUserFamily
		{
			get
			{
				return this._regUserFamily;
			}
			set
			{
				if ((this._regUserFamily != value))
				{
					this.OnregUserFamilyChanging(value);
					this.SendPropertyChanging();
					this._regUserFamily = value;
					this.SendPropertyChanged("regUserFamily");
					this.OnregUserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regUserMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string regUserMobile
		{
			get
			{
				return this._regUserMobile;
			}
			set
			{
				if ((this._regUserMobile != value))
				{
					this.OnregUserMobileChanging(value);
					this.SendPropertyChanging();
					this._regUserMobile = value;
					this.SendPropertyChanged("regUserMobile");
					this.OnregUserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string cancelerName
		{
			get
			{
				return this._cancelerName;
			}
			set
			{
				if ((this._cancelerName != value))
				{
					this.OncancelerNameChanging(value);
					this.SendPropertyChanging();
					this._cancelerName = value;
					this.SendPropertyChanged("cancelerName");
					this.OncancelerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string cancelerFamily
		{
			get
			{
				return this._cancelerFamily;
			}
			set
			{
				if ((this._cancelerFamily != value))
				{
					this.OncancelerFamilyChanging(value);
					this.SendPropertyChanging();
					this._cancelerFamily = value;
					this.SendPropertyChanged("cancelerFamily");
					this.OncancelerFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string cancelerMobile
		{
			get
			{
				return this._cancelerMobile;
			}
			set
			{
				if ((this._cancelerMobile != value))
				{
					this.OncancelerMobileChanging(value);
					this.SendPropertyChanging();
					this._cancelerMobile = value;
					this.SendPropertyChanged("cancelerMobile");
					this.OncancelerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replaceName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string replaceName
		{
			get
			{
				return this._replaceName;
			}
			set
			{
				if ((this._replaceName != value))
				{
					this.OnreplaceNameChanging(value);
					this.SendPropertyChanging();
					this._replaceName = value;
					this.SendPropertyChanged("replaceName");
					this.OnreplaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replaceFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string replaceFamily
		{
			get
			{
				return this._replaceFamily;
			}
			set
			{
				if ((this._replaceFamily != value))
				{
					this.OnreplaceFamilyChanging(value);
					this.SendPropertyChanging();
					this._replaceFamily = value;
					this.SendPropertyChanged("replaceFamily");
					this.OnreplaceFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replaceMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string replaceMobile
		{
			get
			{
				return this._replaceMobile;
			}
			set
			{
				if ((this._replaceMobile != value))
				{
					this.OnreplaceMobileChanging(value);
					this.SendPropertyChanging();
					this._replaceMobile = value;
					this.SendPropertyChanged("replaceMobile");
					this.OnreplaceMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_DistributorCancelerLogTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.DistributorCancelerLogTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.DistributorCancelerLogTbls.Add(this);
						this._serviceOrderId = value.ID;
					}
					else
					{
						this._serviceOrderId = default(long);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorCancelerLogTbl", Storage="_UserTbl", ThisKey="cancelerId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.DistributorCancelerLogTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.DistributorCancelerLogTbls.Add(this);
						this._cancelerId = value.ID;
					}
					else
					{
						this._cancelerId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorCancelerLogTbl1", Storage="_UserTbl1", ThisKey="replaceId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl1
		{
			get
			{
				return this._UserTbl1.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl1.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl1.Entity = null;
						previousValue.DistributorCancelerLogTbls1.Remove(this);
					}
					this._UserTbl1.Entity = value;
					if ((value != null))
					{
						value.DistributorCancelerLogTbls1.Add(this);
						this._replaceId = value.ID;
					}
					else
					{
						this._replaceId = default(long);
					}
					this.SendPropertyChanged("UserTbl1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributorCancelingOrderTbl")]
	public partial class DistributorCancelingOrderTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _handleTime;
		
		private System.DateTime _regDate;
		
		private System.Nullable<long> _operatorId;
		
		private bool _byDistributor;
		
		private string _operatorName;
		
		private string _operatorFamily;
		
		private string _operatorMobile;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnhandleTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnhandleTimeChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnoperatorIdChanging(System.Nullable<long> value);
    partial void OnoperatorIdChanged();
    partial void OnbyDistributorChanging(bool value);
    partial void OnbyDistributorChanged();
    partial void OnoperatorNameChanging(string value);
    partial void OnoperatorNameChanged();
    partial void OnoperatorFamilyChanging(string value);
    partial void OnoperatorFamilyChanged();
    partial void OnoperatorMobileChanging(string value);
    partial void OnoperatorMobileChanged();
    #endregion
		
		public DistributorCancelingOrderTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handleTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> handleTime
		{
			get
			{
				return this._handleTime;
			}
			set
			{
				if ((this._handleTime != value))
				{
					this.OnhandleTimeChanging(value);
					this.SendPropertyChanging();
					this._handleTime = value;
					this.SendPropertyChanged("handleTime");
					this.OnhandleTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorId", DbType="BigInt")]
		public System.Nullable<long> operatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnoperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("operatorId");
					this.OnoperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_byDistributor", DbType="Bit NOT NULL")]
		public bool byDistributor
		{
			get
			{
				return this._byDistributor;
			}
			set
			{
				if ((this._byDistributor != value))
				{
					this.OnbyDistributorChanging(value);
					this.SendPropertyChanging();
					this._byDistributor = value;
					this.SendPropertyChanged("byDistributor");
					this.OnbyDistributorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorName", DbType="NVarChar(200)")]
		public string operatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnoperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("operatorName");
					this.OnoperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorFamily", DbType="NVarChar(200)")]
		public string operatorFamily
		{
			get
			{
				return this._operatorFamily;
			}
			set
			{
				if ((this._operatorFamily != value))
				{
					this.OnoperatorFamilyChanging(value);
					this.SendPropertyChanging();
					this._operatorFamily = value;
					this.SendPropertyChanged("operatorFamily");
					this.OnoperatorFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorMobile", DbType="Char(11)")]
		public string operatorMobile
		{
			get
			{
				return this._operatorMobile;
			}
			set
			{
				if ((this._operatorMobile != value))
				{
					this.OnoperatorMobileChanging(value);
					this.SendPropertyChanging();
					this._operatorMobile = value;
					this.SendPropertyChanged("operatorMobile");
					this.OnoperatorMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorCancelingOrderTbl", Storage="_UserTbl", ThisKey="operatorId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.DistributorCancelingOrderTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.DistributorCancelingOrderTbls.Add(this);
						this._operatorId = value.ID;
					}
					else
					{
						this._operatorId = default(Nullable<long>);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributorStartLocationTbl")]
	public partial class DistributorStartLocationTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _distributorId;
		
		private double _lat;
		
		private double _lng;
		
		private System.DateTime _regDate;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OndistributorIdChanging(long value);
    partial void OndistributorIdChanged();
    partial void OnlatChanging(double value);
    partial void OnlatChanged();
    partial void OnlngChanging(double value);
    partial void OnlngChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public DistributorStartLocationTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distributorId", DbType="BigInt NOT NULL")]
		public long distributorId
		{
			get
			{
				return this._distributorId;
			}
			set
			{
				if ((this._distributorId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndistributorIdChanging(value);
					this.SendPropertyChanging();
					this._distributorId = value;
					this.SendPropertyChanged("distributorId");
					this.OndistributorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lat", DbType="Float NOT NULL")]
		public double lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				if ((this._lat != value))
				{
					this.OnlatChanging(value);
					this.SendPropertyChanging();
					this._lat = value;
					this.SendPropertyChanged("lat");
					this.OnlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lng", DbType="Float NOT NULL")]
		public double lng
		{
			get
			{
				return this._lng;
			}
			set
			{
				if ((this._lng != value))
				{
					this.OnlngChanging(value);
					this.SendPropertyChanging();
					this._lng = value;
					this.SendPropertyChanged("lng");
					this.OnlngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorStartLocationTbl", Storage="_UserTbl", ThisKey="distributorId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.DistributorStartLocationTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.DistributorStartLocationTbls.Add(this);
						this._distributorId = value.ID;
					}
					else
					{
						this._distributorId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributorTimeSheetTbl")]
	public partial class DistributorTimeSheetTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _activeDayId;
		
		private long _distributorId;
		
		private bool _isActive;
		
		private EntityRef<ActiveDayTbl> _ActiveDayTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnactiveDayIdChanging(long value);
    partial void OnactiveDayIdChanged();
    partial void OndistributorIdChanging(long value);
    partial void OndistributorIdChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public DistributorTimeSheetTbl()
		{
			this._ActiveDayTbl = default(EntityRef<ActiveDayTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activeDayId", DbType="BigInt NOT NULL")]
		public long activeDayId
		{
			get
			{
				return this._activeDayId;
			}
			set
			{
				if ((this._activeDayId != value))
				{
					if (this._ActiveDayTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactiveDayIdChanging(value);
					this.SendPropertyChanging();
					this._activeDayId = value;
					this.SendPropertyChanged("activeDayId");
					this.OnactiveDayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distributorId", DbType="BigInt NOT NULL")]
		public long distributorId
		{
			get
			{
				return this._distributorId;
			}
			set
			{
				if ((this._distributorId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndistributorIdChanging(value);
					this.SendPropertyChanging();
					this._distributorId = value;
					this.SendPropertyChanged("distributorId");
					this.OndistributorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveDayTbl_DistributorTimeSheetTbl", Storage="_ActiveDayTbl", ThisKey="activeDayId", OtherKey="ID", IsForeignKey=true)]
		public ActiveDayTbl ActiveDayTbl
		{
			get
			{
				return this._ActiveDayTbl.Entity;
			}
			set
			{
				ActiveDayTbl previousValue = this._ActiveDayTbl.Entity;
				if (((previousValue != value) 
							|| (this._ActiveDayTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActiveDayTbl.Entity = null;
						previousValue.DistributorTimeSheetTbls.Remove(this);
					}
					this._ActiveDayTbl.Entity = value;
					if ((value != null))
					{
						value.DistributorTimeSheetTbls.Add(this);
						this._activeDayId = value.ID;
					}
					else
					{
						this._activeDayId = default(long);
					}
					this.SendPropertyChanged("ActiveDayTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorTimeSheetTbl", Storage="_UserTbl", ThisKey="distributorId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.DistributorTimeSheetTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.DistributorTimeSheetTbls.Add(this);
						this._distributorId = value.ID;
					}
					else
					{
						this._distributorId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DraftDetailProductFieldsTbl")]
	public partial class DraftDetailProductFieldsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _draftDetailId;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<DraftDetailTbl> _DraftDetailTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OndraftDetailIdChanging(long value);
    partial void OndraftDetailIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public DraftDetailProductFieldsTbl()
		{
			this._DraftDetailTbl = default(EntityRef<DraftDetailTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_draftDetailId", DbType="BigInt NOT NULL")]
		public long draftDetailId
		{
			get
			{
				return this._draftDetailId;
			}
			set
			{
				if ((this._draftDetailId != value))
				{
					if (this._DraftDetailTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndraftDetailIdChanging(value);
					this.SendPropertyChanging();
					this._draftDetailId = value;
					this.SendPropertyChanged("draftDetailId");
					this.OndraftDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DraftDetailTbl_DraftDetailProductFieldsTbl", Storage="_DraftDetailTbl", ThisKey="draftDetailId", OtherKey="ID", IsForeignKey=true)]
		public DraftDetailTbl DraftDetailTbl
		{
			get
			{
				return this._DraftDetailTbl.Entity;
			}
			set
			{
				DraftDetailTbl previousValue = this._DraftDetailTbl.Entity;
				if (((previousValue != value) 
							|| (this._DraftDetailTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DraftDetailTbl.Entity = null;
						previousValue.DraftDetailProductFieldsTbls.Remove(this);
					}
					this._DraftDetailTbl.Entity = value;
					if ((value != null))
					{
						value.DraftDetailProductFieldsTbls.Add(this);
						this._draftDetailId = value.ID;
					}
					else
					{
						this._draftDetailId = default(long);
					}
					this.SendPropertyChanged("DraftDetailTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DraftDetailTbl")]
	public partial class DraftDetailTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _draftId;
		
		private long _productId;
		
		private string _productCode;
		
		private int _quantity;
		
		private double _unitPrice;
		
		private string _productName;
		
		private double _productPrice;
		
		private string _productDescription;
		
		private long _productUnitName;
		
		private EntitySet<DraftDetailProductFieldsTbl> _DraftDetailProductFieldsTbls;
		
		private EntityRef<DraftTbl> _DraftTbl;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OndraftIdChanging(long value);
    partial void OndraftIdChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnunitPriceChanging(double value);
    partial void OnunitPriceChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnproductPriceChanging(double value);
    partial void OnproductPriceChanged();
    partial void OnproductDescriptionChanging(string value);
    partial void OnproductDescriptionChanged();
    partial void OnproductUnitNameChanging(long value);
    partial void OnproductUnitNameChanged();
    #endregion
		
		public DraftDetailTbl()
		{
			this._DraftDetailProductFieldsTbls = new EntitySet<DraftDetailProductFieldsTbl>(new Action<DraftDetailProductFieldsTbl>(this.attach_DraftDetailProductFieldsTbls), new Action<DraftDetailProductFieldsTbl>(this.detach_DraftDetailProductFieldsTbls));
			this._DraftTbl = default(EntityRef<DraftTbl>);
			this._ProductTbl = default(EntityRef<ProductTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_draftId", DbType="BigInt NOT NULL")]
		public long draftId
		{
			get
			{
				return this._draftId;
			}
			set
			{
				if ((this._draftId != value))
				{
					if (this._DraftTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndraftIdChanging(value);
					this.SendPropertyChanging();
					this._draftId = value;
					this.SendPropertyChanged("draftId");
					this.OndraftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Float NOT NULL")]
		public double unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Float NOT NULL")]
		public double productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string productDescription
		{
			get
			{
				return this._productDescription;
			}
			set
			{
				if ((this._productDescription != value))
				{
					this.OnproductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._productDescription = value;
					this.SendPropertyChanged("productDescription");
					this.OnproductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productUnitName", DbType="BigInt NOT NULL")]
		public long productUnitName
		{
			get
			{
				return this._productUnitName;
			}
			set
			{
				if ((this._productUnitName != value))
				{
					this.OnproductUnitNameChanging(value);
					this.SendPropertyChanging();
					this._productUnitName = value;
					this.SendPropertyChanged("productUnitName");
					this.OnproductUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DraftDetailTbl_DraftDetailProductFieldsTbl", Storage="_DraftDetailProductFieldsTbls", ThisKey="ID", OtherKey="draftDetailId")]
		public EntitySet<DraftDetailProductFieldsTbl> DraftDetailProductFieldsTbls
		{
			get
			{
				return this._DraftDetailProductFieldsTbls;
			}
			set
			{
				this._DraftDetailProductFieldsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DraftTbl_DraftDetailTbl", Storage="_DraftTbl", ThisKey="draftId", OtherKey="ID", IsForeignKey=true)]
		public DraftTbl DraftTbl
		{
			get
			{
				return this._DraftTbl.Entity;
			}
			set
			{
				DraftTbl previousValue = this._DraftTbl.Entity;
				if (((previousValue != value) 
							|| (this._DraftTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DraftTbl.Entity = null;
						previousValue.DraftDetailTbls.Remove(this);
					}
					this._DraftTbl.Entity = value;
					if ((value != null))
					{
						value.DraftDetailTbls.Add(this);
						this._draftId = value.ID;
					}
					else
					{
						this._draftId = default(long);
					}
					this.SendPropertyChanged("DraftTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_DraftDetailTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.DraftDetailTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.DraftDetailTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DraftDetailProductFieldsTbls(DraftDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.DraftDetailTbl = this;
		}
		
		private void detach_DraftDetailProductFieldsTbls(DraftDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.DraftDetailTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DraftTbl")]
	public partial class DraftTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _warehouseKeeperId;
		
		private long _userId;
		
		private string _code;
		
		private string _description;
		
		private System.DateTime _regDate;
		
		private string _warehouseKeeperName;
		
		private string _warehouseKeeperFamily;
		
		private string _warehouseKeeperMobile;
		
		private string _userName;
		
		private string _userFamily;
		
		private string _userMobile;
		
		private byte _status;
		
		private EntitySet<DraftDetailTbl> _DraftDetailTbls;
		
		private EntityRef<UserTbl> _UserTbl;
		
		private EntityRef<UserTbl> _UserTbl1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnwarehouseKeeperIdChanging(long value);
    partial void OnwarehouseKeeperIdChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnwarehouseKeeperNameChanging(string value);
    partial void OnwarehouseKeeperNameChanged();
    partial void OnwarehouseKeeperFamilyChanging(string value);
    partial void OnwarehouseKeeperFamilyChanged();
    partial void OnwarehouseKeeperMobileChanging(string value);
    partial void OnwarehouseKeeperMobileChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserFamilyChanging(string value);
    partial void OnuserFamilyChanged();
    partial void OnuserMobileChanging(string value);
    partial void OnuserMobileChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public DraftTbl()
		{
			this._DraftDetailTbls = new EntitySet<DraftDetailTbl>(new Action<DraftDetailTbl>(this.attach_DraftDetailTbls), new Action<DraftDetailTbl>(this.detach_DraftDetailTbls));
			this._UserTbl = default(EntityRef<UserTbl>);
			this._UserTbl1 = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseKeeperId", DbType="BigInt NOT NULL")]
		public long warehouseKeeperId
		{
			get
			{
				return this._warehouseKeeperId;
			}
			set
			{
				if ((this._warehouseKeeperId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwarehouseKeeperIdChanging(value);
					this.SendPropertyChanging();
					this._warehouseKeeperId = value;
					this.SendPropertyChanged("warehouseKeeperId");
					this.OnwarehouseKeeperIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._UserTbl1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseKeeperName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string warehouseKeeperName
		{
			get
			{
				return this._warehouseKeeperName;
			}
			set
			{
				if ((this._warehouseKeeperName != value))
				{
					this.OnwarehouseKeeperNameChanging(value);
					this.SendPropertyChanging();
					this._warehouseKeeperName = value;
					this.SendPropertyChanged("warehouseKeeperName");
					this.OnwarehouseKeeperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseKeeperFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string warehouseKeeperFamily
		{
			get
			{
				return this._warehouseKeeperFamily;
			}
			set
			{
				if ((this._warehouseKeeperFamily != value))
				{
					this.OnwarehouseKeeperFamilyChanging(value);
					this.SendPropertyChanging();
					this._warehouseKeeperFamily = value;
					this.SendPropertyChanged("warehouseKeeperFamily");
					this.OnwarehouseKeeperFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseKeeperMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string warehouseKeeperMobile
		{
			get
			{
				return this._warehouseKeeperMobile;
			}
			set
			{
				if ((this._warehouseKeeperMobile != value))
				{
					this.OnwarehouseKeeperMobileChanging(value);
					this.SendPropertyChanging();
					this._warehouseKeeperMobile = value;
					this.SendPropertyChanged("warehouseKeeperMobile");
					this.OnwarehouseKeeperMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string userFamily
		{
			get
			{
				return this._userFamily;
			}
			set
			{
				if ((this._userFamily != value))
				{
					this.OnuserFamilyChanging(value);
					this.SendPropertyChanging();
					this._userFamily = value;
					this.SendPropertyChanged("userFamily");
					this.OnuserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string userMobile
		{
			get
			{
				return this._userMobile;
			}
			set
			{
				if ((this._userMobile != value))
				{
					this.OnuserMobileChanging(value);
					this.SendPropertyChanging();
					this._userMobile = value;
					this.SendPropertyChanged("userMobile");
					this.OnuserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DraftTbl_DraftDetailTbl", Storage="_DraftDetailTbls", ThisKey="ID", OtherKey="draftId")]
		public EntitySet<DraftDetailTbl> DraftDetailTbls
		{
			get
			{
				return this._DraftDetailTbls;
			}
			set
			{
				this._DraftDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DraftTbl", Storage="_UserTbl", ThisKey="warehouseKeeperId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.DraftTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.DraftTbls.Add(this);
						this._warehouseKeeperId = value.ID;
					}
					else
					{
						this._warehouseKeeperId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DraftTbl1", Storage="_UserTbl1", ThisKey="userId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl1
		{
			get
			{
				return this._UserTbl1.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl1.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl1.Entity = null;
						previousValue.DraftTbls1.Remove(this);
					}
					this._UserTbl1.Entity = value;
					if ((value != null))
					{
						value.DraftTbls1.Add(this);
						this._userId = value.ID;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("UserTbl1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DraftDetailTbls(DraftDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.DraftTbl = this;
		}
		
		private void detach_DraftDetailTbls(DraftDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.DraftTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EngineVolumeTbl")]
	public partial class EngineVolumeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private byte _status;
		
		private EntitySet<CarTbl> _CarTbls;
		
		private EntitySet<CarType_EngineVolumeTbl> _CarType_EngineVolumeTbls;
		
		private EntitySet<ServiceCarTypeGroup_EngineVolumeTbl> _ServiceCarTypeGroup_EngineVolumeTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public EngineVolumeTbl()
		{
			this._CarTbls = new EntitySet<CarTbl>(new Action<CarTbl>(this.attach_CarTbls), new Action<CarTbl>(this.detach_CarTbls));
			this._CarType_EngineVolumeTbls = new EntitySet<CarType_EngineVolumeTbl>(new Action<CarType_EngineVolumeTbl>(this.attach_CarType_EngineVolumeTbls), new Action<CarType_EngineVolumeTbl>(this.detach_CarType_EngineVolumeTbls));
			this._ServiceCarTypeGroup_EngineVolumeTbls = new EntitySet<ServiceCarTypeGroup_EngineVolumeTbl>(new Action<ServiceCarTypeGroup_EngineVolumeTbl>(this.attach_ServiceCarTypeGroup_EngineVolumeTbls), new Action<ServiceCarTypeGroup_EngineVolumeTbl>(this.detach_ServiceCarTypeGroup_EngineVolumeTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngineVolumeTbl_CarTbl", Storage="_CarTbls", ThisKey="ID", OtherKey="engineVolumeID")]
		public EntitySet<CarTbl> CarTbls
		{
			get
			{
				return this._CarTbls;
			}
			set
			{
				this._CarTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngineVolumeTbl_CarType_EngineVolumeTbl", Storage="_CarType_EngineVolumeTbls", ThisKey="ID", OtherKey="engineVolumeID")]
		public EntitySet<CarType_EngineVolumeTbl> CarType_EngineVolumeTbls
		{
			get
			{
				return this._CarType_EngineVolumeTbls;
			}
			set
			{
				this._CarType_EngineVolumeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngineVolumeTbl_ServiceCarTypeGroup_EngineVolumeTbl", Storage="_ServiceCarTypeGroup_EngineVolumeTbls", ThisKey="ID", OtherKey="engineVolumeID")]
		public EntitySet<ServiceCarTypeGroup_EngineVolumeTbl> ServiceCarTypeGroup_EngineVolumeTbls
		{
			get
			{
				return this._ServiceCarTypeGroup_EngineVolumeTbls;
			}
			set
			{
				this._ServiceCarTypeGroup_EngineVolumeTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarTbls(CarTbl entity)
		{
			this.SendPropertyChanging();
			entity.EngineVolumeTbl = this;
		}
		
		private void detach_CarTbls(CarTbl entity)
		{
			this.SendPropertyChanging();
			entity.EngineVolumeTbl = null;
		}
		
		private void attach_CarType_EngineVolumeTbls(CarType_EngineVolumeTbl entity)
		{
			this.SendPropertyChanging();
			entity.EngineVolumeTbl = this;
		}
		
		private void detach_CarType_EngineVolumeTbls(CarType_EngineVolumeTbl entity)
		{
			this.SendPropertyChanging();
			entity.EngineVolumeTbl = null;
		}
		
		private void attach_ServiceCarTypeGroup_EngineVolumeTbls(ServiceCarTypeGroup_EngineVolumeTbl entity)
		{
			this.SendPropertyChanging();
			entity.EngineVolumeTbl = this;
		}
		
		private void detach_ServiceCarTypeGroup_EngineVolumeTbls(ServiceCarTypeGroup_EngineVolumeTbl entity)
		{
			this.SendPropertyChanging();
			entity.EngineVolumeTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExcludDaysTbl")]
	public partial class ExcludDaysTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _date;
		
		private System.TimeSpan _start;
		
		private System.TimeSpan _end;
		
		private System.DateTime _regDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnstartChanging(System.TimeSpan value);
    partial void OnstartChanged();
    partial void OnendChanging(System.TimeSpan value);
    partial void OnendChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public ExcludDaysTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start", DbType="Time NOT NULL")]
		public System.TimeSpan start
		{
			get
			{
				return this._start;
			}
			set
			{
				if ((this._start != value))
				{
					this.OnstartChanging(value);
					this.SendPropertyChanging();
					this._start = value;
					this.SendPropertyChanged("start");
					this.OnstartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[end]", Storage="_end", DbType="Time NOT NULL")]
		public System.TimeSpan end
		{
			get
			{
				return this._end;
			}
			set
			{
				if ((this._end != value))
				{
					this.OnendChanging(value);
					this.SendPropertyChanging();
					this._end = value;
					this.SendPropertyChanged("end");
					this.OnendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiftCardMellatTbl")]
	public partial class GiftCardMellatTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _giftCardId;
		
		private System.DateTime _startTime;
		
		private System.DateTime _endTime;
		
		private double _value;
		
		private double _systemShare;
		
		private byte _status;
		
		private System.DateTime _regDate;
		
		private long _packageId;
		
		private EntityRef<GiftCardTbl> _GiftCardTbl;
		
		private EntityRef<PackageTbl> _PackageTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OngiftCardIdChanging(long value);
    partial void OngiftCardIdChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OnsystemShareChanging(double value);
    partial void OnsystemShareChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnpackageIdChanging(long value);
    partial void OnpackageIdChanged();
    #endregion
		
		public GiftCardMellatTbl()
		{
			this._GiftCardTbl = default(EntityRef<GiftCardTbl>);
			this._PackageTbl = default(EntityRef<PackageTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giftCardId", DbType="BigInt NOT NULL")]
		public long giftCardId
		{
			get
			{
				return this._giftCardId;
			}
			set
			{
				if ((this._giftCardId != value))
				{
					if (this._GiftCardTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngiftCardIdChanging(value);
					this.SendPropertyChanging();
					this._giftCardId = value;
					this.SendPropertyChanged("giftCardId");
					this.OngiftCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_systemShare", DbType="Float NOT NULL")]
		public double systemShare
		{
			get
			{
				return this._systemShare;
			}
			set
			{
				if ((this._systemShare != value))
				{
					this.OnsystemShareChanging(value);
					this.SendPropertyChanging();
					this._systemShare = value;
					this.SendPropertyChanged("systemShare");
					this.OnsystemShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageId", DbType="BigInt NOT NULL")]
		public long packageId
		{
			get
			{
				return this._packageId;
			}
			set
			{
				if ((this._packageId != value))
				{
					if (this._PackageTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpackageIdChanging(value);
					this.SendPropertyChanging();
					this._packageId = value;
					this.SendPropertyChanged("packageId");
					this.OnpackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiftCardTbl_GiftCardMellatTbl", Storage="_GiftCardTbl", ThisKey="giftCardId", OtherKey="ID", IsForeignKey=true)]
		public GiftCardTbl GiftCardTbl
		{
			get
			{
				return this._GiftCardTbl.Entity;
			}
			set
			{
				GiftCardTbl previousValue = this._GiftCardTbl.Entity;
				if (((previousValue != value) 
							|| (this._GiftCardTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiftCardTbl.Entity = null;
						previousValue.GiftCardMellatTbls.Remove(this);
					}
					this._GiftCardTbl.Entity = value;
					if ((value != null))
					{
						value.GiftCardMellatTbls.Add(this);
						this._giftCardId = value.ID;
					}
					else
					{
						this._giftCardId = default(long);
					}
					this.SendPropertyChanged("GiftCardTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageTbl_GiftCardMellatTbl", Storage="_PackageTbl", ThisKey="packageId", OtherKey="ID", IsForeignKey=true)]
		public PackageTbl PackageTbl
		{
			get
			{
				return this._PackageTbl.Entity;
			}
			set
			{
				PackageTbl previousValue = this._PackageTbl.Entity;
				if (((previousValue != value) 
							|| (this._PackageTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageTbl.Entity = null;
						previousValue.GiftCardMellatTbls.Remove(this);
					}
					this._PackageTbl.Entity = value;
					if ((value != null))
					{
						value.GiftCardMellatTbls.Add(this);
						this._packageId = value.ID;
					}
					else
					{
						this._packageId = default(long);
					}
					this.SendPropertyChanged("PackageTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiftCardTbl")]
	public partial class GiftCardTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private System.DateTime _startTime;
		
		private System.DateTime _endTime;
		
		private double _value;
		
		private bool _isPercent;
		
		private string _code;
		
		private double _maxPrice;
		
		private System.Nullable<long> _customerId;
		
		private int _maxReuse;
		
		private int _totalReuse;
		
		private byte _status;
		
		private byte _type;
		
		private System.Nullable<long> _presenterId;
		
		private System.DateTime _regDate;
		
		private System.Nullable<long> _packageId;
		
		private EntitySet<Customer_GiftCardTbl> _Customer_GiftCardTbls;
		
		private EntitySet<GiftCardMellatTbl> _GiftCardMellatTbls;
		
		private EntitySet<periodGiftCardTbl> _periodGiftCardTbls;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<PackageTbl> _PackageTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OnisPercentChanging(bool value);
    partial void OnisPercentChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnmaxPriceChanging(double value);
    partial void OnmaxPriceChanged();
    partial void OncustomerIdChanging(System.Nullable<long> value);
    partial void OncustomerIdChanged();
    partial void OnmaxReuseChanging(int value);
    partial void OnmaxReuseChanged();
    partial void OntotalReuseChanging(int value);
    partial void OntotalReuseChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OnpresenterIdChanging(System.Nullable<long> value);
    partial void OnpresenterIdChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnpackageIdChanging(System.Nullable<long> value);
    partial void OnpackageIdChanged();
    #endregion
		
		public GiftCardTbl()
		{
			this._Customer_GiftCardTbls = new EntitySet<Customer_GiftCardTbl>(new Action<Customer_GiftCardTbl>(this.attach_Customer_GiftCardTbls), new Action<Customer_GiftCardTbl>(this.detach_Customer_GiftCardTbls));
			this._GiftCardMellatTbls = new EntitySet<GiftCardMellatTbl>(new Action<GiftCardMellatTbl>(this.attach_GiftCardMellatTbls), new Action<GiftCardMellatTbl>(this.detach_GiftCardMellatTbls));
			this._periodGiftCardTbls = new EntitySet<periodGiftCardTbl>(new Action<periodGiftCardTbl>(this.attach_periodGiftCardTbls), new Action<periodGiftCardTbl>(this.detach_periodGiftCardTbls));
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._PackageTbl = default(EntityRef<PackageTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPercent", DbType="Bit NOT NULL")]
		public bool isPercent
		{
			get
			{
				return this._isPercent;
			}
			set
			{
				if ((this._isPercent != value))
				{
					this.OnisPercentChanging(value);
					this.SendPropertyChanging();
					this._isPercent = value;
					this.SendPropertyChanged("isPercent");
					this.OnisPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxPrice", DbType="Float NOT NULL")]
		public double maxPrice
		{
			get
			{
				return this._maxPrice;
			}
			set
			{
				if ((this._maxPrice != value))
				{
					this.OnmaxPriceChanging(value);
					this.SendPropertyChanging();
					this._maxPrice = value;
					this.SendPropertyChanged("maxPrice");
					this.OnmaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt")]
		public System.Nullable<long> customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxReuse", DbType="Int NOT NULL")]
		public int maxReuse
		{
			get
			{
				return this._maxReuse;
			}
			set
			{
				if ((this._maxReuse != value))
				{
					this.OnmaxReuseChanging(value);
					this.SendPropertyChanging();
					this._maxReuse = value;
					this.SendPropertyChanged("maxReuse");
					this.OnmaxReuseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalReuse", DbType="Int NOT NULL")]
		public int totalReuse
		{
			get
			{
				return this._totalReuse;
			}
			set
			{
				if ((this._totalReuse != value))
				{
					this.OntotalReuseChanging(value);
					this.SendPropertyChanging();
					this._totalReuse = value;
					this.SendPropertyChanged("totalReuse");
					this.OntotalReuseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presenterId", DbType="BigInt")]
		public System.Nullable<long> presenterId
		{
			get
			{
				return this._presenterId;
			}
			set
			{
				if ((this._presenterId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpresenterIdChanging(value);
					this.SendPropertyChanging();
					this._presenterId = value;
					this.SendPropertyChanged("presenterId");
					this.OnpresenterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageId", DbType="BigInt")]
		public System.Nullable<long> packageId
		{
			get
			{
				return this._packageId;
			}
			set
			{
				if ((this._packageId != value))
				{
					if (this._PackageTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpackageIdChanging(value);
					this.SendPropertyChanging();
					this._packageId = value;
					this.SendPropertyChanged("packageId");
					this.OnpackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiftCardTbl_Customer_GiftCardTbl", Storage="_Customer_GiftCardTbls", ThisKey="ID", OtherKey="giftCardId")]
		public EntitySet<Customer_GiftCardTbl> Customer_GiftCardTbls
		{
			get
			{
				return this._Customer_GiftCardTbls;
			}
			set
			{
				this._Customer_GiftCardTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiftCardTbl_GiftCardMellatTbl", Storage="_GiftCardMellatTbls", ThisKey="ID", OtherKey="giftCardId")]
		public EntitySet<GiftCardMellatTbl> GiftCardMellatTbls
		{
			get
			{
				return this._GiftCardMellatTbls;
			}
			set
			{
				this._GiftCardMellatTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiftCardTbl_periodGiftCardTbl", Storage="_periodGiftCardTbls", ThisKey="ID", OtherKey="giftCardId")]
		public EntitySet<periodGiftCardTbl> periodGiftCardTbls
		{
			get
			{
				return this._periodGiftCardTbls;
			}
			set
			{
				this._periodGiftCardTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_GiftCardTbl", Storage="_CustomerTbl", ThisKey="presenterId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.GiftCardTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.GiftCardTbls.Add(this);
						this._presenterId = value.ID;
					}
					else
					{
						this._presenterId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageTbl_GiftCardTbl", Storage="_PackageTbl", ThisKey="packageId", OtherKey="ID", IsForeignKey=true)]
		public PackageTbl PackageTbl
		{
			get
			{
				return this._PackageTbl.Entity;
			}
			set
			{
				PackageTbl previousValue = this._PackageTbl.Entity;
				if (((previousValue != value) 
							|| (this._PackageTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageTbl.Entity = null;
						previousValue.GiftCardTbls.Remove(this);
					}
					this._PackageTbl.Entity = value;
					if ((value != null))
					{
						value.GiftCardTbls.Add(this);
						this._packageId = value.ID;
					}
					else
					{
						this._packageId = default(Nullable<long>);
					}
					this.SendPropertyChanged("PackageTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_GiftCardTbls(Customer_GiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.GiftCardTbl = this;
		}
		
		private void detach_Customer_GiftCardTbls(Customer_GiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.GiftCardTbl = null;
		}
		
		private void attach_GiftCardMellatTbls(GiftCardMellatTbl entity)
		{
			this.SendPropertyChanging();
			entity.GiftCardTbl = this;
		}
		
		private void detach_GiftCardMellatTbls(GiftCardMellatTbl entity)
		{
			this.SendPropertyChanging();
			entity.GiftCardTbl = null;
		}
		
		private void attach_periodGiftCardTbls(periodGiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.GiftCardTbl = this;
		}
		
		private void detach_periodGiftCardTbls(periodGiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.GiftCardTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MBProto_sessionTbl")]
	public partial class MBProto_sessionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerID;
		
		private long _sessionID;
		
		private long _authKeyID;
		
		private string _diffKey;
		
		private string _messageIdCollection;
		
		private System.DateTime _regDate;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIDChanging(long value);
    partial void OncustomerIDChanged();
    partial void OnsessionIDChanging(long value);
    partial void OnsessionIDChanged();
    partial void OnauthKeyIDChanging(long value);
    partial void OnauthKeyIDChanged();
    partial void OndiffKeyChanging(string value);
    partial void OndiffKeyChanged();
    partial void OnmessageIdCollectionChanging(string value);
    partial void OnmessageIdCollectionChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public MBProto_sessionTbl()
		{
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", DbType="BigInt NOT NULL")]
		public long customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionID", DbType="BigInt NOT NULL")]
		public long sessionID
		{
			get
			{
				return this._sessionID;
			}
			set
			{
				if ((this._sessionID != value))
				{
					this.OnsessionIDChanging(value);
					this.SendPropertyChanging();
					this._sessionID = value;
					this.SendPropertyChanged("sessionID");
					this.OnsessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authKeyID", DbType="BigInt NOT NULL")]
		public long authKeyID
		{
			get
			{
				return this._authKeyID;
			}
			set
			{
				if ((this._authKeyID != value))
				{
					this.OnauthKeyIDChanging(value);
					this.SendPropertyChanging();
					this._authKeyID = value;
					this.SendPropertyChanged("authKeyID");
					this.OnauthKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diffKey", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string diffKey
		{
			get
			{
				return this._diffKey;
			}
			set
			{
				if ((this._diffKey != value))
				{
					this.OndiffKeyChanging(value);
					this.SendPropertyChanging();
					this._diffKey = value;
					this.SendPropertyChanged("diffKey");
					this.OndiffKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageIdCollection", DbType="NVarChar(800) NOT NULL", CanBeNull=false)]
		public string messageIdCollection
		{
			get
			{
				return this._messageIdCollection;
			}
			set
			{
				if ((this._messageIdCollection != value))
				{
					this.OnmessageIdCollectionChanging(value);
					this.SendPropertyChanging();
					this._messageIdCollection = value;
					this.SendPropertyChanged("messageIdCollection");
					this.OnmessageIdCollectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_MBProto_sessionTbl", Storage="_CustomerTbl", ThisKey="customerID", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.MBProto_sessionTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.MBProto_sessionTbls.Add(this);
						this._customerID = value.ID;
					}
					else
					{
						this._customerID = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MBProto_user_sessionTbl")]
	public partial class MBProto_user_sessionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userID;
		
		private long _sessionID;
		
		private long _authKeyID;
		
		private string _diffKey;
		
		private string _messageIdCollection;
		
		private System.DateTime _regDate;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIDChanging(long value);
    partial void OnuserIDChanged();
    partial void OnsessionIDChanging(long value);
    partial void OnsessionIDChanged();
    partial void OnauthKeyIDChanging(long value);
    partial void OnauthKeyIDChanged();
    partial void OndiffKeyChanging(string value);
    partial void OndiffKeyChanged();
    partial void OnmessageIdCollectionChanging(string value);
    partial void OnmessageIdCollectionChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public MBProto_user_sessionTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="BigInt NOT NULL")]
		public long userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionID", DbType="BigInt NOT NULL")]
		public long sessionID
		{
			get
			{
				return this._sessionID;
			}
			set
			{
				if ((this._sessionID != value))
				{
					this.OnsessionIDChanging(value);
					this.SendPropertyChanging();
					this._sessionID = value;
					this.SendPropertyChanged("sessionID");
					this.OnsessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authKeyID", DbType="BigInt NOT NULL")]
		public long authKeyID
		{
			get
			{
				return this._authKeyID;
			}
			set
			{
				if ((this._authKeyID != value))
				{
					this.OnauthKeyIDChanging(value);
					this.SendPropertyChanging();
					this._authKeyID = value;
					this.SendPropertyChanged("authKeyID");
					this.OnauthKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diffKey", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string diffKey
		{
			get
			{
				return this._diffKey;
			}
			set
			{
				if ((this._diffKey != value))
				{
					this.OndiffKeyChanging(value);
					this.SendPropertyChanging();
					this._diffKey = value;
					this.SendPropertyChanged("diffKey");
					this.OndiffKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageIdCollection", DbType="NVarChar(800) NOT NULL", CanBeNull=false)]
		public string messageIdCollection
		{
			get
			{
				return this._messageIdCollection;
			}
			set
			{
				if ((this._messageIdCollection != value))
				{
					this.OnmessageIdCollectionChanging(value);
					this.SendPropertyChanging();
					this._messageIdCollection = value;
					this.SendPropertyChanged("messageIdCollection");
					this.OnmessageIdCollectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_MBProto_user_sessionTbl", Storage="_UserTbl", ThisKey="userID", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.MBProto_user_sessionTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.MBProto_user_sessionTbls.Add(this);
						this._userID = value.ID;
					}
					else
					{
						this._userID = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MBProtoObjectTbl")]
	public partial class MBProtoObjectTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _hexCode;
		
		private string _title;
		
		private string _explain;
		
		private string _inputExplain;
		
		private string _outputExplain;
		
		private string _error;
		
		private bool _isMethod;
		
		private bool _isHide;
		
		private bool _isCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnhexCodeChanging(string value);
    partial void OnhexCodeChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnexplainChanging(string value);
    partial void OnexplainChanged();
    partial void OninputExplainChanging(string value);
    partial void OninputExplainChanged();
    partial void OnoutputExplainChanging(string value);
    partial void OnoutputExplainChanged();
    partial void OnerrorChanging(string value);
    partial void OnerrorChanged();
    partial void OnisMethodChanging(bool value);
    partial void OnisMethodChanged();
    partial void OnisHideChanging(bool value);
    partial void OnisHideChanged();
    partial void OnisCustomerChanging(bool value);
    partial void OnisCustomerChanged();
    #endregion
		
		public MBProtoObjectTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hexCode", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string hexCode
		{
			get
			{
				return this._hexCode;
			}
			set
			{
				if ((this._hexCode != value))
				{
					this.OnhexCodeChanging(value);
					this.SendPropertyChanging();
					this._hexCode = value;
					this.SendPropertyChanged("hexCode");
					this.OnhexCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explain", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string explain
		{
			get
			{
				return this._explain;
			}
			set
			{
				if ((this._explain != value))
				{
					this.OnexplainChanging(value);
					this.SendPropertyChanging();
					this._explain = value;
					this.SendPropertyChanged("explain");
					this.OnexplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inputExplain", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string inputExplain
		{
			get
			{
				return this._inputExplain;
			}
			set
			{
				if ((this._inputExplain != value))
				{
					this.OninputExplainChanging(value);
					this.SendPropertyChanging();
					this._inputExplain = value;
					this.SendPropertyChanged("inputExplain");
					this.OninputExplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outputExplain", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string outputExplain
		{
			get
			{
				return this._outputExplain;
			}
			set
			{
				if ((this._outputExplain != value))
				{
					this.OnoutputExplainChanging(value);
					this.SendPropertyChanging();
					this._outputExplain = value;
					this.SendPropertyChanged("outputExplain");
					this.OnoutputExplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_error", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string error
		{
			get
			{
				return this._error;
			}
			set
			{
				if ((this._error != value))
				{
					this.OnerrorChanging(value);
					this.SendPropertyChanging();
					this._error = value;
					this.SendPropertyChanged("error");
					this.OnerrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMethod", DbType="Bit NOT NULL")]
		public bool isMethod
		{
			get
			{
				return this._isMethod;
			}
			set
			{
				if ((this._isMethod != value))
				{
					this.OnisMethodChanging(value);
					this.SendPropertyChanging();
					this._isMethod = value;
					this.SendPropertyChanged("isMethod");
					this.OnisMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHide", DbType="Bit NOT NULL")]
		public bool isHide
		{
			get
			{
				return this._isHide;
			}
			set
			{
				if ((this._isHide != value))
				{
					this.OnisHideChanging(value);
					this.SendPropertyChanging();
					this._isHide = value;
					this.SendPropertyChanged("isHide");
					this.OnisHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCustomer", DbType="Bit NOT NULL")]
		public bool isCustomer
		{
			get
			{
				return this._isCustomer;
			}
			set
			{
				if ((this._isCustomer != value))
				{
					this.OnisCustomerChanging(value);
					this.SendPropertyChanging();
					this._isCustomer = value;
					this.SendPropertyChanged("isCustomer");
					this.OnisCustomerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OnlinePayOrderDiscountTbl")]
	public partial class OnlinePayOrderDiscountTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _description;
		
		private double _maxPrice;
		
		private bool _isPercent;
		
		private double _value;
		
		private System.DateTime _startTime;
		
		private double _minPrice;
		
		private System.DateTime _endTime;
		
		private byte _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnmaxPriceChanging(double value);
    partial void OnmaxPriceChanged();
    partial void OnisPercentChanging(bool value);
    partial void OnisPercentChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnminPriceChanging(double value);
    partial void OnminPriceChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public OnlinePayOrderDiscountTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(4000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxPrice", DbType="Float NOT NULL")]
		public double maxPrice
		{
			get
			{
				return this._maxPrice;
			}
			set
			{
				if ((this._maxPrice != value))
				{
					this.OnmaxPriceChanging(value);
					this.SendPropertyChanging();
					this._maxPrice = value;
					this.SendPropertyChanged("maxPrice");
					this.OnmaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPercent", DbType="Bit NOT NULL")]
		public bool isPercent
		{
			get
			{
				return this._isPercent;
			}
			set
			{
				if ((this._isPercent != value))
				{
					this.OnisPercentChanging(value);
					this.SendPropertyChanging();
					this._isPercent = value;
					this.SendPropertyChanged("isPercent");
					this.OnisPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minPrice", DbType="Float NOT NULL")]
		public double minPrice
		{
			get
			{
				return this._minPrice;
			}
			set
			{
				if ((this._minPrice != value))
				{
					this.OnminPriceChanging(value);
					this.SendPropertyChanging();
					this._minPrice = value;
					this.SendPropertyChanged("minPrice");
					this.OnminPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageServiceTbl")]
	public partial class PackageServiceTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _packageID;
		
		private long _serviceID;
		
		private long _serviceGroupID;
		
		private int _priority;
		
		private EntityRef<PackageTbl> _PackageTbl;
		
		private EntityRef<ServiceGroupTbl> _ServiceGroupTbl;
		
		private EntityRef<ServiceTbl> _ServiceTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnpackageIDChanging(long value);
    partial void OnpackageIDChanged();
    partial void OnserviceIDChanging(long value);
    partial void OnserviceIDChanged();
    partial void OnserviceGroupIDChanging(long value);
    partial void OnserviceGroupIDChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    #endregion
		
		public PackageServiceTbl()
		{
			this._PackageTbl = default(EntityRef<PackageTbl>);
			this._ServiceGroupTbl = default(EntityRef<ServiceGroupTbl>);
			this._ServiceTbl = default(EntityRef<ServiceTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageID", DbType="BigInt NOT NULL")]
		public long packageID
		{
			get
			{
				return this._packageID;
			}
			set
			{
				if ((this._packageID != value))
				{
					if (this._PackageTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpackageIDChanging(value);
					this.SendPropertyChanging();
					this._packageID = value;
					this.SendPropertyChanged("packageID");
					this.OnpackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceID", DbType="BigInt NOT NULL")]
		public long serviceID
		{
			get
			{
				return this._serviceID;
			}
			set
			{
				if ((this._serviceID != value))
				{
					if (this._ServiceTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceIDChanging(value);
					this.SendPropertyChanging();
					this._serviceID = value;
					this.SendPropertyChanged("serviceID");
					this.OnserviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceGroupID", DbType="BigInt NOT NULL")]
		public long serviceGroupID
		{
			get
			{
				return this._serviceGroupID;
			}
			set
			{
				if ((this._serviceGroupID != value))
				{
					if (this._ServiceGroupTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._serviceGroupID = value;
					this.SendPropertyChanged("serviceGroupID");
					this.OnserviceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageTbl_PackageServiceTbl", Storage="_PackageTbl", ThisKey="packageID", OtherKey="ID", IsForeignKey=true)]
		public PackageTbl PackageTbl
		{
			get
			{
				return this._PackageTbl.Entity;
			}
			set
			{
				PackageTbl previousValue = this._PackageTbl.Entity;
				if (((previousValue != value) 
							|| (this._PackageTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageTbl.Entity = null;
						previousValue.PackageServiceTbls.Remove(this);
					}
					this._PackageTbl.Entity = value;
					if ((value != null))
					{
						value.PackageServiceTbls.Add(this);
						this._packageID = value.ID;
					}
					else
					{
						this._packageID = default(long);
					}
					this.SendPropertyChanged("PackageTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceGroupTbl_PackageServiceTbl", Storage="_ServiceGroupTbl", ThisKey="serviceGroupID", OtherKey="ID", IsForeignKey=true)]
		public ServiceGroupTbl ServiceGroupTbl
		{
			get
			{
				return this._ServiceGroupTbl.Entity;
			}
			set
			{
				ServiceGroupTbl previousValue = this._ServiceGroupTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceGroupTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceGroupTbl.Entity = null;
						previousValue.PackageServiceTbls.Remove(this);
					}
					this._ServiceGroupTbl.Entity = value;
					if ((value != null))
					{
						value.PackageServiceTbls.Add(this);
						this._serviceGroupID = value.ID;
					}
					else
					{
						this._serviceGroupID = default(long);
					}
					this.SendPropertyChanged("ServiceGroupTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceTbl_PackageServiceTbl", Storage="_ServiceTbl", ThisKey="serviceID", OtherKey="ID", IsForeignKey=true)]
		public ServiceTbl ServiceTbl
		{
			get
			{
				return this._ServiceTbl.Entity;
			}
			set
			{
				ServiceTbl previousValue = this._ServiceTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceTbl.Entity = null;
						previousValue.PackageServiceTbls.Remove(this);
					}
					this._ServiceTbl.Entity = value;
					if ((value != null))
					{
						value.PackageServiceTbls.Add(this);
						this._serviceID = value.ID;
					}
					else
					{
						this._serviceID = default(long);
					}
					this.SendPropertyChanged("ServiceTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageTbl")]
	public partial class PackageTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _description;
		
		private bool _isCurrentDay;
		
		private bool _isAreaEffective;
		
		private bool _hasOffer;
		
		private string _image;
		
		private byte _status;
		
		private System.Nullable<byte> _timeMethod;
		
		private EntitySet<GiftCardMellatTbl> _GiftCardMellatTbls;
		
		private EntitySet<GiftCardTbl> _GiftCardTbls;
		
		private EntitySet<PackageServiceTbl> _PackageServiceTbls;
		
		private EntitySet<ServiceOrderTbl> _ServiceOrderTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisCurrentDayChanging(bool value);
    partial void OnisCurrentDayChanged();
    partial void OnisAreaEffectiveChanging(bool value);
    partial void OnisAreaEffectiveChanged();
    partial void OnhasOfferChanging(bool value);
    partial void OnhasOfferChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OntimeMethodChanging(System.Nullable<byte> value);
    partial void OntimeMethodChanged();
    #endregion
		
		public PackageTbl()
		{
			this._GiftCardMellatTbls = new EntitySet<GiftCardMellatTbl>(new Action<GiftCardMellatTbl>(this.attach_GiftCardMellatTbls), new Action<GiftCardMellatTbl>(this.detach_GiftCardMellatTbls));
			this._GiftCardTbls = new EntitySet<GiftCardTbl>(new Action<GiftCardTbl>(this.attach_GiftCardTbls), new Action<GiftCardTbl>(this.detach_GiftCardTbls));
			this._PackageServiceTbls = new EntitySet<PackageServiceTbl>(new Action<PackageServiceTbl>(this.attach_PackageServiceTbls), new Action<PackageServiceTbl>(this.detach_PackageServiceTbls));
			this._ServiceOrderTbls = new EntitySet<ServiceOrderTbl>(new Action<ServiceOrderTbl>(this.attach_ServiceOrderTbls), new Action<ServiceOrderTbl>(this.detach_ServiceOrderTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCurrentDay", DbType="Bit NOT NULL")]
		public bool isCurrentDay
		{
			get
			{
				return this._isCurrentDay;
			}
			set
			{
				if ((this._isCurrentDay != value))
				{
					this.OnisCurrentDayChanging(value);
					this.SendPropertyChanging();
					this._isCurrentDay = value;
					this.SendPropertyChanged("isCurrentDay");
					this.OnisCurrentDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAreaEffective", DbType="Bit NOT NULL")]
		public bool isAreaEffective
		{
			get
			{
				return this._isAreaEffective;
			}
			set
			{
				if ((this._isAreaEffective != value))
				{
					this.OnisAreaEffectiveChanging(value);
					this.SendPropertyChanging();
					this._isAreaEffective = value;
					this.SendPropertyChanged("isAreaEffective");
					this.OnisAreaEffectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasOffer", DbType="Bit NOT NULL")]
		public bool hasOffer
		{
			get
			{
				return this._hasOffer;
			}
			set
			{
				if ((this._hasOffer != value))
				{
					this.OnhasOfferChanging(value);
					this.SendPropertyChanging();
					this._hasOffer = value;
					this.SendPropertyChanged("hasOffer");
					this.OnhasOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeMethod", DbType="TinyInt")]
		public System.Nullable<byte> timeMethod
		{
			get
			{
				return this._timeMethod;
			}
			set
			{
				if ((this._timeMethod != value))
				{
					this.OntimeMethodChanging(value);
					this.SendPropertyChanging();
					this._timeMethod = value;
					this.SendPropertyChanged("timeMethod");
					this.OntimeMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageTbl_GiftCardMellatTbl", Storage="_GiftCardMellatTbls", ThisKey="ID", OtherKey="packageId")]
		public EntitySet<GiftCardMellatTbl> GiftCardMellatTbls
		{
			get
			{
				return this._GiftCardMellatTbls;
			}
			set
			{
				this._GiftCardMellatTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageTbl_GiftCardTbl", Storage="_GiftCardTbls", ThisKey="ID", OtherKey="packageId")]
		public EntitySet<GiftCardTbl> GiftCardTbls
		{
			get
			{
				return this._GiftCardTbls;
			}
			set
			{
				this._GiftCardTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageTbl_PackageServiceTbl", Storage="_PackageServiceTbls", ThisKey="ID", OtherKey="packageID")]
		public EntitySet<PackageServiceTbl> PackageServiceTbls
		{
			get
			{
				return this._PackageServiceTbls;
			}
			set
			{
				this._PackageServiceTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageTbl_ServiceOrderTbl", Storage="_ServiceOrderTbls", ThisKey="ID", OtherKey="packageId")]
		public EntitySet<ServiceOrderTbl> ServiceOrderTbls
		{
			get
			{
				return this._ServiceOrderTbls;
			}
			set
			{
				this._ServiceOrderTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiftCardMellatTbls(GiftCardMellatTbl entity)
		{
			this.SendPropertyChanging();
			entity.PackageTbl = this;
		}
		
		private void detach_GiftCardMellatTbls(GiftCardMellatTbl entity)
		{
			this.SendPropertyChanging();
			entity.PackageTbl = null;
		}
		
		private void attach_GiftCardTbls(GiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.PackageTbl = this;
		}
		
		private void detach_GiftCardTbls(GiftCardTbl entity)
		{
			this.SendPropertyChanging();
			entity.PackageTbl = null;
		}
		
		private void attach_PackageServiceTbls(PackageServiceTbl entity)
		{
			this.SendPropertyChanging();
			entity.PackageTbl = this;
		}
		
		private void detach_PackageServiceTbls(PackageServiceTbl entity)
		{
			this.SendPropertyChanging();
			entity.PackageTbl = null;
		}
		
		private void attach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.PackageTbl = this;
		}
		
		private void detach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.PackageTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentTbl")]
	public partial class PaymentTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private string _status;
		
		private string _refId;
		
		private string _authority;
		
		private System.DateTime _regDate;
		
		private int _price;
		
		private string _customerName;
		
		private string _customerFamily;
		
		private string _customerMobile;
		
		private byte _type;
		
		private System.Nullable<long> _typeId;
		
		private EntitySet<CustomerWalletTbl> _CustomerWalletTbls;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnrefIdChanging(string value);
    partial void OnrefIdChanged();
    partial void OnauthorityChanging(string value);
    partial void OnauthorityChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OncustomerNameChanging(string value);
    partial void OncustomerNameChanged();
    partial void OncustomerFamilyChanging(string value);
    partial void OncustomerFamilyChanged();
    partial void OncustomerMobileChanging(string value);
    partial void OncustomerMobileChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OntypeIdChanging(System.Nullable<long> value);
    partial void OntypeIdChanged();
    #endregion
		
		public PaymentTbl()
		{
			this._CustomerWalletTbls = new EntitySet<CustomerWalletTbl>(new Action<CustomerWalletTbl>(this.attach_CustomerWalletTbls), new Action<CustomerWalletTbl>(this.detach_CustomerWalletTbls));
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refId", DbType="NVarChar(150)")]
		public string refId
		{
			get
			{
				return this._refId;
			}
			set
			{
				if ((this._refId != value))
				{
					this.OnrefIdChanging(value);
					this.SendPropertyChanging();
					this._refId = value;
					this.SendPropertyChanged("refId");
					this.OnrefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authority", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string authority
		{
			get
			{
				return this._authority;
			}
			set
			{
				if ((this._authority != value))
				{
					this.OnauthorityChanging(value);
					this.SendPropertyChanging();
					this._authority = value;
					this.SendPropertyChanged("authority");
					this.OnauthorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OncustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("customerName");
					this.OncustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerFamily
		{
			get
			{
				return this._customerFamily;
			}
			set
			{
				if ((this._customerFamily != value))
				{
					this.OncustomerFamilyChanging(value);
					this.SendPropertyChanging();
					this._customerFamily = value;
					this.SendPropertyChanged("customerFamily");
					this.OncustomerFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string customerMobile
		{
			get
			{
				return this._customerMobile;
			}
			set
			{
				if ((this._customerMobile != value))
				{
					this.OncustomerMobileChanging(value);
					this.SendPropertyChanging();
					this._customerMobile = value;
					this.SendPropertyChanged("customerMobile");
					this.OncustomerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="BigInt")]
		public System.Nullable<long> typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentTbl_CustomerWalletTbl", Storage="_CustomerWalletTbls", ThisKey="ID", OtherKey="paymentId")]
		public EntitySet<CustomerWalletTbl> CustomerWalletTbls
		{
			get
			{
				return this._CustomerWalletTbls;
			}
			set
			{
				this._CustomerWalletTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_PaymentTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.PaymentTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.PaymentTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerWalletTbls(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.PaymentTbl = this;
		}
		
		private void detach_CustomerWalletTbls(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.PaymentTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.periodGiftCardTbl")]
	public partial class periodGiftCardTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _dayId;
		
		private System.TimeSpan _startTime;
		
		private System.TimeSpan _endTime;
		
		private long _giftCardId;
		
		private byte _status;
		
		private System.DateTime _regDate;
		
		private EntityRef<DayTbl> _DayTbl;
		
		private EntityRef<GiftCardTbl> _GiftCardTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OndayIdChanging(long value);
    partial void OndayIdChanged();
    partial void OnstartTimeChanging(System.TimeSpan value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.TimeSpan value);
    partial void OnendTimeChanged();
    partial void OngiftCardIdChanging(long value);
    partial void OngiftCardIdChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public periodGiftCardTbl()
		{
			this._DayTbl = default(EntityRef<DayTbl>);
			this._GiftCardTbl = default(EntityRef<GiftCardTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayId", DbType="BigInt NOT NULL")]
		public long dayId
		{
			get
			{
				return this._dayId;
			}
			set
			{
				if ((this._dayId != value))
				{
					if (this._DayTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndayIdChanging(value);
					this.SendPropertyChanging();
					this._dayId = value;
					this.SendPropertyChanged("dayId");
					this.OndayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="Time NOT NULL")]
		public System.TimeSpan startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="Time NOT NULL")]
		public System.TimeSpan endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giftCardId", DbType="BigInt NOT NULL")]
		public long giftCardId
		{
			get
			{
				return this._giftCardId;
			}
			set
			{
				if ((this._giftCardId != value))
				{
					if (this._GiftCardTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngiftCardIdChanging(value);
					this.SendPropertyChanging();
					this._giftCardId = value;
					this.SendPropertyChanged("giftCardId");
					this.OngiftCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayTbl_periodGiftCardTbl", Storage="_DayTbl", ThisKey="dayId", OtherKey="ID", IsForeignKey=true)]
		public DayTbl DayTbl
		{
			get
			{
				return this._DayTbl.Entity;
			}
			set
			{
				DayTbl previousValue = this._DayTbl.Entity;
				if (((previousValue != value) 
							|| (this._DayTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayTbl.Entity = null;
						previousValue.periodGiftCardTbls.Remove(this);
					}
					this._DayTbl.Entity = value;
					if ((value != null))
					{
						value.periodGiftCardTbls.Add(this);
						this._dayId = value.ID;
					}
					else
					{
						this._dayId = default(long);
					}
					this.SendPropertyChanged("DayTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiftCardTbl_periodGiftCardTbl", Storage="_GiftCardTbl", ThisKey="giftCardId", OtherKey="ID", IsForeignKey=true)]
		public GiftCardTbl GiftCardTbl
		{
			get
			{
				return this._GiftCardTbl.Entity;
			}
			set
			{
				GiftCardTbl previousValue = this._GiftCardTbl.Entity;
				if (((previousValue != value) 
							|| (this._GiftCardTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiftCardTbl.Entity = null;
						previousValue.periodGiftCardTbls.Remove(this);
					}
					this._GiftCardTbl.Entity = value;
					if ((value != null))
					{
						value.periodGiftCardTbls.Add(this);
						this._giftCardId = value.ID;
					}
					else
					{
						this._giftCardId = default(long);
					}
					this.SendPropertyChanged("GiftCardTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeriodTbl")]
	public partial class PeriodTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _carId;
		
		private System.DateTime _regTimeOrder;
		
		private int _sent;
		
		private long _customerId;
		
		private long _serviceId;
		
		private int _kilometer;
		
		private EntityRef<CarTbl> _CarTbl;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<ServiceTbl> _ServiceTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncarIdChanging(long value);
    partial void OncarIdChanged();
    partial void OnregTimeOrderChanging(System.DateTime value);
    partial void OnregTimeOrderChanged();
    partial void OnsentChanging(int value);
    partial void OnsentChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnserviceIdChanging(long value);
    partial void OnserviceIdChanged();
    partial void OnkilometerChanging(int value);
    partial void OnkilometerChanged();
    #endregion
		
		public PeriodTbl()
		{
			this._CarTbl = default(EntityRef<CarTbl>);
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._ServiceTbl = default(EntityRef<ServiceTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carId", DbType="BigInt NOT NULL")]
		public long carId
		{
			get
			{
				return this._carId;
			}
			set
			{
				if ((this._carId != value))
				{
					if (this._CarTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncarIdChanging(value);
					this.SendPropertyChanging();
					this._carId = value;
					this.SendPropertyChanged("carId");
					this.OncarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regTimeOrder", DbType="DateTime NOT NULL")]
		public System.DateTime regTimeOrder
		{
			get
			{
				return this._regTimeOrder;
			}
			set
			{
				if ((this._regTimeOrder != value))
				{
					this.OnregTimeOrderChanging(value);
					this.SendPropertyChanging();
					this._regTimeOrder = value;
					this.SendPropertyChanged("regTimeOrder");
					this.OnregTimeOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sent", DbType="Int NOT NULL")]
		public int sent
		{
			get
			{
				return this._sent;
			}
			set
			{
				if ((this._sent != value))
				{
					this.OnsentChanging(value);
					this.SendPropertyChanging();
					this._sent = value;
					this.SendPropertyChanged("sent");
					this.OnsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceId", DbType="BigInt NOT NULL")]
		public long serviceId
		{
			get
			{
				return this._serviceId;
			}
			set
			{
				if ((this._serviceId != value))
				{
					if (this._ServiceTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceIdChanging(value);
					this.SendPropertyChanging();
					this._serviceId = value;
					this.SendPropertyChanged("serviceId");
					this.OnserviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kilometer", DbType="Int NOT NULL")]
		public int kilometer
		{
			get
			{
				return this._kilometer;
			}
			set
			{
				if ((this._kilometer != value))
				{
					this.OnkilometerChanging(value);
					this.SendPropertyChanging();
					this._kilometer = value;
					this.SendPropertyChanged("kilometer");
					this.OnkilometerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTbl_PeriodTbl", Storage="_CarTbl", ThisKey="carId", OtherKey="ID", IsForeignKey=true)]
		public CarTbl CarTbl
		{
			get
			{
				return this._CarTbl.Entity;
			}
			set
			{
				CarTbl previousValue = this._CarTbl.Entity;
				if (((previousValue != value) 
							|| (this._CarTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarTbl.Entity = null;
						previousValue.PeriodTbls.Remove(this);
					}
					this._CarTbl.Entity = value;
					if ((value != null))
					{
						value.PeriodTbls.Add(this);
						this._carId = value.ID;
					}
					else
					{
						this._carId = default(long);
					}
					this.SendPropertyChanged("CarTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_PeriodTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.PeriodTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.PeriodTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceTbl_PeriodTbl", Storage="_ServiceTbl", ThisKey="serviceId", OtherKey="ID", IsForeignKey=true)]
		public ServiceTbl ServiceTbl
		{
			get
			{
				return this._ServiceTbl.Entity;
			}
			set
			{
				ServiceTbl previousValue = this._ServiceTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceTbl.Entity = null;
						previousValue.PeriodTbls.Remove(this);
					}
					this._ServiceTbl.Entity = value;
					if ((value != null))
					{
						value.PeriodTbls.Add(this);
						this._serviceId = value.ID;
					}
					else
					{
						this._serviceId = default(long);
					}
					this.SendPropertyChanged("ServiceTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermissionTbl")]
	public partial class PermissionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<Role_PermissionTbl> _Role_PermissionTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public PermissionTbl()
		{
			this._Role_PermissionTbls = new EntitySet<Role_PermissionTbl>(new Action<Role_PermissionTbl>(this.attach_Role_PermissionTbls), new Action<Role_PermissionTbl>(this.detach_Role_PermissionTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionTbl_Role_PermissionTbl", Storage="_Role_PermissionTbls", ThisKey="ID", OtherKey="permissionId")]
		public EntitySet<Role_PermissionTbl> Role_PermissionTbls
		{
			get
			{
				return this._Role_PermissionTbls;
			}
			set
			{
				this._Role_PermissionTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Role_PermissionTbls(Role_PermissionTbl entity)
		{
			this.SendPropertyChanging();
			entity.PermissionTbl = this;
		}
		
		private void detach_Role_PermissionTbls(Role_PermissionTbl entity)
		{
			this.SendPropertyChanging();
			entity.PermissionTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_AttributeTbl")]
	public partial class Product_AttributeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productId;
		
		private long _attributeId;
		
		private string _value;
		
		private int _displayOrder;
		
		private bool _isRequire;
		
		private EntityRef<AttributeTbl> _AttributeTbl;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnattributeIdChanging(long value);
    partial void OnattributeIdChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OndisplayOrderChanging(int value);
    partial void OndisplayOrderChanged();
    partial void OnisRequireChanging(bool value);
    partial void OnisRequireChanged();
    #endregion
		
		public Product_AttributeTbl()
		{
			this._AttributeTbl = default(EntityRef<AttributeTbl>);
			this._ProductTbl = default(EntityRef<ProductTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeId", DbType="BigInt NOT NULL")]
		public long attributeId
		{
			get
			{
				return this._attributeId;
			}
			set
			{
				if ((this._attributeId != value))
				{
					if (this._AttributeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnattributeIdChanging(value);
					this.SendPropertyChanging();
					this._attributeId = value;
					this.SendPropertyChanged("attributeId");
					this.OnattributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayOrder", DbType="Int NOT NULL")]
		public int displayOrder
		{
			get
			{
				return this._displayOrder;
			}
			set
			{
				if ((this._displayOrder != value))
				{
					this.OndisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._displayOrder = value;
					this.SendPropertyChanged("displayOrder");
					this.OndisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRequire", DbType="Bit NOT NULL")]
		public bool isRequire
		{
			get
			{
				return this._isRequire;
			}
			set
			{
				if ((this._isRequire != value))
				{
					this.OnisRequireChanging(value);
					this.SendPropertyChanging();
					this._isRequire = value;
					this.SendPropertyChanged("isRequire");
					this.OnisRequireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeTbl_Product_AttributeTbl", Storage="_AttributeTbl", ThisKey="attributeId", OtherKey="ID", IsForeignKey=true)]
		public AttributeTbl AttributeTbl
		{
			get
			{
				return this._AttributeTbl.Entity;
			}
			set
			{
				AttributeTbl previousValue = this._AttributeTbl.Entity;
				if (((previousValue != value) 
							|| (this._AttributeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttributeTbl.Entity = null;
						previousValue.Product_AttributeTbls.Remove(this);
					}
					this._AttributeTbl.Entity = value;
					if ((value != null))
					{
						value.Product_AttributeTbls.Add(this);
						this._attributeId = value.ID;
					}
					else
					{
						this._attributeId = default(long);
					}
					this.SendPropertyChanged("AttributeTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_Product_AttributeTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.Product_AttributeTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.Product_AttributeTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_CategoryTbl")]
	public partial class Product_CategoryTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productId;
		
		private long _categoryId;
		
		private EntityRef<CategoryTbl> _CategoryTbl;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OncategoryIdChanging(long value);
    partial void OncategoryIdChanged();
    #endregion
		
		public Product_CategoryTbl()
		{
			this._CategoryTbl = default(EntityRef<CategoryTbl>);
			this._ProductTbl = default(EntityRef<ProductTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryId", DbType="BigInt NOT NULL")]
		public long categoryId
		{
			get
			{
				return this._categoryId;
			}
			set
			{
				if ((this._categoryId != value))
				{
					if (this._CategoryTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryIdChanging(value);
					this.SendPropertyChanging();
					this._categoryId = value;
					this.SendPropertyChanged("categoryId");
					this.OncategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryTbl_Product_CategoryTbl", Storage="_CategoryTbl", ThisKey="categoryId", OtherKey="ID", IsForeignKey=true)]
		public CategoryTbl CategoryTbl
		{
			get
			{
				return this._CategoryTbl.Entity;
			}
			set
			{
				CategoryTbl previousValue = this._CategoryTbl.Entity;
				if (((previousValue != value) 
							|| (this._CategoryTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoryTbl.Entity = null;
						previousValue.Product_CategoryTbls.Remove(this);
					}
					this._CategoryTbl.Entity = value;
					if ((value != null))
					{
						value.Product_CategoryTbls.Add(this);
						this._categoryId = value.ID;
					}
					else
					{
						this._categoryId = default(long);
					}
					this.SendPropertyChanged("CategoryTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_Product_CategoryTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.Product_CategoryTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.Product_CategoryTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_SellerTbl")]
	public partial class Product_SellerTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productId;
		
		private long _sellerId;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
		private EntityRef<SellerTbl> _SellerTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnsellerIdChanging(long value);
    partial void OnsellerIdChanged();
    #endregion
		
		public Product_SellerTbl()
		{
			this._ProductTbl = default(EntityRef<ProductTbl>);
			this._SellerTbl = default(EntityRef<SellerTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellerId", DbType="BigInt NOT NULL")]
		public long sellerId
		{
			get
			{
				return this._sellerId;
			}
			set
			{
				if ((this._sellerId != value))
				{
					if (this._SellerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsellerIdChanging(value);
					this.SendPropertyChanging();
					this._sellerId = value;
					this.SendPropertyChanged("sellerId");
					this.OnsellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_Product_SellerTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.Product_SellerTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.Product_SellerTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SellerTbl_Product_SellerTbl", Storage="_SellerTbl", ThisKey="sellerId", OtherKey="ID", IsForeignKey=true)]
		public SellerTbl SellerTbl
		{
			get
			{
				return this._SellerTbl.Entity;
			}
			set
			{
				SellerTbl previousValue = this._SellerTbl.Entity;
				if (((previousValue != value) 
							|| (this._SellerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SellerTbl.Entity = null;
						previousValue.Product_SellerTbls.Remove(this);
					}
					this._SellerTbl.Entity = value;
					if ((value != null))
					{
						value.Product_SellerTbls.Add(this);
						this._sellerId = value.ID;
					}
					else
					{
						this._sellerId = default(long);
					}
					this.SendPropertyChanged("SellerTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_SpecificationOptionTbl")]
	public partial class Product_SpecificationOptionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productId;
		
		private long _specificationOptionId;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
		private EntityRef<SpecificationOptionTbl> _SpecificationOptionTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnspecificationOptionIdChanging(long value);
    partial void OnspecificationOptionIdChanged();
    #endregion
		
		public Product_SpecificationOptionTbl()
		{
			this._ProductTbl = default(EntityRef<ProductTbl>);
			this._SpecificationOptionTbl = default(EntityRef<SpecificationOptionTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specificationOptionId", DbType="BigInt NOT NULL")]
		public long specificationOptionId
		{
			get
			{
				return this._specificationOptionId;
			}
			set
			{
				if ((this._specificationOptionId != value))
				{
					if (this._SpecificationOptionTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspecificationOptionIdChanging(value);
					this.SendPropertyChanging();
					this._specificationOptionId = value;
					this.SendPropertyChanged("specificationOptionId");
					this.OnspecificationOptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_Product_SpecificationOptionTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.Product_SpecificationOptionTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.Product_SpecificationOptionTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificationOptionTbl_Product_SpecificationOptionTbl", Storage="_SpecificationOptionTbl", ThisKey="specificationOptionId", OtherKey="ID", IsForeignKey=true)]
		public SpecificationOptionTbl SpecificationOptionTbl
		{
			get
			{
				return this._SpecificationOptionTbl.Entity;
			}
			set
			{
				SpecificationOptionTbl previousValue = this._SpecificationOptionTbl.Entity;
				if (((previousValue != value) 
							|| (this._SpecificationOptionTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecificationOptionTbl.Entity = null;
						previousValue.Product_SpecificationOptionTbls.Remove(this);
					}
					this._SpecificationOptionTbl.Entity = value;
					if ((value != null))
					{
						value.Product_SpecificationOptionTbls.Add(this);
						this._specificationOptionId = value.ID;
					}
					else
					{
						this._specificationOptionId = default(long);
					}
					this.SendPropertyChanged("SpecificationOptionTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCompactDetailsTbl")]
	public partial class ProductCompactDetailsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productCompactId;
		
		private long _productId;
		
		private int _quantity;
		
		private EntityRef<ProductCompactTbl> _ProductCompactTbl;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductCompactIdChanging(long value);
    partial void OnproductCompactIdChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public ProductCompactDetailsTbl()
		{
			this._ProductCompactTbl = default(EntityRef<ProductCompactTbl>);
			this._ProductTbl = default(EntityRef<ProductTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCompactId", DbType="BigInt NOT NULL")]
		public long productCompactId
		{
			get
			{
				return this._productCompactId;
			}
			set
			{
				if ((this._productCompactId != value))
				{
					if (this._ProductCompactTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductCompactIdChanging(value);
					this.SendPropertyChanging();
					this._productCompactId = value;
					this.SendPropertyChanged("productCompactId");
					this.OnproductCompactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCompactTbl_ProductCompactDetailsTbl", Storage="_ProductCompactTbl", ThisKey="productCompactId", OtherKey="ID", IsForeignKey=true)]
		public ProductCompactTbl ProductCompactTbl
		{
			get
			{
				return this._ProductCompactTbl.Entity;
			}
			set
			{
				ProductCompactTbl previousValue = this._ProductCompactTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductCompactTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCompactTbl.Entity = null;
						previousValue.ProductCompactDetailsTbls.Remove(this);
					}
					this._ProductCompactTbl.Entity = value;
					if ((value != null))
					{
						value.ProductCompactDetailsTbls.Add(this);
						this._productCompactId = value.ID;
					}
					else
					{
						this._productCompactId = default(long);
					}
					this.SendPropertyChanged("ProductCompactTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ProductCompactDetailsTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ProductCompactDetailsTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ProductCompactDetailsTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCompactTbl")]
	public partial class ProductCompactTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private byte _status;
		
		private EntitySet<ProductCompactDetailsTbl> _ProductCompactDetailsTbls;
		
		private EntitySet<ServiceCarTypeGroupTbl> _ServiceCarTypeGroupTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ProductCompactTbl()
		{
			this._ProductCompactDetailsTbls = new EntitySet<ProductCompactDetailsTbl>(new Action<ProductCompactDetailsTbl>(this.attach_ProductCompactDetailsTbls), new Action<ProductCompactDetailsTbl>(this.detach_ProductCompactDetailsTbls));
			this._ServiceCarTypeGroupTbls = new EntitySet<ServiceCarTypeGroupTbl>(new Action<ServiceCarTypeGroupTbl>(this.attach_ServiceCarTypeGroupTbls), new Action<ServiceCarTypeGroupTbl>(this.detach_ServiceCarTypeGroupTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCompactTbl_ProductCompactDetailsTbl", Storage="_ProductCompactDetailsTbls", ThisKey="ID", OtherKey="productCompactId")]
		public EntitySet<ProductCompactDetailsTbl> ProductCompactDetailsTbls
		{
			get
			{
				return this._ProductCompactDetailsTbls;
			}
			set
			{
				this._ProductCompactDetailsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCompactTbl_ServiceCarTypeGroupTbl", Storage="_ServiceCarTypeGroupTbls", ThisKey="ID", OtherKey="productCompactID")]
		public EntitySet<ServiceCarTypeGroupTbl> ServiceCarTypeGroupTbls
		{
			get
			{
				return this._ServiceCarTypeGroupTbls;
			}
			set
			{
				this._ServiceCarTypeGroupTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCompactDetailsTbls(ProductCompactDetailsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductCompactTbl = this;
		}
		
		private void detach_ProductCompactDetailsTbls(ProductCompactDetailsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductCompactTbl = null;
		}
		
		private void attach_ServiceCarTypeGroupTbls(ServiceCarTypeGroupTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductCompactTbl = this;
		}
		
		private void detach_ServiceCarTypeGroupTbls(ServiceCarTypeGroupTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductCompactTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductContentTbl")]
	public partial class ProductContentTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productId;
		
		private int _type;
		
		private string _value;
		
		private int _priority;
		
		private System.DateTime _registerDate;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    partial void OnregisterDateChanging(System.DateTime value);
    partial void OnregisterDateChanged();
    #endregion
		
		public ProductContentTbl()
		{
			this._ProductTbl = default(EntityRef<ProductTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerDate", DbType="DateTime NOT NULL")]
		public System.DateTime registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this.OnregisterDateChanging(value);
					this.SendPropertyChanging();
					this._registerDate = value;
					this.SendPropertyChanged("registerDate");
					this.OnregisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ProductContentTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ProductContentTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ProductContentTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductDiscountProductFieldsTbl")]
	public partial class ProductDiscountProductFieldsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productDiscountId;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<ProductDiscountTbl> _ProductDiscountTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductDiscountIdChanging(long value);
    partial void OnproductDiscountIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public ProductDiscountProductFieldsTbl()
		{
			this._ProductDiscountTbl = default(EntityRef<ProductDiscountTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDiscountId", DbType="BigInt NOT NULL")]
		public long productDiscountId
		{
			get
			{
				return this._productDiscountId;
			}
			set
			{
				if ((this._productDiscountId != value))
				{
					if (this._ProductDiscountTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._productDiscountId = value;
					this.SendPropertyChanged("productDiscountId");
					this.OnproductDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductDiscountTbl_ProductDiscountProductFieldsTbl", Storage="_ProductDiscountTbl", ThisKey="productDiscountId", OtherKey="ID", IsForeignKey=true)]
		public ProductDiscountTbl ProductDiscountTbl
		{
			get
			{
				return this._ProductDiscountTbl.Entity;
			}
			set
			{
				ProductDiscountTbl previousValue = this._ProductDiscountTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductDiscountTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductDiscountTbl.Entity = null;
						previousValue.ProductDiscountProductFieldsTbls.Remove(this);
					}
					this._ProductDiscountTbl.Entity = value;
					if ((value != null))
					{
						value.ProductDiscountProductFieldsTbls.Add(this);
						this._productDiscountId = value.ID;
					}
					else
					{
						this._productDiscountId = default(long);
					}
					this.SendPropertyChanged("ProductDiscountTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductDiscountTbl")]
	public partial class ProductDiscountTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productId;
		
		private string _productCode;
		
		private string _name;
		
		private double _value;
		
		private string _description;
		
		private bool _isPercent;
		
		private System.DateTime _startTime;
		
		private System.DateTime _endTime;
		
		private double _unitPrice;
		
		private string _productName;
		
		private double _productPrice;
		
		private string _productDescription;
		
		private long _productUnitName;
		
		private byte _status;
		
		private EntitySet<ProductDiscountProductFieldsTbl> _ProductDiscountProductFieldsTbls;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisPercentChanging(bool value);
    partial void OnisPercentChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OnunitPriceChanging(double value);
    partial void OnunitPriceChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnproductPriceChanging(double value);
    partial void OnproductPriceChanged();
    partial void OnproductDescriptionChanging(string value);
    partial void OnproductDescriptionChanged();
    partial void OnproductUnitNameChanging(long value);
    partial void OnproductUnitNameChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ProductDiscountTbl()
		{
			this._ProductDiscountProductFieldsTbls = new EntitySet<ProductDiscountProductFieldsTbl>(new Action<ProductDiscountProductFieldsTbl>(this.attach_ProductDiscountProductFieldsTbls), new Action<ProductDiscountProductFieldsTbl>(this.detach_ProductDiscountProductFieldsTbls));
			this._ProductTbl = default(EntityRef<ProductTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPercent", DbType="Bit NOT NULL")]
		public bool isPercent
		{
			get
			{
				return this._isPercent;
			}
			set
			{
				if ((this._isPercent != value))
				{
					this.OnisPercentChanging(value);
					this.SendPropertyChanging();
					this._isPercent = value;
					this.SendPropertyChanged("isPercent");
					this.OnisPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Float NOT NULL")]
		public double unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Float NOT NULL")]
		public double productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string productDescription
		{
			get
			{
				return this._productDescription;
			}
			set
			{
				if ((this._productDescription != value))
				{
					this.OnproductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._productDescription = value;
					this.SendPropertyChanged("productDescription");
					this.OnproductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productUnitName", DbType="BigInt NOT NULL")]
		public long productUnitName
		{
			get
			{
				return this._productUnitName;
			}
			set
			{
				if ((this._productUnitName != value))
				{
					this.OnproductUnitNameChanging(value);
					this.SendPropertyChanging();
					this._productUnitName = value;
					this.SendPropertyChanged("productUnitName");
					this.OnproductUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductDiscountTbl_ProductDiscountProductFieldsTbl", Storage="_ProductDiscountProductFieldsTbls", ThisKey="ID", OtherKey="productDiscountId")]
		public EntitySet<ProductDiscountProductFieldsTbl> ProductDiscountProductFieldsTbls
		{
			get
			{
				return this._ProductDiscountProductFieldsTbls;
			}
			set
			{
				this._ProductDiscountProductFieldsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ProductDiscountTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ProductDiscountTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ProductDiscountTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductDiscountProductFieldsTbls(ProductDiscountProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductDiscountTbl = this;
		}
		
		private void detach_ProductDiscountProductFieldsTbls(ProductDiscountProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductDiscountTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductImageTbl")]
	public partial class ProductImageTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _productId;
		
		private string _name;
		
		private bool _isMainImage;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnisMainImageChanging(bool value);
    partial void OnisMainImageChanged();
    #endregion
		
		public ProductImageTbl()
		{
			this._ProductTbl = default(EntityRef<ProductTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMainImage", DbType="Bit NOT NULL")]
		public bool isMainImage
		{
			get
			{
				return this._isMainImage;
			}
			set
			{
				if ((this._isMainImage != value))
				{
					this.OnisMainImageChanging(value);
					this.SendPropertyChanging();
					this._isMainImage = value;
					this.SendPropertyChanged("isMainImage");
					this.OnisMainImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ProductImageTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ProductImageTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ProductImageTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductTbl")]
	public partial class ProductTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _code;
		
		private double _price;
		
		private string _displayName;
		
		private string _description;
		
		private System.DateTime _regDate;
		
		private long _unitId;
		
		private bool _displayShop;
		
		private double _taxPrice;
		
		private byte _status;
		
		private double _quantity;
		
		private double _minQuantity;
		
		private EntitySet<AssetTbl> _AssetTbls;
		
		private EntitySet<DraftDetailTbl> _DraftDetailTbls;
		
		private EntitySet<Product_AttributeTbl> _Product_AttributeTbls;
		
		private EntitySet<Product_CategoryTbl> _Product_CategoryTbls;
		
		private EntitySet<Product_SellerTbl> _Product_SellerTbls;
		
		private EntitySet<Product_SpecificationOptionTbl> _Product_SpecificationOptionTbls;
		
		private EntitySet<ProductCompactDetailsTbl> _ProductCompactDetailsTbls;
		
		private EntitySet<ProductContentTbl> _ProductContentTbls;
		
		private EntitySet<ProductDiscountTbl> _ProductDiscountTbls;
		
		private EntitySet<ProductImageTbl> _ProductImageTbls;
		
		private EntitySet<ReceiptDetailTbl> _ReceiptDetailTbls;
		
		private EntitySet<ReturnDetailTbl> _ReturnDetailTbls;
		
		private EntitySet<ServiceCarTypeGroupProductTbl> _ServiceCarTypeGroupProductTbls;
		
		private EntitySet<ServiceOrderProductDetailTbl> _ServiceOrderProductDetailTbls;
		
		private EntitySet<ShopOrderDetailTbl> _ShopOrderDetailTbls;
		
		private EntitySet<ShopProductCommentTbl> _ShopProductCommentTbls;
		
		private EntityRef<UnitTbl> _UnitTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnunitIdChanging(long value);
    partial void OnunitIdChanged();
    partial void OndisplayShopChanging(bool value);
    partial void OndisplayShopChanged();
    partial void OntaxPriceChanging(double value);
    partial void OntaxPriceChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnquantityChanging(double value);
    partial void OnquantityChanged();
    partial void OnminQuantityChanging(double value);
    partial void OnminQuantityChanged();
    #endregion
		
		public ProductTbl()
		{
			this._AssetTbls = new EntitySet<AssetTbl>(new Action<AssetTbl>(this.attach_AssetTbls), new Action<AssetTbl>(this.detach_AssetTbls));
			this._DraftDetailTbls = new EntitySet<DraftDetailTbl>(new Action<DraftDetailTbl>(this.attach_DraftDetailTbls), new Action<DraftDetailTbl>(this.detach_DraftDetailTbls));
			this._Product_AttributeTbls = new EntitySet<Product_AttributeTbl>(new Action<Product_AttributeTbl>(this.attach_Product_AttributeTbls), new Action<Product_AttributeTbl>(this.detach_Product_AttributeTbls));
			this._Product_CategoryTbls = new EntitySet<Product_CategoryTbl>(new Action<Product_CategoryTbl>(this.attach_Product_CategoryTbls), new Action<Product_CategoryTbl>(this.detach_Product_CategoryTbls));
			this._Product_SellerTbls = new EntitySet<Product_SellerTbl>(new Action<Product_SellerTbl>(this.attach_Product_SellerTbls), new Action<Product_SellerTbl>(this.detach_Product_SellerTbls));
			this._Product_SpecificationOptionTbls = new EntitySet<Product_SpecificationOptionTbl>(new Action<Product_SpecificationOptionTbl>(this.attach_Product_SpecificationOptionTbls), new Action<Product_SpecificationOptionTbl>(this.detach_Product_SpecificationOptionTbls));
			this._ProductCompactDetailsTbls = new EntitySet<ProductCompactDetailsTbl>(new Action<ProductCompactDetailsTbl>(this.attach_ProductCompactDetailsTbls), new Action<ProductCompactDetailsTbl>(this.detach_ProductCompactDetailsTbls));
			this._ProductContentTbls = new EntitySet<ProductContentTbl>(new Action<ProductContentTbl>(this.attach_ProductContentTbls), new Action<ProductContentTbl>(this.detach_ProductContentTbls));
			this._ProductDiscountTbls = new EntitySet<ProductDiscountTbl>(new Action<ProductDiscountTbl>(this.attach_ProductDiscountTbls), new Action<ProductDiscountTbl>(this.detach_ProductDiscountTbls));
			this._ProductImageTbls = new EntitySet<ProductImageTbl>(new Action<ProductImageTbl>(this.attach_ProductImageTbls), new Action<ProductImageTbl>(this.detach_ProductImageTbls));
			this._ReceiptDetailTbls = new EntitySet<ReceiptDetailTbl>(new Action<ReceiptDetailTbl>(this.attach_ReceiptDetailTbls), new Action<ReceiptDetailTbl>(this.detach_ReceiptDetailTbls));
			this._ReturnDetailTbls = new EntitySet<ReturnDetailTbl>(new Action<ReturnDetailTbl>(this.attach_ReturnDetailTbls), new Action<ReturnDetailTbl>(this.detach_ReturnDetailTbls));
			this._ServiceCarTypeGroupProductTbls = new EntitySet<ServiceCarTypeGroupProductTbl>(new Action<ServiceCarTypeGroupProductTbl>(this.attach_ServiceCarTypeGroupProductTbls), new Action<ServiceCarTypeGroupProductTbl>(this.detach_ServiceCarTypeGroupProductTbls));
			this._ServiceOrderProductDetailTbls = new EntitySet<ServiceOrderProductDetailTbl>(new Action<ServiceOrderProductDetailTbl>(this.attach_ServiceOrderProductDetailTbls), new Action<ServiceOrderProductDetailTbl>(this.detach_ServiceOrderProductDetailTbls));
			this._ShopOrderDetailTbls = new EntitySet<ShopOrderDetailTbl>(new Action<ShopOrderDetailTbl>(this.attach_ShopOrderDetailTbls), new Action<ShopOrderDetailTbl>(this.detach_ShopOrderDetailTbls));
			this._ShopProductCommentTbls = new EntitySet<ShopProductCommentTbl>(new Action<ShopProductCommentTbl>(this.attach_ShopProductCommentTbls), new Action<ShopProductCommentTbl>(this.detach_ShopProductCommentTbls));
			this._UnitTbl = default(EntityRef<UnitTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="NVarChar(200)")]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this.OndisplayNameChanging(value);
					this.SendPropertyChanging();
					this._displayName = value;
					this.SendPropertyChanged("displayName");
					this.OndisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitId", DbType="BigInt NOT NULL")]
		public long unitId
		{
			get
			{
				return this._unitId;
			}
			set
			{
				if ((this._unitId != value))
				{
					if (this._UnitTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnunitIdChanging(value);
					this.SendPropertyChanging();
					this._unitId = value;
					this.SendPropertyChanged("unitId");
					this.OnunitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayShop", DbType="Bit NOT NULL")]
		public bool displayShop
		{
			get
			{
				return this._displayShop;
			}
			set
			{
				if ((this._displayShop != value))
				{
					this.OndisplayShopChanging(value);
					this.SendPropertyChanging();
					this._displayShop = value;
					this.SendPropertyChanged("displayShop");
					this.OndisplayShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxPrice", DbType="Float NOT NULL")]
		public double taxPrice
		{
			get
			{
				return this._taxPrice;
			}
			set
			{
				if ((this._taxPrice != value))
				{
					this.OntaxPriceChanging(value);
					this.SendPropertyChanging();
					this._taxPrice = value;
					this.SendPropertyChanged("taxPrice");
					this.OntaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Float NOT NULL")]
		public double quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minQuantity", DbType="Float NOT NULL")]
		public double minQuantity
		{
			get
			{
				return this._minQuantity;
			}
			set
			{
				if ((this._minQuantity != value))
				{
					this.OnminQuantityChanging(value);
					this.SendPropertyChanging();
					this._minQuantity = value;
					this.SendPropertyChanged("minQuantity");
					this.OnminQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_AssetTbl", Storage="_AssetTbls", ThisKey="ID", OtherKey="productID")]
		public EntitySet<AssetTbl> AssetTbls
		{
			get
			{
				return this._AssetTbls;
			}
			set
			{
				this._AssetTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_DraftDetailTbl", Storage="_DraftDetailTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<DraftDetailTbl> DraftDetailTbls
		{
			get
			{
				return this._DraftDetailTbls;
			}
			set
			{
				this._DraftDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_Product_AttributeTbl", Storage="_Product_AttributeTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<Product_AttributeTbl> Product_AttributeTbls
		{
			get
			{
				return this._Product_AttributeTbls;
			}
			set
			{
				this._Product_AttributeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_Product_CategoryTbl", Storage="_Product_CategoryTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<Product_CategoryTbl> Product_CategoryTbls
		{
			get
			{
				return this._Product_CategoryTbls;
			}
			set
			{
				this._Product_CategoryTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_Product_SellerTbl", Storage="_Product_SellerTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<Product_SellerTbl> Product_SellerTbls
		{
			get
			{
				return this._Product_SellerTbls;
			}
			set
			{
				this._Product_SellerTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_Product_SpecificationOptionTbl", Storage="_Product_SpecificationOptionTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<Product_SpecificationOptionTbl> Product_SpecificationOptionTbls
		{
			get
			{
				return this._Product_SpecificationOptionTbls;
			}
			set
			{
				this._Product_SpecificationOptionTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ProductCompactDetailsTbl", Storage="_ProductCompactDetailsTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ProductCompactDetailsTbl> ProductCompactDetailsTbls
		{
			get
			{
				return this._ProductCompactDetailsTbls;
			}
			set
			{
				this._ProductCompactDetailsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ProductContentTbl", Storage="_ProductContentTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ProductContentTbl> ProductContentTbls
		{
			get
			{
				return this._ProductContentTbls;
			}
			set
			{
				this._ProductContentTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ProductDiscountTbl", Storage="_ProductDiscountTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ProductDiscountTbl> ProductDiscountTbls
		{
			get
			{
				return this._ProductDiscountTbls;
			}
			set
			{
				this._ProductDiscountTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ProductImageTbl", Storage="_ProductImageTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ProductImageTbl> ProductImageTbls
		{
			get
			{
				return this._ProductImageTbls;
			}
			set
			{
				this._ProductImageTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ReceiptDetailTbl", Storage="_ReceiptDetailTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ReceiptDetailTbl> ReceiptDetailTbls
		{
			get
			{
				return this._ReceiptDetailTbls;
			}
			set
			{
				this._ReceiptDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ReturnDetailTbl", Storage="_ReturnDetailTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ReturnDetailTbl> ReturnDetailTbls
		{
			get
			{
				return this._ReturnDetailTbls;
			}
			set
			{
				this._ReturnDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ServiceCarTypeGroupProductTbl", Storage="_ServiceCarTypeGroupProductTbls", ThisKey="ID", OtherKey="productID")]
		public EntitySet<ServiceCarTypeGroupProductTbl> ServiceCarTypeGroupProductTbls
		{
			get
			{
				return this._ServiceCarTypeGroupProductTbls;
			}
			set
			{
				this._ServiceCarTypeGroupProductTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ServiceOrderProductDetailTbl", Storage="_ServiceOrderProductDetailTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ServiceOrderProductDetailTbl> ServiceOrderProductDetailTbls
		{
			get
			{
				return this._ServiceOrderProductDetailTbls;
			}
			set
			{
				this._ServiceOrderProductDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ShopOrderDetailTbl", Storage="_ShopOrderDetailTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ShopOrderDetailTbl> ShopOrderDetailTbls
		{
			get
			{
				return this._ShopOrderDetailTbls;
			}
			set
			{
				this._ShopOrderDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ShopProductCommentTbl", Storage="_ShopProductCommentTbls", ThisKey="ID", OtherKey="productId")]
		public EntitySet<ShopProductCommentTbl> ShopProductCommentTbls
		{
			get
			{
				return this._ShopProductCommentTbls;
			}
			set
			{
				this._ShopProductCommentTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitTbl_ProductTbl", Storage="_UnitTbl", ThisKey="unitId", OtherKey="ID", IsForeignKey=true)]
		public UnitTbl UnitTbl
		{
			get
			{
				return this._UnitTbl.Entity;
			}
			set
			{
				UnitTbl previousValue = this._UnitTbl.Entity;
				if (((previousValue != value) 
							|| (this._UnitTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitTbl.Entity = null;
						previousValue.ProductTbls.Remove(this);
					}
					this._UnitTbl.Entity = value;
					if ((value != null))
					{
						value.ProductTbls.Add(this);
						this._unitId = value.ID;
					}
					else
					{
						this._unitId = default(long);
					}
					this.SendPropertyChanged("UnitTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_DraftDetailTbls(DraftDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_DraftDetailTbls(DraftDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_Product_AttributeTbls(Product_AttributeTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_Product_AttributeTbls(Product_AttributeTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_Product_CategoryTbls(Product_CategoryTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_Product_CategoryTbls(Product_CategoryTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_Product_SellerTbls(Product_SellerTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_Product_SellerTbls(Product_SellerTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_Product_SpecificationOptionTbls(Product_SpecificationOptionTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_Product_SpecificationOptionTbls(Product_SpecificationOptionTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ProductCompactDetailsTbls(ProductCompactDetailsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ProductCompactDetailsTbls(ProductCompactDetailsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ProductContentTbls(ProductContentTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ProductContentTbls(ProductContentTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ProductDiscountTbls(ProductDiscountTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ProductDiscountTbls(ProductDiscountTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ProductImageTbls(ProductImageTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ProductImageTbls(ProductImageTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ReceiptDetailTbls(ReceiptDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ReceiptDetailTbls(ReceiptDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ReturnDetailTbls(ReturnDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ReturnDetailTbls(ReturnDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ServiceCarTypeGroupProductTbls(ServiceCarTypeGroupProductTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ServiceCarTypeGroupProductTbls(ServiceCarTypeGroupProductTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ServiceOrderProductDetailTbls(ServiceOrderProductDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ServiceOrderProductDetailTbls(ServiceOrderProductDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ShopOrderDetailTbls(ShopOrderDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ShopOrderDetailTbls(ShopOrderDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
		
		private void attach_ShopProductCommentTbls(ShopProductCommentTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = this;
		}
		
		private void detach_ShopProductCommentTbls(ShopProductCommentTbl entity)
		{
			this.SendPropertyChanging();
			entity.ProductTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptDetailProductFieldsTbl")]
	public partial class ReceiptDetailProductFieldsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _receiptDetailId;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<ReceiptDetailTbl> _ReceiptDetailTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnreceiptDetailIdChanging(long value);
    partial void OnreceiptDetailIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public ReceiptDetailProductFieldsTbl()
		{
			this._ReceiptDetailTbl = default(EntityRef<ReceiptDetailTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiptDetailId", DbType="BigInt NOT NULL")]
		public long receiptDetailId
		{
			get
			{
				return this._receiptDetailId;
			}
			set
			{
				if ((this._receiptDetailId != value))
				{
					if (this._ReceiptDetailTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreceiptDetailIdChanging(value);
					this.SendPropertyChanging();
					this._receiptDetailId = value;
					this.SendPropertyChanged("receiptDetailId");
					this.OnreceiptDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceiptDetailTbl_ReceiptDetailProductFieldsTbl", Storage="_ReceiptDetailTbl", ThisKey="receiptDetailId", OtherKey="ID", IsForeignKey=true)]
		public ReceiptDetailTbl ReceiptDetailTbl
		{
			get
			{
				return this._ReceiptDetailTbl.Entity;
			}
			set
			{
				ReceiptDetailTbl previousValue = this._ReceiptDetailTbl.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptDetailTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptDetailTbl.Entity = null;
						previousValue.ReceiptDetailProductFieldsTbls.Remove(this);
					}
					this._ReceiptDetailTbl.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetailProductFieldsTbls.Add(this);
						this._receiptDetailId = value.ID;
					}
					else
					{
						this._receiptDetailId = default(long);
					}
					this.SendPropertyChanged("ReceiptDetailTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptDetailTbl")]
	public partial class ReceiptDetailTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _receiptId;
		
		private long _productId;
		
		private string _productCode;
		
		private double _quantity;
		
		private double _unitPrice;
		
		private string _productName;
		
		private double _productPrice;
		
		private string _productDescription;
		
		private string _productUnitName;
		
		private EntitySet<ReceiptDetailProductFieldsTbl> _ReceiptDetailProductFieldsTbls;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
		private EntityRef<ReceiptTbl> _ReceiptTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnreceiptIdChanging(long value);
    partial void OnreceiptIdChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OnquantityChanging(double value);
    partial void OnquantityChanged();
    partial void OnunitPriceChanging(double value);
    partial void OnunitPriceChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnproductPriceChanging(double value);
    partial void OnproductPriceChanged();
    partial void OnproductDescriptionChanging(string value);
    partial void OnproductDescriptionChanged();
    partial void OnproductUnitNameChanging(string value);
    partial void OnproductUnitNameChanged();
    #endregion
		
		public ReceiptDetailTbl()
		{
			this._ReceiptDetailProductFieldsTbls = new EntitySet<ReceiptDetailProductFieldsTbl>(new Action<ReceiptDetailProductFieldsTbl>(this.attach_ReceiptDetailProductFieldsTbls), new Action<ReceiptDetailProductFieldsTbl>(this.detach_ReceiptDetailProductFieldsTbls));
			this._ProductTbl = default(EntityRef<ProductTbl>);
			this._ReceiptTbl = default(EntityRef<ReceiptTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiptId", DbType="BigInt NOT NULL")]
		public long receiptId
		{
			get
			{
				return this._receiptId;
			}
			set
			{
				if ((this._receiptId != value))
				{
					if (this._ReceiptTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreceiptIdChanging(value);
					this.SendPropertyChanging();
					this._receiptId = value;
					this.SendPropertyChanged("receiptId");
					this.OnreceiptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Float NOT NULL")]
		public double quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Float NOT NULL")]
		public double unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Float NOT NULL")]
		public double productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string productDescription
		{
			get
			{
				return this._productDescription;
			}
			set
			{
				if ((this._productDescription != value))
				{
					this.OnproductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._productDescription = value;
					this.SendPropertyChanged("productDescription");
					this.OnproductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productUnitName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productUnitName
		{
			get
			{
				return this._productUnitName;
			}
			set
			{
				if ((this._productUnitName != value))
				{
					this.OnproductUnitNameChanging(value);
					this.SendPropertyChanging();
					this._productUnitName = value;
					this.SendPropertyChanged("productUnitName");
					this.OnproductUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceiptDetailTbl_ReceiptDetailProductFieldsTbl", Storage="_ReceiptDetailProductFieldsTbls", ThisKey="ID", OtherKey="receiptDetailId")]
		public EntitySet<ReceiptDetailProductFieldsTbl> ReceiptDetailProductFieldsTbls
		{
			get
			{
				return this._ReceiptDetailProductFieldsTbls;
			}
			set
			{
				this._ReceiptDetailProductFieldsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ReceiptDetailTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ReceiptDetailTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetailTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceiptTbl_ReceiptDetailTbl", Storage="_ReceiptTbl", ThisKey="receiptId", OtherKey="ID", IsForeignKey=true)]
		public ReceiptTbl ReceiptTbl
		{
			get
			{
				return this._ReceiptTbl.Entity;
			}
			set
			{
				ReceiptTbl previousValue = this._ReceiptTbl.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptTbl.Entity = null;
						previousValue.ReceiptDetailTbls.Remove(this);
					}
					this._ReceiptTbl.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetailTbls.Add(this);
						this._receiptId = value.ID;
					}
					else
					{
						this._receiptId = default(long);
					}
					this.SendPropertyChanged("ReceiptTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReceiptDetailProductFieldsTbls(ReceiptDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptDetailTbl = this;
		}
		
		private void detach_ReceiptDetailProductFieldsTbls(ReceiptDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptDetailTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptTbl")]
	public partial class ReceiptTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _providerUserId;
		
		private long _receiverUserId;
		
		private string _code;
		
		private string _description;
		
		private System.DateTime _regDate;
		
		private byte _status;
		
		private string _providerUserName;
		
		private string _providerUserFamily;
		
		private string _providerUserMobile;
		
		private string _receiverUserName;
		
		private string _receiverUserFamily;
		
		private string _receiverUserMobile;
		
		private EntitySet<ReceiptDetailTbl> _ReceiptDetailTbls;
		
		private EntityRef<UserTbl> _UserTbl;
		
		private EntityRef<UserTbl> _UserTbl1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnproviderUserIdChanging(long value);
    partial void OnproviderUserIdChanged();
    partial void OnreceiverUserIdChanging(long value);
    partial void OnreceiverUserIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnproviderUserNameChanging(string value);
    partial void OnproviderUserNameChanged();
    partial void OnproviderUserFamilyChanging(string value);
    partial void OnproviderUserFamilyChanged();
    partial void OnproviderUserMobileChanging(string value);
    partial void OnproviderUserMobileChanged();
    partial void OnreceiverUserNameChanging(string value);
    partial void OnreceiverUserNameChanged();
    partial void OnreceiverUserFamilyChanging(string value);
    partial void OnreceiverUserFamilyChanged();
    partial void OnreceiverUserMobileChanging(string value);
    partial void OnreceiverUserMobileChanged();
    #endregion
		
		public ReceiptTbl()
		{
			this._ReceiptDetailTbls = new EntitySet<ReceiptDetailTbl>(new Action<ReceiptDetailTbl>(this.attach_ReceiptDetailTbls), new Action<ReceiptDetailTbl>(this.detach_ReceiptDetailTbls));
			this._UserTbl = default(EntityRef<UserTbl>);
			this._UserTbl1 = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_providerUserId", DbType="BigInt NOT NULL")]
		public long providerUserId
		{
			get
			{
				return this._providerUserId;
			}
			set
			{
				if ((this._providerUserId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproviderUserIdChanging(value);
					this.SendPropertyChanging();
					this._providerUserId = value;
					this.SendPropertyChanged("providerUserId");
					this.OnproviderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverUserId", DbType="BigInt NOT NULL")]
		public long receiverUserId
		{
			get
			{
				return this._receiverUserId;
			}
			set
			{
				if ((this._receiverUserId != value))
				{
					if (this._UserTbl1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreceiverUserIdChanging(value);
					this.SendPropertyChanging();
					this._receiverUserId = value;
					this.SendPropertyChanged("receiverUserId");
					this.OnreceiverUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_providerUserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string providerUserName
		{
			get
			{
				return this._providerUserName;
			}
			set
			{
				if ((this._providerUserName != value))
				{
					this.OnproviderUserNameChanging(value);
					this.SendPropertyChanging();
					this._providerUserName = value;
					this.SendPropertyChanged("providerUserName");
					this.OnproviderUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_providerUserFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string providerUserFamily
		{
			get
			{
				return this._providerUserFamily;
			}
			set
			{
				if ((this._providerUserFamily != value))
				{
					this.OnproviderUserFamilyChanging(value);
					this.SendPropertyChanging();
					this._providerUserFamily = value;
					this.SendPropertyChanged("providerUserFamily");
					this.OnproviderUserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_providerUserMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string providerUserMobile
		{
			get
			{
				return this._providerUserMobile;
			}
			set
			{
				if ((this._providerUserMobile != value))
				{
					this.OnproviderUserMobileChanging(value);
					this.SendPropertyChanging();
					this._providerUserMobile = value;
					this.SendPropertyChanged("providerUserMobile");
					this.OnproviderUserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverUserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string receiverUserName
		{
			get
			{
				return this._receiverUserName;
			}
			set
			{
				if ((this._receiverUserName != value))
				{
					this.OnreceiverUserNameChanging(value);
					this.SendPropertyChanging();
					this._receiverUserName = value;
					this.SendPropertyChanged("receiverUserName");
					this.OnreceiverUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverUserFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string receiverUserFamily
		{
			get
			{
				return this._receiverUserFamily;
			}
			set
			{
				if ((this._receiverUserFamily != value))
				{
					this.OnreceiverUserFamilyChanging(value);
					this.SendPropertyChanging();
					this._receiverUserFamily = value;
					this.SendPropertyChanged("receiverUserFamily");
					this.OnreceiverUserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverUserMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string receiverUserMobile
		{
			get
			{
				return this._receiverUserMobile;
			}
			set
			{
				if ((this._receiverUserMobile != value))
				{
					this.OnreceiverUserMobileChanging(value);
					this.SendPropertyChanging();
					this._receiverUserMobile = value;
					this.SendPropertyChanged("receiverUserMobile");
					this.OnreceiverUserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceiptTbl_ReceiptDetailTbl", Storage="_ReceiptDetailTbls", ThisKey="ID", OtherKey="receiptId")]
		public EntitySet<ReceiptDetailTbl> ReceiptDetailTbls
		{
			get
			{
				return this._ReceiptDetailTbls;
			}
			set
			{
				this._ReceiptDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ReceiptTbl", Storage="_UserTbl", ThisKey="providerUserId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.ReceiptTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.ReceiptTbls.Add(this);
						this._providerUserId = value.ID;
					}
					else
					{
						this._providerUserId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ReceiptTbl1", Storage="_UserTbl1", ThisKey="receiverUserId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl1
		{
			get
			{
				return this._UserTbl1.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl1.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl1.Entity = null;
						previousValue.ReceiptTbls1.Remove(this);
					}
					this._UserTbl1.Entity = value;
					if ((value != null))
					{
						value.ReceiptTbls1.Add(this);
						this._receiverUserId = value.ID;
					}
					else
					{
						this._receiverUserId = default(long);
					}
					this.SendPropertyChanged("UserTbl1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReceiptDetailTbls(ReceiptDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptTbl = this;
		}
		
		private void detach_ReceiptDetailTbls(ReceiptDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReferalGiftSettingTbl")]
	public partial class ReferalGiftSettingTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _code;
		
		private string _name;
		
		private int _days;
		
		private double _value;
		
		private bool _isPercent;
		
		private double _maxPrice;
		
		private int _maxReuse;
		
		private int _totalReuse;
		
		private byte _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndaysChanging(int value);
    partial void OndaysChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OnisPercentChanging(bool value);
    partial void OnisPercentChanged();
    partial void OnmaxPriceChanging(double value);
    partial void OnmaxPriceChanged();
    partial void OnmaxReuseChanging(int value);
    partial void OnmaxReuseChanged();
    partial void OntotalReuseChanging(int value);
    partial void OntotalReuseChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ReferalGiftSettingTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_days", DbType="Int NOT NULL")]
		public int days
		{
			get
			{
				return this._days;
			}
			set
			{
				if ((this._days != value))
				{
					this.OndaysChanging(value);
					this.SendPropertyChanging();
					this._days = value;
					this.SendPropertyChanged("days");
					this.OndaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPercent", DbType="Bit NOT NULL")]
		public bool isPercent
		{
			get
			{
				return this._isPercent;
			}
			set
			{
				if ((this._isPercent != value))
				{
					this.OnisPercentChanging(value);
					this.SendPropertyChanging();
					this._isPercent = value;
					this.SendPropertyChanged("isPercent");
					this.OnisPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxPrice", DbType="Float NOT NULL")]
		public double maxPrice
		{
			get
			{
				return this._maxPrice;
			}
			set
			{
				if ((this._maxPrice != value))
				{
					this.OnmaxPriceChanging(value);
					this.SendPropertyChanging();
					this._maxPrice = value;
					this.SendPropertyChanged("maxPrice");
					this.OnmaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxReuse", DbType="Int NOT NULL")]
		public int maxReuse
		{
			get
			{
				return this._maxReuse;
			}
			set
			{
				if ((this._maxReuse != value))
				{
					this.OnmaxReuseChanging(value);
					this.SendPropertyChanging();
					this._maxReuse = value;
					this.SendPropertyChanged("maxReuse");
					this.OnmaxReuseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalReuse", DbType="Int NOT NULL")]
		public int totalReuse
		{
			get
			{
				return this._totalReuse;
			}
			set
			{
				if ((this._totalReuse != value))
				{
					this.OntotalReuseChanging(value);
					this.SendPropertyChanging();
					this._totalReuse = value;
					this.SendPropertyChanged("totalReuse");
					this.OntotalReuseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Repairman_AreaTbl")]
	public partial class Repairman_AreaTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _repairmanId;
		
		private long _areaId;
		
		private EntityRef<AreaTbl> _AreaTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnrepairmanIdChanging(long value);
    partial void OnrepairmanIdChanged();
    partial void OnareaIdChanging(long value);
    partial void OnareaIdChanged();
    #endregion
		
		public Repairman_AreaTbl()
		{
			this._AreaTbl = default(EntityRef<AreaTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanId", DbType="BigInt NOT NULL")]
		public long repairmanId
		{
			get
			{
				return this._repairmanId;
			}
			set
			{
				if ((this._repairmanId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._repairmanId = value;
					this.SendPropertyChanged("repairmanId");
					this.OnrepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_areaId", DbType="BigInt NOT NULL")]
		public long areaId
		{
			get
			{
				return this._areaId;
			}
			set
			{
				if ((this._areaId != value))
				{
					if (this._AreaTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnareaIdChanging(value);
					this.SendPropertyChanging();
					this._areaId = value;
					this.SendPropertyChanged("areaId");
					this.OnareaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreaTbl_Repairman_AreaTbl", Storage="_AreaTbl", ThisKey="areaId", OtherKey="ID", IsForeignKey=true)]
		public AreaTbl AreaTbl
		{
			get
			{
				return this._AreaTbl.Entity;
			}
			set
			{
				AreaTbl previousValue = this._AreaTbl.Entity;
				if (((previousValue != value) 
							|| (this._AreaTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaTbl.Entity = null;
						previousValue.Repairman_AreaTbls.Remove(this);
					}
					this._AreaTbl.Entity = value;
					if ((value != null))
					{
						value.Repairman_AreaTbls.Add(this);
						this._areaId = value.ID;
					}
					else
					{
						this._areaId = default(long);
					}
					this.SendPropertyChanged("AreaTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_Repairman_AreaTbl", Storage="_UserTbl", ThisKey="repairmanId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.Repairman_AreaTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.Repairman_AreaTbls.Add(this);
						this._repairmanId = value.ID;
					}
					else
					{
						this._repairmanId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepairmanCancelerLogTbl")]
	public partial class RepairmanCancelerLogTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _cancelerId;
		
		private long _replaceId;
		
		private long _serviceOrderId;
		
		private System.DateTime _regDate;
		
		private long _regUserId;
		
		private string _regUserName;
		
		private string _regUserFamily;
		
		private string _regUserMobile;
		
		private string _cancelerName;
		
		private string _cancelerFamily;
		
		private string _cancelerMobile;
		
		private string _replaceName;
		
		private string _replaceFamily;
		
		private string _replaceMobile;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
		private EntityRef<UserTbl> _UserTbl1;
		
		private EntityRef<UserTbl> _UserTbl2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncancelerIdChanging(long value);
    partial void OncancelerIdChanged();
    partial void OnreplaceIdChanging(long value);
    partial void OnreplaceIdChanged();
    partial void OnserviceOrderIdChanging(long value);
    partial void OnserviceOrderIdChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnregUserIdChanging(long value);
    partial void OnregUserIdChanged();
    partial void OnregUserNameChanging(string value);
    partial void OnregUserNameChanged();
    partial void OnregUserFamilyChanging(string value);
    partial void OnregUserFamilyChanged();
    partial void OnregUserMobileChanging(string value);
    partial void OnregUserMobileChanged();
    partial void OncancelerNameChanging(string value);
    partial void OncancelerNameChanged();
    partial void OncancelerFamilyChanging(string value);
    partial void OncancelerFamilyChanged();
    partial void OncancelerMobileChanging(string value);
    partial void OncancelerMobileChanged();
    partial void OnreplaceNameChanging(string value);
    partial void OnreplaceNameChanged();
    partial void OnreplaceFamilyChanging(string value);
    partial void OnreplaceFamilyChanged();
    partial void OnreplaceMobileChanging(string value);
    partial void OnreplaceMobileChanged();
    #endregion
		
		public RepairmanCancelerLogTbl()
		{
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			this._UserTbl1 = default(EntityRef<UserTbl>);
			this._UserTbl2 = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerId", DbType="BigInt NOT NULL")]
		public long cancelerId
		{
			get
			{
				return this._cancelerId;
			}
			set
			{
				if ((this._cancelerId != value))
				{
					if (this._UserTbl1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncancelerIdChanging(value);
					this.SendPropertyChanging();
					this._cancelerId = value;
					this.SendPropertyChanged("cancelerId");
					this.OncancelerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replaceId", DbType="BigInt NOT NULL")]
		public long replaceId
		{
			get
			{
				return this._replaceId;
			}
			set
			{
				if ((this._replaceId != value))
				{
					if (this._UserTbl2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreplaceIdChanging(value);
					this.SendPropertyChanging();
					this._replaceId = value;
					this.SendPropertyChanged("replaceId");
					this.OnreplaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderId", DbType="BigInt NOT NULL")]
		public long serviceOrderId
		{
			get
			{
				return this._serviceOrderId;
			}
			set
			{
				if ((this._serviceOrderId != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderId = value;
					this.SendPropertyChanged("serviceOrderId");
					this.OnserviceOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regUserId", DbType="BigInt NOT NULL")]
		public long regUserId
		{
			get
			{
				return this._regUserId;
			}
			set
			{
				if ((this._regUserId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnregUserIdChanging(value);
					this.SendPropertyChanging();
					this._regUserId = value;
					this.SendPropertyChanged("regUserId");
					this.OnregUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regUserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string regUserName
		{
			get
			{
				return this._regUserName;
			}
			set
			{
				if ((this._regUserName != value))
				{
					this.OnregUserNameChanging(value);
					this.SendPropertyChanging();
					this._regUserName = value;
					this.SendPropertyChanged("regUserName");
					this.OnregUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regUserFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string regUserFamily
		{
			get
			{
				return this._regUserFamily;
			}
			set
			{
				if ((this._regUserFamily != value))
				{
					this.OnregUserFamilyChanging(value);
					this.SendPropertyChanging();
					this._regUserFamily = value;
					this.SendPropertyChanged("regUserFamily");
					this.OnregUserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regUserMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string regUserMobile
		{
			get
			{
				return this._regUserMobile;
			}
			set
			{
				if ((this._regUserMobile != value))
				{
					this.OnregUserMobileChanging(value);
					this.SendPropertyChanging();
					this._regUserMobile = value;
					this.SendPropertyChanged("regUserMobile");
					this.OnregUserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string cancelerName
		{
			get
			{
				return this._cancelerName;
			}
			set
			{
				if ((this._cancelerName != value))
				{
					this.OncancelerNameChanging(value);
					this.SendPropertyChanging();
					this._cancelerName = value;
					this.SendPropertyChanged("cancelerName");
					this.OncancelerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string cancelerFamily
		{
			get
			{
				return this._cancelerFamily;
			}
			set
			{
				if ((this._cancelerFamily != value))
				{
					this.OncancelerFamilyChanging(value);
					this.SendPropertyChanging();
					this._cancelerFamily = value;
					this.SendPropertyChanged("cancelerFamily");
					this.OncancelerFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string cancelerMobile
		{
			get
			{
				return this._cancelerMobile;
			}
			set
			{
				if ((this._cancelerMobile != value))
				{
					this.OncancelerMobileChanging(value);
					this.SendPropertyChanging();
					this._cancelerMobile = value;
					this.SendPropertyChanged("cancelerMobile");
					this.OncancelerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replaceName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string replaceName
		{
			get
			{
				return this._replaceName;
			}
			set
			{
				if ((this._replaceName != value))
				{
					this.OnreplaceNameChanging(value);
					this.SendPropertyChanging();
					this._replaceName = value;
					this.SendPropertyChanged("replaceName");
					this.OnreplaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replaceFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string replaceFamily
		{
			get
			{
				return this._replaceFamily;
			}
			set
			{
				if ((this._replaceFamily != value))
				{
					this.OnreplaceFamilyChanging(value);
					this.SendPropertyChanging();
					this._replaceFamily = value;
					this.SendPropertyChanged("replaceFamily");
					this.OnreplaceFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replaceMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string replaceMobile
		{
			get
			{
				return this._replaceMobile;
			}
			set
			{
				if ((this._replaceMobile != value))
				{
					this.OnreplaceMobileChanging(value);
					this.SendPropertyChanging();
					this._replaceMobile = value;
					this.SendPropertyChanged("replaceMobile");
					this.OnreplaceMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_RepairmanCancelerLogTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.RepairmanCancelerLogTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.RepairmanCancelerLogTbls.Add(this);
						this._serviceOrderId = value.ID;
					}
					else
					{
						this._serviceOrderId = default(long);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanCancelerLogTbl", Storage="_UserTbl", ThisKey="regUserId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.RepairmanCancelerLogTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.RepairmanCancelerLogTbls.Add(this);
						this._regUserId = value.ID;
					}
					else
					{
						this._regUserId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanCancelerLogTbl1", Storage="_UserTbl1", ThisKey="cancelerId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl1
		{
			get
			{
				return this._UserTbl1.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl1.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl1.Entity = null;
						previousValue.RepairmanCancelerLogTbls1.Remove(this);
					}
					this._UserTbl1.Entity = value;
					if ((value != null))
					{
						value.RepairmanCancelerLogTbls1.Add(this);
						this._cancelerId = value.ID;
					}
					else
					{
						this._cancelerId = default(long);
					}
					this.SendPropertyChanged("UserTbl1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanCancelerLogTbl2", Storage="_UserTbl2", ThisKey="replaceId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl2
		{
			get
			{
				return this._UserTbl2.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl2.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl2.Entity = null;
						previousValue.RepairmanCancelerLogTbls2.Remove(this);
					}
					this._UserTbl2.Entity = value;
					if ((value != null))
					{
						value.RepairmanCancelerLogTbls2.Add(this);
						this._replaceId = value.ID;
					}
					else
					{
						this._replaceId = default(long);
					}
					this.SendPropertyChanged("UserTbl2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepairmanCancelingOrderTbl")]
	public partial class RepairmanCancelingOrderTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceOrderId;
		
		private System.Nullable<System.DateTime> _handleTime;
		
		private System.DateTime _registerDate;
		
		private System.Nullable<long> _operatorId;
		
		private bool _byRepairman;
		
		private string _operatorName;
		
		private string _operatorFamily;
		
		private string _operatorMobile;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceOrderIdChanging(long value);
    partial void OnserviceOrderIdChanged();
    partial void OnhandleTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnhandleTimeChanged();
    partial void OnregisterDateChanging(System.DateTime value);
    partial void OnregisterDateChanged();
    partial void OnoperatorIdChanging(System.Nullable<long> value);
    partial void OnoperatorIdChanged();
    partial void OnbyRepairmanChanging(bool value);
    partial void OnbyRepairmanChanged();
    partial void OnoperatorNameChanging(string value);
    partial void OnoperatorNameChanged();
    partial void OnoperatorFamilyChanging(string value);
    partial void OnoperatorFamilyChanged();
    partial void OnoperatorMobileChanging(string value);
    partial void OnoperatorMobileChanged();
    #endregion
		
		public RepairmanCancelingOrderTbl()
		{
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderId", DbType="BigInt NOT NULL")]
		public long serviceOrderId
		{
			get
			{
				return this._serviceOrderId;
			}
			set
			{
				if ((this._serviceOrderId != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderId = value;
					this.SendPropertyChanged("serviceOrderId");
					this.OnserviceOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handleTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> handleTime
		{
			get
			{
				return this._handleTime;
			}
			set
			{
				if ((this._handleTime != value))
				{
					this.OnhandleTimeChanging(value);
					this.SendPropertyChanging();
					this._handleTime = value;
					this.SendPropertyChanged("handleTime");
					this.OnhandleTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerDate", DbType="DateTime NOT NULL")]
		public System.DateTime registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this.OnregisterDateChanging(value);
					this.SendPropertyChanging();
					this._registerDate = value;
					this.SendPropertyChanged("registerDate");
					this.OnregisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorId", DbType="BigInt")]
		public System.Nullable<long> operatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnoperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("operatorId");
					this.OnoperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_byRepairman", DbType="Bit NOT NULL")]
		public bool byRepairman
		{
			get
			{
				return this._byRepairman;
			}
			set
			{
				if ((this._byRepairman != value))
				{
					this.OnbyRepairmanChanging(value);
					this.SendPropertyChanging();
					this._byRepairman = value;
					this.SendPropertyChanged("byRepairman");
					this.OnbyRepairmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorName", DbType="NVarChar(200)")]
		public string operatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnoperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("operatorName");
					this.OnoperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorFamily", DbType="NVarChar(200)")]
		public string operatorFamily
		{
			get
			{
				return this._operatorFamily;
			}
			set
			{
				if ((this._operatorFamily != value))
				{
					this.OnoperatorFamilyChanging(value);
					this.SendPropertyChanging();
					this._operatorFamily = value;
					this.SendPropertyChanged("operatorFamily");
					this.OnoperatorFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorMobile", DbType="Char(11)")]
		public string operatorMobile
		{
			get
			{
				return this._operatorMobile;
			}
			set
			{
				if ((this._operatorMobile != value))
				{
					this.OnoperatorMobileChanging(value);
					this.SendPropertyChanging();
					this._operatorMobile = value;
					this.SendPropertyChanged("operatorMobile");
					this.OnoperatorMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_RepairmanCancelingOrderTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.RepairmanCancelingOrderTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.RepairmanCancelingOrderTbls.Add(this);
						this._serviceOrderId = value.ID;
					}
					else
					{
						this._serviceOrderId = default(long);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanCancelingOrderTbl", Storage="_UserTbl", ThisKey="operatorId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.RepairmanCancelingOrderTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.RepairmanCancelingOrderTbls.Add(this);
						this._operatorId = value.ID;
					}
					else
					{
						this._operatorId = default(Nullable<long>);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.repairmanRoleDetailsTbl")]
	public partial class repairmanRoleDetailsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _repairmanRoleId;
		
		private long _repairmanId;
		
		private EntityRef<repairmanRoleTbl> _repairmanRoleTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnrepairmanRoleIdChanging(long value);
    partial void OnrepairmanRoleIdChanged();
    partial void OnrepairmanIdChanging(long value);
    partial void OnrepairmanIdChanged();
    #endregion
		
		public repairmanRoleDetailsTbl()
		{
			this._repairmanRoleTbl = default(EntityRef<repairmanRoleTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanRoleId", DbType="BigInt NOT NULL")]
		public long repairmanRoleId
		{
			get
			{
				return this._repairmanRoleId;
			}
			set
			{
				if ((this._repairmanRoleId != value))
				{
					if (this._repairmanRoleTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrepairmanRoleIdChanging(value);
					this.SendPropertyChanging();
					this._repairmanRoleId = value;
					this.SendPropertyChanged("repairmanRoleId");
					this.OnrepairmanRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanId", DbType="BigInt NOT NULL")]
		public long repairmanId
		{
			get
			{
				return this._repairmanId;
			}
			set
			{
				if ((this._repairmanId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._repairmanId = value;
					this.SendPropertyChanged("repairmanId");
					this.OnrepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repairmanRoleTbl_repairmanRoleDetailsTbl", Storage="_repairmanRoleTbl", ThisKey="repairmanRoleId", OtherKey="Id", IsForeignKey=true)]
		public repairmanRoleTbl repairmanRoleTbl
		{
			get
			{
				return this._repairmanRoleTbl.Entity;
			}
			set
			{
				repairmanRoleTbl previousValue = this._repairmanRoleTbl.Entity;
				if (((previousValue != value) 
							|| (this._repairmanRoleTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._repairmanRoleTbl.Entity = null;
						previousValue.repairmanRoleDetailsTbls.Remove(this);
					}
					this._repairmanRoleTbl.Entity = value;
					if ((value != null))
					{
						value.repairmanRoleDetailsTbls.Add(this);
						this._repairmanRoleId = value.Id;
					}
					else
					{
						this._repairmanRoleId = default(long);
					}
					this.SendPropertyChanged("repairmanRoleTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_repairmanRoleDetailsTbl", Storage="_UserTbl", ThisKey="repairmanId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.repairmanRoleDetailsTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.repairmanRoleDetailsTbls.Add(this);
						this._repairmanId = value.ID;
					}
					else
					{
						this._repairmanId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.repairmanRoleTbl")]
	public partial class repairmanRoleTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _name;
		
		private byte _status;
		
		private EntitySet<repairmanRoleDetailsTbl> _repairmanRoleDetailsTbls;
		
		private EntitySet<ServiceCarType_RepairemanRoleTbl> _ServiceCarType_RepairemanRoleTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public repairmanRoleTbl()
		{
			this._repairmanRoleDetailsTbls = new EntitySet<repairmanRoleDetailsTbl>(new Action<repairmanRoleDetailsTbl>(this.attach_repairmanRoleDetailsTbls), new Action<repairmanRoleDetailsTbl>(this.detach_repairmanRoleDetailsTbls));
			this._ServiceCarType_RepairemanRoleTbls = new EntitySet<ServiceCarType_RepairemanRoleTbl>(new Action<ServiceCarType_RepairemanRoleTbl>(this.attach_ServiceCarType_RepairemanRoleTbls), new Action<ServiceCarType_RepairemanRoleTbl>(this.detach_ServiceCarType_RepairemanRoleTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repairmanRoleTbl_repairmanRoleDetailsTbl", Storage="_repairmanRoleDetailsTbls", ThisKey="Id", OtherKey="repairmanRoleId")]
		public EntitySet<repairmanRoleDetailsTbl> repairmanRoleDetailsTbls
		{
			get
			{
				return this._repairmanRoleDetailsTbls;
			}
			set
			{
				this._repairmanRoleDetailsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repairmanRoleTbl_ServiceCarType_RepairemanRoleTbl", Storage="_ServiceCarType_RepairemanRoleTbls", ThisKey="Id", OtherKey="repairemanRoleId")]
		public EntitySet<ServiceCarType_RepairemanRoleTbl> ServiceCarType_RepairemanRoleTbls
		{
			get
			{
				return this._ServiceCarType_RepairemanRoleTbls;
			}
			set
			{
				this._ServiceCarType_RepairemanRoleTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_repairmanRoleDetailsTbls(repairmanRoleDetailsTbl entity)
		{
			this.SendPropertyChanging();
			entity.repairmanRoleTbl = this;
		}
		
		private void detach_repairmanRoleDetailsTbls(repairmanRoleDetailsTbl entity)
		{
			this.SendPropertyChanging();
			entity.repairmanRoleTbl = null;
		}
		
		private void attach_ServiceCarType_RepairemanRoleTbls(ServiceCarType_RepairemanRoleTbl entity)
		{
			this.SendPropertyChanging();
			entity.repairmanRoleTbl = this;
		}
		
		private void detach_ServiceCarType_RepairemanRoleTbls(ServiceCarType_RepairemanRoleTbl entity)
		{
			this.SendPropertyChanging();
			entity.repairmanRoleTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepairmanTimeSheet1Tbl")]
	public partial class RepairmanTimeSheet1Tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _activeDayId;
		
		private long _repairmanId;
		
		private System.TimeSpan _startTime;
		
		private System.TimeSpan _endTime;
		
		private byte _status;
		
		private System.Nullable<long> _customerId;
		
		private System.Nullable<System.DateTime> _expireDate;
		
		private EntityRef<ActiveDayTbl> _ActiveDayTbl;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnactiveDayIdChanging(long value);
    partial void OnactiveDayIdChanged();
    partial void OnrepairmanIdChanging(long value);
    partial void OnrepairmanIdChanged();
    partial void OnstartTimeChanging(System.TimeSpan value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.TimeSpan value);
    partial void OnendTimeChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OncustomerIdChanging(System.Nullable<long> value);
    partial void OncustomerIdChanged();
    partial void OnexpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpireDateChanged();
    #endregion
		
		public RepairmanTimeSheet1Tbl()
		{
			this._ActiveDayTbl = default(EntityRef<ActiveDayTbl>);
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activeDayId", DbType="BigInt NOT NULL")]
		public long activeDayId
		{
			get
			{
				return this._activeDayId;
			}
			set
			{
				if ((this._activeDayId != value))
				{
					if (this._ActiveDayTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactiveDayIdChanging(value);
					this.SendPropertyChanging();
					this._activeDayId = value;
					this.SendPropertyChanged("activeDayId");
					this.OnactiveDayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanId", DbType="BigInt NOT NULL")]
		public long repairmanId
		{
			get
			{
				return this._repairmanId;
			}
			set
			{
				if ((this._repairmanId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._repairmanId = value;
					this.SendPropertyChanged("repairmanId");
					this.OnrepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="Time NOT NULL")]
		public System.TimeSpan startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="Time NOT NULL")]
		public System.TimeSpan endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt")]
		public System.Nullable<long> customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				if ((this._expireDate != value))
				{
					this.OnexpireDateChanging(value);
					this.SendPropertyChanging();
					this._expireDate = value;
					this.SendPropertyChanged("expireDate");
					this.OnexpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActiveDayTbl_RepairmanTimeSheet1Tbl", Storage="_ActiveDayTbl", ThisKey="activeDayId", OtherKey="ID", IsForeignKey=true)]
		public ActiveDayTbl ActiveDayTbl
		{
			get
			{
				return this._ActiveDayTbl.Entity;
			}
			set
			{
				ActiveDayTbl previousValue = this._ActiveDayTbl.Entity;
				if (((previousValue != value) 
							|| (this._ActiveDayTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActiveDayTbl.Entity = null;
						previousValue.RepairmanTimeSheet1Tbls.Remove(this);
					}
					this._ActiveDayTbl.Entity = value;
					if ((value != null))
					{
						value.RepairmanTimeSheet1Tbls.Add(this);
						this._activeDayId = value.ID;
					}
					else
					{
						this._activeDayId = default(long);
					}
					this.SendPropertyChanged("ActiveDayTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_RepairmanTimeSheet1Tbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.RepairmanTimeSheet1Tbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.RepairmanTimeSheet1Tbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(Nullable<long>);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanTimeSheet1Tbl", Storage="_UserTbl", ThisKey="repairmanId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.RepairmanTimeSheet1Tbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.RepairmanTimeSheet1Tbls.Add(this);
						this._repairmanId = value.ID;
					}
					else
					{
						this._repairmanId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_CustomerAmarTbl")]
	public partial class Report_CustomerAmarTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _RequestDate;
		
		private int _CustomerCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnCustomerCountChanging(int value);
    partial void OnCustomerCountChanged();
    #endregion
		
		public Report_CustomerAmarTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="Date NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCount", DbType="Int NOT NULL")]
		public int CustomerCount
		{
			get
			{
				return this._CustomerCount;
			}
			set
			{
				if ((this._CustomerCount != value))
				{
					this.OnCustomerCountChanging(value);
					this.SendPropertyChanging();
					this._CustomerCount = value;
					this.SendPropertyChanged("CustomerCount");
					this.OnCustomerCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReturnDetailProductFieldsTbl")]
	public partial class ReturnDetailProductFieldsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _returnDetailId;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<ReturnDetailTbl> _ReturnDetailTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnreturnDetailIdChanging(long value);
    partial void OnreturnDetailIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public ReturnDetailProductFieldsTbl()
		{
			this._ReturnDetailTbl = default(EntityRef<ReturnDetailTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnDetailId", DbType="BigInt NOT NULL")]
		public long returnDetailId
		{
			get
			{
				return this._returnDetailId;
			}
			set
			{
				if ((this._returnDetailId != value))
				{
					if (this._ReturnDetailTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreturnDetailIdChanging(value);
					this.SendPropertyChanging();
					this._returnDetailId = value;
					this.SendPropertyChanged("returnDetailId");
					this.OnreturnDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReturnDetailTbl_ReturnDetailProductFieldsTbl", Storage="_ReturnDetailTbl", ThisKey="returnDetailId", OtherKey="ID", IsForeignKey=true)]
		public ReturnDetailTbl ReturnDetailTbl
		{
			get
			{
				return this._ReturnDetailTbl.Entity;
			}
			set
			{
				ReturnDetailTbl previousValue = this._ReturnDetailTbl.Entity;
				if (((previousValue != value) 
							|| (this._ReturnDetailTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReturnDetailTbl.Entity = null;
						previousValue.ReturnDetailProductFieldsTbls.Remove(this);
					}
					this._ReturnDetailTbl.Entity = value;
					if ((value != null))
					{
						value.ReturnDetailProductFieldsTbls.Add(this);
						this._returnDetailId = value.ID;
					}
					else
					{
						this._returnDetailId = default(long);
					}
					this.SendPropertyChanged("ReturnDetailTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReturnDetailTbl")]
	public partial class ReturnDetailTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _returnId;
		
		private long _productId;
		
		private string _productCode;
		
		private double _quantity;
		
		private double _unitPrice;
		
		private string _productName;
		
		private double _productPrice;
		
		private string _productDescription;
		
		private long _productUnitName;
		
		private EntitySet<ReturnDetailProductFieldsTbl> _ReturnDetailProductFieldsTbls;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
		private EntityRef<ReturnTbl> _ReturnTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnreturnIdChanging(long value);
    partial void OnreturnIdChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OnquantityChanging(double value);
    partial void OnquantityChanged();
    partial void OnunitPriceChanging(double value);
    partial void OnunitPriceChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnproductPriceChanging(double value);
    partial void OnproductPriceChanged();
    partial void OnproductDescriptionChanging(string value);
    partial void OnproductDescriptionChanged();
    partial void OnproductUnitNameChanging(long value);
    partial void OnproductUnitNameChanged();
    #endregion
		
		public ReturnDetailTbl()
		{
			this._ReturnDetailProductFieldsTbls = new EntitySet<ReturnDetailProductFieldsTbl>(new Action<ReturnDetailProductFieldsTbl>(this.attach_ReturnDetailProductFieldsTbls), new Action<ReturnDetailProductFieldsTbl>(this.detach_ReturnDetailProductFieldsTbls));
			this._ProductTbl = default(EntityRef<ProductTbl>);
			this._ReturnTbl = default(EntityRef<ReturnTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnId", DbType="BigInt NOT NULL")]
		public long returnId
		{
			get
			{
				return this._returnId;
			}
			set
			{
				if ((this._returnId != value))
				{
					if (this._ReturnTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreturnIdChanging(value);
					this.SendPropertyChanging();
					this._returnId = value;
					this.SendPropertyChanged("returnId");
					this.OnreturnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Float NOT NULL")]
		public double quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Float NOT NULL")]
		public double unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Float NOT NULL")]
		public double productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string productDescription
		{
			get
			{
				return this._productDescription;
			}
			set
			{
				if ((this._productDescription != value))
				{
					this.OnproductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._productDescription = value;
					this.SendPropertyChanged("productDescription");
					this.OnproductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productUnitName", DbType="BigInt NOT NULL")]
		public long productUnitName
		{
			get
			{
				return this._productUnitName;
			}
			set
			{
				if ((this._productUnitName != value))
				{
					this.OnproductUnitNameChanging(value);
					this.SendPropertyChanging();
					this._productUnitName = value;
					this.SendPropertyChanged("productUnitName");
					this.OnproductUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReturnDetailTbl_ReturnDetailProductFieldsTbl", Storage="_ReturnDetailProductFieldsTbls", ThisKey="ID", OtherKey="returnDetailId")]
		public EntitySet<ReturnDetailProductFieldsTbl> ReturnDetailProductFieldsTbls
		{
			get
			{
				return this._ReturnDetailProductFieldsTbls;
			}
			set
			{
				this._ReturnDetailProductFieldsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ReturnDetailTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ReturnDetailTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ReturnDetailTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReturnTbl_ReturnDetailTbl", Storage="_ReturnTbl", ThisKey="returnId", OtherKey="ID", IsForeignKey=true)]
		public ReturnTbl ReturnTbl
		{
			get
			{
				return this._ReturnTbl.Entity;
			}
			set
			{
				ReturnTbl previousValue = this._ReturnTbl.Entity;
				if (((previousValue != value) 
							|| (this._ReturnTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReturnTbl.Entity = null;
						previousValue.ReturnDetailTbls.Remove(this);
					}
					this._ReturnTbl.Entity = value;
					if ((value != null))
					{
						value.ReturnDetailTbls.Add(this);
						this._returnId = value.ID;
					}
					else
					{
						this._returnId = default(long);
					}
					this.SendPropertyChanged("ReturnTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReturnDetailProductFieldsTbls(ReturnDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ReturnDetailTbl = this;
		}
		
		private void detach_ReturnDetailProductFieldsTbls(ReturnDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ReturnDetailTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReturnTbl")]
	public partial class ReturnTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userId;
		
		private long _warehouseKeeperId;
		
		private string _code;
		
		private string _description;
		
		private System.DateTime _date;
		
		private string _warehouseKeeperName;
		
		private string _warehouseKeeperFamily;
		
		private string _warehouseKeeperMobile;
		
		private string _userName;
		
		private string _userFamily;
		
		private string _userMobile;
		
		private EntitySet<ReturnDetailTbl> _ReturnDetailTbls;
		
		private EntityRef<UserTbl> _UserTbl;
		
		private EntityRef<UserTbl> _UserTbl1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OnwarehouseKeeperIdChanging(long value);
    partial void OnwarehouseKeeperIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnwarehouseKeeperNameChanging(string value);
    partial void OnwarehouseKeeperNameChanged();
    partial void OnwarehouseKeeperFamilyChanging(string value);
    partial void OnwarehouseKeeperFamilyChanged();
    partial void OnwarehouseKeeperMobileChanging(string value);
    partial void OnwarehouseKeeperMobileChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserFamilyChanging(string value);
    partial void OnuserFamilyChanged();
    partial void OnuserMobileChanging(string value);
    partial void OnuserMobileChanged();
    #endregion
		
		public ReturnTbl()
		{
			this._ReturnDetailTbls = new EntitySet<ReturnDetailTbl>(new Action<ReturnDetailTbl>(this.attach_ReturnDetailTbls), new Action<ReturnDetailTbl>(this.detach_ReturnDetailTbls));
			this._UserTbl = default(EntityRef<UserTbl>);
			this._UserTbl1 = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseKeeperId", DbType="BigInt NOT NULL")]
		public long warehouseKeeperId
		{
			get
			{
				return this._warehouseKeeperId;
			}
			set
			{
				if ((this._warehouseKeeperId != value))
				{
					if (this._UserTbl1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwarehouseKeeperIdChanging(value);
					this.SendPropertyChanging();
					this._warehouseKeeperId = value;
					this.SendPropertyChanged("warehouseKeeperId");
					this.OnwarehouseKeeperIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseKeeperName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string warehouseKeeperName
		{
			get
			{
				return this._warehouseKeeperName;
			}
			set
			{
				if ((this._warehouseKeeperName != value))
				{
					this.OnwarehouseKeeperNameChanging(value);
					this.SendPropertyChanging();
					this._warehouseKeeperName = value;
					this.SendPropertyChanged("warehouseKeeperName");
					this.OnwarehouseKeeperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseKeeperFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string warehouseKeeperFamily
		{
			get
			{
				return this._warehouseKeeperFamily;
			}
			set
			{
				if ((this._warehouseKeeperFamily != value))
				{
					this.OnwarehouseKeeperFamilyChanging(value);
					this.SendPropertyChanging();
					this._warehouseKeeperFamily = value;
					this.SendPropertyChanged("warehouseKeeperFamily");
					this.OnwarehouseKeeperFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseKeeperMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string warehouseKeeperMobile
		{
			get
			{
				return this._warehouseKeeperMobile;
			}
			set
			{
				if ((this._warehouseKeeperMobile != value))
				{
					this.OnwarehouseKeeperMobileChanging(value);
					this.SendPropertyChanging();
					this._warehouseKeeperMobile = value;
					this.SendPropertyChanged("warehouseKeeperMobile");
					this.OnwarehouseKeeperMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string userFamily
		{
			get
			{
				return this._userFamily;
			}
			set
			{
				if ((this._userFamily != value))
				{
					this.OnuserFamilyChanging(value);
					this.SendPropertyChanging();
					this._userFamily = value;
					this.SendPropertyChanged("userFamily");
					this.OnuserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string userMobile
		{
			get
			{
				return this._userMobile;
			}
			set
			{
				if ((this._userMobile != value))
				{
					this.OnuserMobileChanging(value);
					this.SendPropertyChanging();
					this._userMobile = value;
					this.SendPropertyChanged("userMobile");
					this.OnuserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReturnTbl_ReturnDetailTbl", Storage="_ReturnDetailTbls", ThisKey="ID", OtherKey="returnId")]
		public EntitySet<ReturnDetailTbl> ReturnDetailTbls
		{
			get
			{
				return this._ReturnDetailTbls;
			}
			set
			{
				this._ReturnDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ReturnTbl", Storage="_UserTbl", ThisKey="userId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.ReturnTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.ReturnTbls.Add(this);
						this._userId = value.ID;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ReturnTbl1", Storage="_UserTbl1", ThisKey="warehouseKeeperId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl1
		{
			get
			{
				return this._UserTbl1.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl1.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl1.Entity = null;
						previousValue.ReturnTbls1.Remove(this);
					}
					this._UserTbl1.Entity = value;
					if ((value != null))
					{
						value.ReturnTbls1.Add(this);
						this._warehouseKeeperId = value.ID;
					}
					else
					{
						this._warehouseKeeperId = default(long);
					}
					this.SendPropertyChanged("UserTbl1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReturnDetailTbls(ReturnDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ReturnTbl = this;
		}
		
		private void detach_ReturnDetailTbls(ReturnDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ReturnTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role_PermissionTbl")]
	public partial class Role_PermissionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _permissionId;
		
		private long _roleId;
		
		private EntityRef<PermissionTbl> _PermissionTbl;
		
		private EntityRef<RoleTbl> _RoleTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnpermissionIdChanging(long value);
    partial void OnpermissionIdChanged();
    partial void OnroleIdChanging(long value);
    partial void OnroleIdChanged();
    #endregion
		
		public Role_PermissionTbl()
		{
			this._PermissionTbl = default(EntityRef<PermissionTbl>);
			this._RoleTbl = default(EntityRef<RoleTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionId", DbType="BigInt NOT NULL")]
		public long permissionId
		{
			get
			{
				return this._permissionId;
			}
			set
			{
				if ((this._permissionId != value))
				{
					if (this._PermissionTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpermissionIdChanging(value);
					this.SendPropertyChanging();
					this._permissionId = value;
					this.SendPropertyChanged("permissionId");
					this.OnpermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="BigInt NOT NULL")]
		public long roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					if (this._RoleTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionTbl_Role_PermissionTbl", Storage="_PermissionTbl", ThisKey="permissionId", OtherKey="ID", IsForeignKey=true)]
		public PermissionTbl PermissionTbl
		{
			get
			{
				return this._PermissionTbl.Entity;
			}
			set
			{
				PermissionTbl previousValue = this._PermissionTbl.Entity;
				if (((previousValue != value) 
							|| (this._PermissionTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PermissionTbl.Entity = null;
						previousValue.Role_PermissionTbls.Remove(this);
					}
					this._PermissionTbl.Entity = value;
					if ((value != null))
					{
						value.Role_PermissionTbls.Add(this);
						this._permissionId = value.ID;
					}
					else
					{
						this._permissionId = default(long);
					}
					this.SendPropertyChanged("PermissionTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleTbl_Role_PermissionTbl", Storage="_RoleTbl", ThisKey="roleId", OtherKey="ID", IsForeignKey=true)]
		public RoleTbl RoleTbl
		{
			get
			{
				return this._RoleTbl.Entity;
			}
			set
			{
				RoleTbl previousValue = this._RoleTbl.Entity;
				if (((previousValue != value) 
							|| (this._RoleTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleTbl.Entity = null;
						previousValue.Role_PermissionTbls.Remove(this);
					}
					this._RoleTbl.Entity = value;
					if ((value != null))
					{
						value.Role_PermissionTbls.Add(this);
						this._roleId = value.ID;
					}
					else
					{
						this._roleId = default(long);
					}
					this.SendPropertyChanged("RoleTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleTbl")]
	public partial class RoleTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private long _registerUserId;
		
		private string _registerUserName;
		
		private string _registerUserFamily;
		
		private string _registerUserMobile;
		
		private EntitySet<Role_PermissionTbl> _Role_PermissionTbls;
		
		private EntitySet<User_RoleTbl> _User_RoleTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnregisterUserIdChanging(long value);
    partial void OnregisterUserIdChanged();
    partial void OnregisterUserNameChanging(string value);
    partial void OnregisterUserNameChanged();
    partial void OnregisterUserFamilyChanging(string value);
    partial void OnregisterUserFamilyChanged();
    partial void OnregisterUserMobileChanging(string value);
    partial void OnregisterUserMobileChanged();
    #endregion
		
		public RoleTbl()
		{
			this._Role_PermissionTbls = new EntitySet<Role_PermissionTbl>(new Action<Role_PermissionTbl>(this.attach_Role_PermissionTbls), new Action<Role_PermissionTbl>(this.detach_Role_PermissionTbls));
			this._User_RoleTbls = new EntitySet<User_RoleTbl>(new Action<User_RoleTbl>(this.attach_User_RoleTbls), new Action<User_RoleTbl>(this.detach_User_RoleTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserId", DbType="BigInt NOT NULL")]
		public long registerUserId
		{
			get
			{
				return this._registerUserId;
			}
			set
			{
				if ((this._registerUserId != value))
				{
					this.OnregisterUserIdChanging(value);
					this.SendPropertyChanging();
					this._registerUserId = value;
					this.SendPropertyChanged("registerUserId");
					this.OnregisterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string registerUserName
		{
			get
			{
				return this._registerUserName;
			}
			set
			{
				if ((this._registerUserName != value))
				{
					this.OnregisterUserNameChanging(value);
					this.SendPropertyChanging();
					this._registerUserName = value;
					this.SendPropertyChanged("registerUserName");
					this.OnregisterUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string registerUserFamily
		{
			get
			{
				return this._registerUserFamily;
			}
			set
			{
				if ((this._registerUserFamily != value))
				{
					this.OnregisterUserFamilyChanging(value);
					this.SendPropertyChanging();
					this._registerUserFamily = value;
					this.SendPropertyChanged("registerUserFamily");
					this.OnregisterUserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string registerUserMobile
		{
			get
			{
				return this._registerUserMobile;
			}
			set
			{
				if ((this._registerUserMobile != value))
				{
					this.OnregisterUserMobileChanging(value);
					this.SendPropertyChanging();
					this._registerUserMobile = value;
					this.SendPropertyChanged("registerUserMobile");
					this.OnregisterUserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleTbl_Role_PermissionTbl", Storage="_Role_PermissionTbls", ThisKey="ID", OtherKey="roleId")]
		public EntitySet<Role_PermissionTbl> Role_PermissionTbls
		{
			get
			{
				return this._Role_PermissionTbls;
			}
			set
			{
				this._Role_PermissionTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleTbl_User_RoleTbl", Storage="_User_RoleTbls", ThisKey="ID", OtherKey="roleId")]
		public EntitySet<User_RoleTbl> User_RoleTbls
		{
			get
			{
				return this._User_RoleTbls;
			}
			set
			{
				this._User_RoleTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Role_PermissionTbls(Role_PermissionTbl entity)
		{
			this.SendPropertyChanging();
			entity.RoleTbl = this;
		}
		
		private void detach_Role_PermissionTbls(Role_PermissionTbl entity)
		{
			this.SendPropertyChanging();
			entity.RoleTbl = null;
		}
		
		private void attach_User_RoleTbls(User_RoleTbl entity)
		{
			this.SendPropertyChanging();
			entity.RoleTbl = this;
		}
		
		private void detach_User_RoleTbls(User_RoleTbl entity)
		{
			this.SendPropertyChanging();
			entity.RoleTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SellerTbl")]
	public partial class SellerTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _nationalCode;
		
		private string _registrationNumber;
		
		private string _postalCode;
		
		private string _address;
		
		private System.Nullable<System.DateTime> _registerDate;
		
		private string _cEOname;
		
		private string _economicCode;
		
		private string _webSite;
		
		private string _phone;
		
		private EntitySet<Product_SellerTbl> _Product_SellerTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnationalCodeChanging(string value);
    partial void OnnationalCodeChanged();
    partial void OnregistrationNumberChanging(string value);
    partial void OnregistrationNumberChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnregisterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnregisterDateChanged();
    partial void OncEOnameChanging(string value);
    partial void OncEOnameChanged();
    partial void OneconomicCodeChanging(string value);
    partial void OneconomicCodeChanged();
    partial void OnwebSiteChanging(string value);
    partial void OnwebSiteChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public SellerTbl()
		{
			this._Product_SellerTbls = new EntitySet<Product_SellerTbl>(new Action<Product_SellerTbl>(this.attach_Product_SellerTbls), new Action<Product_SellerTbl>(this.detach_Product_SellerTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nationalCode", DbType="Char(20)")]
		public string nationalCode
		{
			get
			{
				return this._nationalCode;
			}
			set
			{
				if ((this._nationalCode != value))
				{
					this.OnnationalCodeChanging(value);
					this.SendPropertyChanging();
					this._nationalCode = value;
					this.SendPropertyChanged("nationalCode");
					this.OnnationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registrationNumber", DbType="Char(20)")]
		public string registrationNumber
		{
			get
			{
				return this._registrationNumber;
			}
			set
			{
				if ((this._registrationNumber != value))
				{
					this.OnregistrationNumberChanging(value);
					this.SendPropertyChanging();
					this._registrationNumber = value;
					this.SendPropertyChanged("registrationNumber");
					this.OnregistrationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="Char(20)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this.OnregisterDateChanging(value);
					this.SendPropertyChanging();
					this._registerDate = value;
					this.SendPropertyChanged("registerDate");
					this.OnregisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cEOname", DbType="NVarChar(150)")]
		public string cEOname
		{
			get
			{
				return this._cEOname;
			}
			set
			{
				if ((this._cEOname != value))
				{
					this.OncEOnameChanging(value);
					this.SendPropertyChanging();
					this._cEOname = value;
					this.SendPropertyChanged("cEOname");
					this.OncEOnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_economicCode", DbType="Char(20)")]
		public string economicCode
		{
			get
			{
				return this._economicCode;
			}
			set
			{
				if ((this._economicCode != value))
				{
					this.OneconomicCodeChanging(value);
					this.SendPropertyChanging();
					this._economicCode = value;
					this.SendPropertyChanged("economicCode");
					this.OneconomicCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_webSite", DbType="NVarChar(150)")]
		public string webSite
		{
			get
			{
				return this._webSite;
			}
			set
			{
				if ((this._webSite != value))
				{
					this.OnwebSiteChanging(value);
					this.SendPropertyChanging();
					this._webSite = value;
					this.SendPropertyChanged("webSite");
					this.OnwebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SellerTbl_Product_SellerTbl", Storage="_Product_SellerTbls", ThisKey="ID", OtherKey="sellerId")]
		public EntitySet<Product_SellerTbl> Product_SellerTbls
		{
			get
			{
				return this._Product_SellerTbls;
			}
			set
			{
				this._Product_SellerTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_SellerTbls(Product_SellerTbl entity)
		{
			this.SendPropertyChanging();
			entity.SellerTbl = this;
		}
		
		private void detach_Product_SellerTbls(Product_SellerTbl entity)
		{
			this.SendPropertyChanging();
			entity.SellerTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service_CarTypeTbl")]
	public partial class Service_CarTypeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceId;
		
		private long _carTypeId;
		
		private double _price;
		
		private int _timePeriod;
		
		private double _taxPrice;
		
		private EntitySet<ServiceCarType_RepairemanRoleTbl> _ServiceCarType_RepairemanRoleTbls;
		
		private EntitySet<ServiceCarTypeGroupTbl> _ServiceCarTypeGroupTbls;
		
		private EntitySet<ServiceDiscountTbl> _ServiceDiscountTbls;
		
		private EntitySet<ServiceOrderServiceDetailTbl> _ServiceOrderServiceDetailTbls;
		
		private EntityRef<CarTypeTbl> _CarTypeTbl;
		
		private EntityRef<ServiceTbl> _ServiceTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceIdChanging(long value);
    partial void OnserviceIdChanged();
    partial void OncarTypeIdChanging(long value);
    partial void OncarTypeIdChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OntimePeriodChanging(int value);
    partial void OntimePeriodChanged();
    partial void OntaxPriceChanging(double value);
    partial void OntaxPriceChanged();
    #endregion
		
		public Service_CarTypeTbl()
		{
			this._ServiceCarType_RepairemanRoleTbls = new EntitySet<ServiceCarType_RepairemanRoleTbl>(new Action<ServiceCarType_RepairemanRoleTbl>(this.attach_ServiceCarType_RepairemanRoleTbls), new Action<ServiceCarType_RepairemanRoleTbl>(this.detach_ServiceCarType_RepairemanRoleTbls));
			this._ServiceCarTypeGroupTbls = new EntitySet<ServiceCarTypeGroupTbl>(new Action<ServiceCarTypeGroupTbl>(this.attach_ServiceCarTypeGroupTbls), new Action<ServiceCarTypeGroupTbl>(this.detach_ServiceCarTypeGroupTbls));
			this._ServiceDiscountTbls = new EntitySet<ServiceDiscountTbl>(new Action<ServiceDiscountTbl>(this.attach_ServiceDiscountTbls), new Action<ServiceDiscountTbl>(this.detach_ServiceDiscountTbls));
			this._ServiceOrderServiceDetailTbls = new EntitySet<ServiceOrderServiceDetailTbl>(new Action<ServiceOrderServiceDetailTbl>(this.attach_ServiceOrderServiceDetailTbls), new Action<ServiceOrderServiceDetailTbl>(this.detach_ServiceOrderServiceDetailTbls));
			this._CarTypeTbl = default(EntityRef<CarTypeTbl>);
			this._ServiceTbl = default(EntityRef<ServiceTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceId", DbType="BigInt NOT NULL")]
		public long serviceId
		{
			get
			{
				return this._serviceId;
			}
			set
			{
				if ((this._serviceId != value))
				{
					if (this._ServiceTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceIdChanging(value);
					this.SendPropertyChanging();
					this._serviceId = value;
					this.SendPropertyChanged("serviceId");
					this.OnserviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carTypeId", DbType="BigInt NOT NULL")]
		public long carTypeId
		{
			get
			{
				return this._carTypeId;
			}
			set
			{
				if ((this._carTypeId != value))
				{
					if (this._CarTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncarTypeIdChanging(value);
					this.SendPropertyChanging();
					this._carTypeId = value;
					this.SendPropertyChanged("carTypeId");
					this.OncarTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timePeriod", DbType="Int NOT NULL")]
		public int timePeriod
		{
			get
			{
				return this._timePeriod;
			}
			set
			{
				if ((this._timePeriod != value))
				{
					this.OntimePeriodChanging(value);
					this.SendPropertyChanging();
					this._timePeriod = value;
					this.SendPropertyChanged("timePeriod");
					this.OntimePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxPrice", DbType="Float NOT NULL")]
		public double taxPrice
		{
			get
			{
				return this._taxPrice;
			}
			set
			{
				if ((this._taxPrice != value))
				{
					this.OntaxPriceChanging(value);
					this.SendPropertyChanging();
					this._taxPrice = value;
					this.SendPropertyChanged("taxPrice");
					this.OntaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CarTypeTbl_ServiceCarType_RepairemanRoleTbl", Storage="_ServiceCarType_RepairemanRoleTbls", ThisKey="ID", OtherKey="serviceCarTypeId")]
		public EntitySet<ServiceCarType_RepairemanRoleTbl> ServiceCarType_RepairemanRoleTbls
		{
			get
			{
				return this._ServiceCarType_RepairemanRoleTbls;
			}
			set
			{
				this._ServiceCarType_RepairemanRoleTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CarTypeTbl_ServiceCarTypeGroupTbl", Storage="_ServiceCarTypeGroupTbls", ThisKey="ID", OtherKey="serviceCarTypeID")]
		public EntitySet<ServiceCarTypeGroupTbl> ServiceCarTypeGroupTbls
		{
			get
			{
				return this._ServiceCarTypeGroupTbls;
			}
			set
			{
				this._ServiceCarTypeGroupTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CarTypeTbl_ServiceDiscountTbl", Storage="_ServiceDiscountTbls", ThisKey="ID", OtherKey="serviceCarTypeId")]
		public EntitySet<ServiceDiscountTbl> ServiceDiscountTbls
		{
			get
			{
				return this._ServiceDiscountTbls;
			}
			set
			{
				this._ServiceDiscountTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CarTypeTbl_ServiceOrderServiceDetailTbl", Storage="_ServiceOrderServiceDetailTbls", ThisKey="ID", OtherKey="serviceCarTypeID")]
		public EntitySet<ServiceOrderServiceDetailTbl> ServiceOrderServiceDetailTbls
		{
			get
			{
				return this._ServiceOrderServiceDetailTbls;
			}
			set
			{
				this._ServiceOrderServiceDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTypeTbl_Service_CarTypeTbl", Storage="_CarTypeTbl", ThisKey="carTypeId", OtherKey="ID", IsForeignKey=true)]
		public CarTypeTbl CarTypeTbl
		{
			get
			{
				return this._CarTypeTbl.Entity;
			}
			set
			{
				CarTypeTbl previousValue = this._CarTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._CarTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarTypeTbl.Entity = null;
						previousValue.Service_CarTypeTbls.Remove(this);
					}
					this._CarTypeTbl.Entity = value;
					if ((value != null))
					{
						value.Service_CarTypeTbls.Add(this);
						this._carTypeId = value.ID;
					}
					else
					{
						this._carTypeId = default(long);
					}
					this.SendPropertyChanged("CarTypeTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceTbl_Service_CarTypeTbl", Storage="_ServiceTbl", ThisKey="serviceId", OtherKey="ID", IsForeignKey=true)]
		public ServiceTbl ServiceTbl
		{
			get
			{
				return this._ServiceTbl.Entity;
			}
			set
			{
				ServiceTbl previousValue = this._ServiceTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceTbl.Entity = null;
						previousValue.Service_CarTypeTbls.Remove(this);
					}
					this._ServiceTbl.Entity = value;
					if ((value != null))
					{
						value.Service_CarTypeTbls.Add(this);
						this._serviceId = value.ID;
					}
					else
					{
						this._serviceId = default(long);
					}
					this.SendPropertyChanged("ServiceTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceCarType_RepairemanRoleTbls(ServiceCarType_RepairemanRoleTbl entity)
		{
			this.SendPropertyChanging();
			entity.Service_CarTypeTbl = this;
		}
		
		private void detach_ServiceCarType_RepairemanRoleTbls(ServiceCarType_RepairemanRoleTbl entity)
		{
			this.SendPropertyChanging();
			entity.Service_CarTypeTbl = null;
		}
		
		private void attach_ServiceCarTypeGroupTbls(ServiceCarTypeGroupTbl entity)
		{
			this.SendPropertyChanging();
			entity.Service_CarTypeTbl = this;
		}
		
		private void detach_ServiceCarTypeGroupTbls(ServiceCarTypeGroupTbl entity)
		{
			this.SendPropertyChanging();
			entity.Service_CarTypeTbl = null;
		}
		
		private void attach_ServiceDiscountTbls(ServiceDiscountTbl entity)
		{
			this.SendPropertyChanging();
			entity.Service_CarTypeTbl = this;
		}
		
		private void detach_ServiceDiscountTbls(ServiceDiscountTbl entity)
		{
			this.SendPropertyChanging();
			entity.Service_CarTypeTbl = null;
		}
		
		private void attach_ServiceOrderServiceDetailTbls(ServiceOrderServiceDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.Service_CarTypeTbl = this;
		}
		
		private void detach_ServiceOrderServiceDetailTbls(ServiceOrderServiceDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.Service_CarTypeTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCarType_RepairemanRoleTbl")]
	public partial class ServiceCarType_RepairemanRoleTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceCarTypeId;
		
		private long _repairemanRoleId;
		
		private EntityRef<Service_CarTypeTbl> _Service_CarTypeTbl;
		
		private EntityRef<repairmanRoleTbl> _repairmanRoleTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceCarTypeIdChanging(long value);
    partial void OnserviceCarTypeIdChanged();
    partial void OnrepairemanRoleIdChanging(long value);
    partial void OnrepairemanRoleIdChanged();
    #endregion
		
		public ServiceCarType_RepairemanRoleTbl()
		{
			this._Service_CarTypeTbl = default(EntityRef<Service_CarTypeTbl>);
			this._repairmanRoleTbl = default(EntityRef<repairmanRoleTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceCarTypeId", DbType="BigInt NOT NULL")]
		public long serviceCarTypeId
		{
			get
			{
				return this._serviceCarTypeId;
			}
			set
			{
				if ((this._serviceCarTypeId != value))
				{
					if (this._Service_CarTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceCarTypeIdChanging(value);
					this.SendPropertyChanging();
					this._serviceCarTypeId = value;
					this.SendPropertyChanged("serviceCarTypeId");
					this.OnserviceCarTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairemanRoleId", DbType="BigInt NOT NULL")]
		public long repairemanRoleId
		{
			get
			{
				return this._repairemanRoleId;
			}
			set
			{
				if ((this._repairemanRoleId != value))
				{
					if (this._repairmanRoleTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrepairemanRoleIdChanging(value);
					this.SendPropertyChanging();
					this._repairemanRoleId = value;
					this.SendPropertyChanged("repairemanRoleId");
					this.OnrepairemanRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CarTypeTbl_ServiceCarType_RepairemanRoleTbl", Storage="_Service_CarTypeTbl", ThisKey="serviceCarTypeId", OtherKey="ID", IsForeignKey=true)]
		public Service_CarTypeTbl Service_CarTypeTbl
		{
			get
			{
				return this._Service_CarTypeTbl.Entity;
			}
			set
			{
				Service_CarTypeTbl previousValue = this._Service_CarTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._Service_CarTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service_CarTypeTbl.Entity = null;
						previousValue.ServiceCarType_RepairemanRoleTbls.Remove(this);
					}
					this._Service_CarTypeTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceCarType_RepairemanRoleTbls.Add(this);
						this._serviceCarTypeId = value.ID;
					}
					else
					{
						this._serviceCarTypeId = default(long);
					}
					this.SendPropertyChanged("Service_CarTypeTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repairmanRoleTbl_ServiceCarType_RepairemanRoleTbl", Storage="_repairmanRoleTbl", ThisKey="repairemanRoleId", OtherKey="Id", IsForeignKey=true)]
		public repairmanRoleTbl repairmanRoleTbl
		{
			get
			{
				return this._repairmanRoleTbl.Entity;
			}
			set
			{
				repairmanRoleTbl previousValue = this._repairmanRoleTbl.Entity;
				if (((previousValue != value) 
							|| (this._repairmanRoleTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._repairmanRoleTbl.Entity = null;
						previousValue.ServiceCarType_RepairemanRoleTbls.Remove(this);
					}
					this._repairmanRoleTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceCarType_RepairemanRoleTbls.Add(this);
						this._repairemanRoleId = value.Id;
					}
					else
					{
						this._repairemanRoleId = default(long);
					}
					this.SendPropertyChanged("repairmanRoleTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCarTypeGroup_EngineVolumeTbl")]
	public partial class ServiceCarTypeGroup_EngineVolumeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceCarTypeGroupID;
		
		private long _engineVolumeID;
		
		private EntityRef<EngineVolumeTbl> _EngineVolumeTbl;
		
		private EntityRef<ServiceCarTypeGroupTbl> _ServiceCarTypeGroupTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceCarTypeGroupIDChanging(long value);
    partial void OnserviceCarTypeGroupIDChanged();
    partial void OnengineVolumeIDChanging(long value);
    partial void OnengineVolumeIDChanged();
    #endregion
		
		public ServiceCarTypeGroup_EngineVolumeTbl()
		{
			this._EngineVolumeTbl = default(EntityRef<EngineVolumeTbl>);
			this._ServiceCarTypeGroupTbl = default(EntityRef<ServiceCarTypeGroupTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceCarTypeGroupID", DbType="BigInt NOT NULL")]
		public long serviceCarTypeGroupID
		{
			get
			{
				return this._serviceCarTypeGroupID;
			}
			set
			{
				if ((this._serviceCarTypeGroupID != value))
				{
					if (this._ServiceCarTypeGroupTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceCarTypeGroupIDChanging(value);
					this.SendPropertyChanging();
					this._serviceCarTypeGroupID = value;
					this.SendPropertyChanged("serviceCarTypeGroupID");
					this.OnserviceCarTypeGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_engineVolumeID", DbType="BigInt NOT NULL")]
		public long engineVolumeID
		{
			get
			{
				return this._engineVolumeID;
			}
			set
			{
				if ((this._engineVolumeID != value))
				{
					if (this._EngineVolumeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnengineVolumeIDChanging(value);
					this.SendPropertyChanging();
					this._engineVolumeID = value;
					this.SendPropertyChanged("engineVolumeID");
					this.OnengineVolumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EngineVolumeTbl_ServiceCarTypeGroup_EngineVolumeTbl", Storage="_EngineVolumeTbl", ThisKey="engineVolumeID", OtherKey="ID", IsForeignKey=true)]
		public EngineVolumeTbl EngineVolumeTbl
		{
			get
			{
				return this._EngineVolumeTbl.Entity;
			}
			set
			{
				EngineVolumeTbl previousValue = this._EngineVolumeTbl.Entity;
				if (((previousValue != value) 
							|| (this._EngineVolumeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EngineVolumeTbl.Entity = null;
						previousValue.ServiceCarTypeGroup_EngineVolumeTbls.Remove(this);
					}
					this._EngineVolumeTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceCarTypeGroup_EngineVolumeTbls.Add(this);
						this._engineVolumeID = value.ID;
					}
					else
					{
						this._engineVolumeID = default(long);
					}
					this.SendPropertyChanged("EngineVolumeTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCarTypeGroupTbl_ServiceCarTypeGroup_EngineVolumeTbl", Storage="_ServiceCarTypeGroupTbl", ThisKey="serviceCarTypeGroupID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCarTypeGroupTbl ServiceCarTypeGroupTbl
		{
			get
			{
				return this._ServiceCarTypeGroupTbl.Entity;
			}
			set
			{
				ServiceCarTypeGroupTbl previousValue = this._ServiceCarTypeGroupTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCarTypeGroupTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCarTypeGroupTbl.Entity = null;
						previousValue.ServiceCarTypeGroup_EngineVolumeTbls.Remove(this);
					}
					this._ServiceCarTypeGroupTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceCarTypeGroup_EngineVolumeTbls.Add(this);
						this._serviceCarTypeGroupID = value.ID;
					}
					else
					{
						this._serviceCarTypeGroupID = default(long);
					}
					this.SendPropertyChanged("ServiceCarTypeGroupTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCarTypeGroupProductTbl")]
	public partial class ServiceCarTypeGroupProductTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceCarTypeGroupID;
		
		private long _productID;
		
		private string _productCode;
		
		private string _productName;
		
		private double _productPrice;
		
		private string _productDescription;
		
		private string _productUnitName;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
		private EntityRef<ServiceCarTypeGroupTbl> _ServiceCarTypeGroupTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceCarTypeGroupIDChanging(long value);
    partial void OnserviceCarTypeGroupIDChanged();
    partial void OnproductIDChanging(long value);
    partial void OnproductIDChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnproductPriceChanging(double value);
    partial void OnproductPriceChanged();
    partial void OnproductDescriptionChanging(string value);
    partial void OnproductDescriptionChanged();
    partial void OnproductUnitNameChanging(string value);
    partial void OnproductUnitNameChanged();
    #endregion
		
		public ServiceCarTypeGroupProductTbl()
		{
			this._ProductTbl = default(EntityRef<ProductTbl>);
			this._ServiceCarTypeGroupTbl = default(EntityRef<ServiceCarTypeGroupTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceCarTypeGroupID", DbType="BigInt NOT NULL")]
		public long serviceCarTypeGroupID
		{
			get
			{
				return this._serviceCarTypeGroupID;
			}
			set
			{
				if ((this._serviceCarTypeGroupID != value))
				{
					if (this._ServiceCarTypeGroupTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceCarTypeGroupIDChanging(value);
					this.SendPropertyChanging();
					this._serviceCarTypeGroupID = value;
					this.SendPropertyChanged("serviceCarTypeGroupID");
					this.OnserviceCarTypeGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="BigInt NOT NULL")]
		public long productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Float NOT NULL")]
		public double productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string productDescription
		{
			get
			{
				return this._productDescription;
			}
			set
			{
				if ((this._productDescription != value))
				{
					this.OnproductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._productDescription = value;
					this.SendPropertyChanged("productDescription");
					this.OnproductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productUnitName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productUnitName
		{
			get
			{
				return this._productUnitName;
			}
			set
			{
				if ((this._productUnitName != value))
				{
					this.OnproductUnitNameChanging(value);
					this.SendPropertyChanging();
					this._productUnitName = value;
					this.SendPropertyChanged("productUnitName");
					this.OnproductUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ServiceCarTypeGroupProductTbl", Storage="_ProductTbl", ThisKey="productID", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ServiceCarTypeGroupProductTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceCarTypeGroupProductTbls.Add(this);
						this._productID = value.ID;
					}
					else
					{
						this._productID = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCarTypeGroupTbl_ServiceCarTypeGroupProductTbl", Storage="_ServiceCarTypeGroupTbl", ThisKey="serviceCarTypeGroupID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCarTypeGroupTbl ServiceCarTypeGroupTbl
		{
			get
			{
				return this._ServiceCarTypeGroupTbl.Entity;
			}
			set
			{
				ServiceCarTypeGroupTbl previousValue = this._ServiceCarTypeGroupTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCarTypeGroupTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCarTypeGroupTbl.Entity = null;
						previousValue.ServiceCarTypeGroupProductTbls.Remove(this);
					}
					this._ServiceCarTypeGroupTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceCarTypeGroupProductTbls.Add(this);
						this._serviceCarTypeGroupID = value.ID;
					}
					else
					{
						this._serviceCarTypeGroupID = default(long);
					}
					this.SendPropertyChanged("ServiceCarTypeGroupTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCarTypeGroupTbl")]
	public partial class ServiceCarTypeGroupTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceCarTypeID;
		
		private long _productCompactID;
		
		private string _name;
		
		private bool _isOffer;
		
		private string _offerText;
		
		private System.Nullable<int> _fromYear;
		
		private System.Nullable<int> _toYear;
		
		private EntitySet<ServiceCarTypeGroup_EngineVolumeTbl> _ServiceCarTypeGroup_EngineVolumeTbls;
		
		private EntitySet<ServiceCarTypeGroupProductTbl> _ServiceCarTypeGroupProductTbls;
		
		private EntityRef<ProductCompactTbl> _ProductCompactTbl;
		
		private EntityRef<Service_CarTypeTbl> _Service_CarTypeTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceCarTypeIDChanging(long value);
    partial void OnserviceCarTypeIDChanged();
    partial void OnproductCompactIDChanging(long value);
    partial void OnproductCompactIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnisOfferChanging(bool value);
    partial void OnisOfferChanged();
    partial void OnofferTextChanging(string value);
    partial void OnofferTextChanged();
    partial void OnfromYearChanging(System.Nullable<int> value);
    partial void OnfromYearChanged();
    partial void OntoYearChanging(System.Nullable<int> value);
    partial void OntoYearChanged();
    #endregion
		
		public ServiceCarTypeGroupTbl()
		{
			this._ServiceCarTypeGroup_EngineVolumeTbls = new EntitySet<ServiceCarTypeGroup_EngineVolumeTbl>(new Action<ServiceCarTypeGroup_EngineVolumeTbl>(this.attach_ServiceCarTypeGroup_EngineVolumeTbls), new Action<ServiceCarTypeGroup_EngineVolumeTbl>(this.detach_ServiceCarTypeGroup_EngineVolumeTbls));
			this._ServiceCarTypeGroupProductTbls = new EntitySet<ServiceCarTypeGroupProductTbl>(new Action<ServiceCarTypeGroupProductTbl>(this.attach_ServiceCarTypeGroupProductTbls), new Action<ServiceCarTypeGroupProductTbl>(this.detach_ServiceCarTypeGroupProductTbls));
			this._ProductCompactTbl = default(EntityRef<ProductCompactTbl>);
			this._Service_CarTypeTbl = default(EntityRef<Service_CarTypeTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceCarTypeID", DbType="BigInt NOT NULL")]
		public long serviceCarTypeID
		{
			get
			{
				return this._serviceCarTypeID;
			}
			set
			{
				if ((this._serviceCarTypeID != value))
				{
					if (this._Service_CarTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceCarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._serviceCarTypeID = value;
					this.SendPropertyChanged("serviceCarTypeID");
					this.OnserviceCarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCompactID", DbType="BigInt NOT NULL")]
		public long productCompactID
		{
			get
			{
				return this._productCompactID;
			}
			set
			{
				if ((this._productCompactID != value))
				{
					if (this._ProductCompactTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductCompactIDChanging(value);
					this.SendPropertyChanging();
					this._productCompactID = value;
					this.SendPropertyChanged("productCompactID");
					this.OnproductCompactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOffer", DbType="Bit NOT NULL")]
		public bool isOffer
		{
			get
			{
				return this._isOffer;
			}
			set
			{
				if ((this._isOffer != value))
				{
					this.OnisOfferChanging(value);
					this.SendPropertyChanging();
					this._isOffer = value;
					this.SendPropertyChanged("isOffer");
					this.OnisOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offerText", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string offerText
		{
			get
			{
				return this._offerText;
			}
			set
			{
				if ((this._offerText != value))
				{
					this.OnofferTextChanging(value);
					this.SendPropertyChanging();
					this._offerText = value;
					this.SendPropertyChanged("offerText");
					this.OnofferTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromYear", DbType="Int")]
		public System.Nullable<int> fromYear
		{
			get
			{
				return this._fromYear;
			}
			set
			{
				if ((this._fromYear != value))
				{
					this.OnfromYearChanging(value);
					this.SendPropertyChanging();
					this._fromYear = value;
					this.SendPropertyChanged("fromYear");
					this.OnfromYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toYear", DbType="Int")]
		public System.Nullable<int> toYear
		{
			get
			{
				return this._toYear;
			}
			set
			{
				if ((this._toYear != value))
				{
					this.OntoYearChanging(value);
					this.SendPropertyChanging();
					this._toYear = value;
					this.SendPropertyChanged("toYear");
					this.OntoYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCarTypeGroupTbl_ServiceCarTypeGroup_EngineVolumeTbl", Storage="_ServiceCarTypeGroup_EngineVolumeTbls", ThisKey="ID", OtherKey="serviceCarTypeGroupID")]
		public EntitySet<ServiceCarTypeGroup_EngineVolumeTbl> ServiceCarTypeGroup_EngineVolumeTbls
		{
			get
			{
				return this._ServiceCarTypeGroup_EngineVolumeTbls;
			}
			set
			{
				this._ServiceCarTypeGroup_EngineVolumeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCarTypeGroupTbl_ServiceCarTypeGroupProductTbl", Storage="_ServiceCarTypeGroupProductTbls", ThisKey="ID", OtherKey="serviceCarTypeGroupID")]
		public EntitySet<ServiceCarTypeGroupProductTbl> ServiceCarTypeGroupProductTbls
		{
			get
			{
				return this._ServiceCarTypeGroupProductTbls;
			}
			set
			{
				this._ServiceCarTypeGroupProductTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCompactTbl_ServiceCarTypeGroupTbl", Storage="_ProductCompactTbl", ThisKey="productCompactID", OtherKey="ID", IsForeignKey=true)]
		public ProductCompactTbl ProductCompactTbl
		{
			get
			{
				return this._ProductCompactTbl.Entity;
			}
			set
			{
				ProductCompactTbl previousValue = this._ProductCompactTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductCompactTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCompactTbl.Entity = null;
						previousValue.ServiceCarTypeGroupTbls.Remove(this);
					}
					this._ProductCompactTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceCarTypeGroupTbls.Add(this);
						this._productCompactID = value.ID;
					}
					else
					{
						this._productCompactID = default(long);
					}
					this.SendPropertyChanged("ProductCompactTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CarTypeTbl_ServiceCarTypeGroupTbl", Storage="_Service_CarTypeTbl", ThisKey="serviceCarTypeID", OtherKey="ID", IsForeignKey=true)]
		public Service_CarTypeTbl Service_CarTypeTbl
		{
			get
			{
				return this._Service_CarTypeTbl.Entity;
			}
			set
			{
				Service_CarTypeTbl previousValue = this._Service_CarTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._Service_CarTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service_CarTypeTbl.Entity = null;
						previousValue.ServiceCarTypeGroupTbls.Remove(this);
					}
					this._Service_CarTypeTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceCarTypeGroupTbls.Add(this);
						this._serviceCarTypeID = value.ID;
					}
					else
					{
						this._serviceCarTypeID = default(long);
					}
					this.SendPropertyChanged("Service_CarTypeTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceCarTypeGroup_EngineVolumeTbls(ServiceCarTypeGroup_EngineVolumeTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCarTypeGroupTbl = this;
		}
		
		private void detach_ServiceCarTypeGroup_EngineVolumeTbls(ServiceCarTypeGroup_EngineVolumeTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCarTypeGroupTbl = null;
		}
		
		private void attach_ServiceCarTypeGroupProductTbls(ServiceCarTypeGroupProductTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCarTypeGroupTbl = this;
		}
		
		private void detach_ServiceCarTypeGroupProductTbls(ServiceCarTypeGroupProductTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCarTypeGroupTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDiscountTbl")]
	public partial class ServiceDiscountTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceCarTypeId;
		
		private string _name;
		
		private double _value;
		
		private string _description;
		
		private bool _isPercent;
		
		private System.DateTime _startTime;
		
		private System.DateTime _endTime;
		
		private string _carTypeName;
		
		private string _carTypeModel;
		
		private string _carTypeCarBrandName;
		
		private string _serviceName;
		
		private string _serviceDescription;
		
		private bool _serviceIsSubService;
		
		private int _serviceExecutionTime;
		
		private byte _status;
		
		private EntityRef<Service_CarTypeTbl> _Service_CarTypeTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceCarTypeIdChanging(long value);
    partial void OnserviceCarTypeIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisPercentChanging(bool value);
    partial void OnisPercentChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OncarTypeNameChanging(string value);
    partial void OncarTypeNameChanged();
    partial void OncarTypeModelChanging(string value);
    partial void OncarTypeModelChanged();
    partial void OncarTypeCarBrandNameChanging(string value);
    partial void OncarTypeCarBrandNameChanged();
    partial void OnserviceNameChanging(string value);
    partial void OnserviceNameChanged();
    partial void OnserviceDescriptionChanging(string value);
    partial void OnserviceDescriptionChanged();
    partial void OnserviceIsSubServiceChanging(bool value);
    partial void OnserviceIsSubServiceChanged();
    partial void OnserviceExecutionTimeChanging(int value);
    partial void OnserviceExecutionTimeChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ServiceDiscountTbl()
		{
			this._Service_CarTypeTbl = default(EntityRef<Service_CarTypeTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceCarTypeId", DbType="BigInt NOT NULL")]
		public long serviceCarTypeId
		{
			get
			{
				return this._serviceCarTypeId;
			}
			set
			{
				if ((this._serviceCarTypeId != value))
				{
					if (this._Service_CarTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceCarTypeIdChanging(value);
					this.SendPropertyChanging();
					this._serviceCarTypeId = value;
					this.SendPropertyChanged("serviceCarTypeId");
					this.OnserviceCarTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPercent", DbType="Bit NOT NULL")]
		public bool isPercent
		{
			get
			{
				return this._isPercent;
			}
			set
			{
				if ((this._isPercent != value))
				{
					this.OnisPercentChanging(value);
					this.SendPropertyChanging();
					this._isPercent = value;
					this.SendPropertyChanged("isPercent");
					this.OnisPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carTypeName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string carTypeName
		{
			get
			{
				return this._carTypeName;
			}
			set
			{
				if ((this._carTypeName != value))
				{
					this.OncarTypeNameChanging(value);
					this.SendPropertyChanging();
					this._carTypeName = value;
					this.SendPropertyChanged("carTypeName");
					this.OncarTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carTypeModel", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string carTypeModel
		{
			get
			{
				return this._carTypeModel;
			}
			set
			{
				if ((this._carTypeModel != value))
				{
					this.OncarTypeModelChanging(value);
					this.SendPropertyChanging();
					this._carTypeModel = value;
					this.SendPropertyChanged("carTypeModel");
					this.OncarTypeModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carTypeCarBrandName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string carTypeCarBrandName
		{
			get
			{
				return this._carTypeCarBrandName;
			}
			set
			{
				if ((this._carTypeCarBrandName != value))
				{
					this.OncarTypeCarBrandNameChanging(value);
					this.SendPropertyChanging();
					this._carTypeCarBrandName = value;
					this.SendPropertyChanged("carTypeCarBrandName");
					this.OncarTypeCarBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string serviceName
		{
			get
			{
				return this._serviceName;
			}
			set
			{
				if ((this._serviceName != value))
				{
					this.OnserviceNameChanging(value);
					this.SendPropertyChanging();
					this._serviceName = value;
					this.SendPropertyChanged("serviceName");
					this.OnserviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceDescription", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string serviceDescription
		{
			get
			{
				return this._serviceDescription;
			}
			set
			{
				if ((this._serviceDescription != value))
				{
					this.OnserviceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._serviceDescription = value;
					this.SendPropertyChanged("serviceDescription");
					this.OnserviceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceIsSubService", DbType="Bit NOT NULL")]
		public bool serviceIsSubService
		{
			get
			{
				return this._serviceIsSubService;
			}
			set
			{
				if ((this._serviceIsSubService != value))
				{
					this.OnserviceIsSubServiceChanging(value);
					this.SendPropertyChanging();
					this._serviceIsSubService = value;
					this.SendPropertyChanged("serviceIsSubService");
					this.OnserviceIsSubServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceExecutionTime", DbType="Int NOT NULL")]
		public int serviceExecutionTime
		{
			get
			{
				return this._serviceExecutionTime;
			}
			set
			{
				if ((this._serviceExecutionTime != value))
				{
					this.OnserviceExecutionTimeChanging(value);
					this.SendPropertyChanging();
					this._serviceExecutionTime = value;
					this.SendPropertyChanged("serviceExecutionTime");
					this.OnserviceExecutionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CarTypeTbl_ServiceDiscountTbl", Storage="_Service_CarTypeTbl", ThisKey="serviceCarTypeId", OtherKey="ID", IsForeignKey=true)]
		public Service_CarTypeTbl Service_CarTypeTbl
		{
			get
			{
				return this._Service_CarTypeTbl.Entity;
			}
			set
			{
				Service_CarTypeTbl previousValue = this._Service_CarTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._Service_CarTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service_CarTypeTbl.Entity = null;
						previousValue.ServiceDiscountTbls.Remove(this);
					}
					this._Service_CarTypeTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceDiscountTbls.Add(this);
						this._serviceCarTypeId = value.ID;
					}
					else
					{
						this._serviceCarTypeId = default(long);
					}
					this.SendPropertyChanged("Service_CarTypeTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceGroupTbl")]
	public partial class ServiceGroupTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private bool _isRequired;
		
		private bool _isMultiSelect;
		
		private int _priority;
		
		private EntitySet<PackageServiceTbl> _PackageServiceTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnisRequiredChanging(bool value);
    partial void OnisRequiredChanged();
    partial void OnisMultiSelectChanging(bool value);
    partial void OnisMultiSelectChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    #endregion
		
		public ServiceGroupTbl()
		{
			this._PackageServiceTbls = new EntitySet<PackageServiceTbl>(new Action<PackageServiceTbl>(this.attach_PackageServiceTbls), new Action<PackageServiceTbl>(this.detach_PackageServiceTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRequired", DbType="Bit NOT NULL")]
		public bool isRequired
		{
			get
			{
				return this._isRequired;
			}
			set
			{
				if ((this._isRequired != value))
				{
					this.OnisRequiredChanging(value);
					this.SendPropertyChanging();
					this._isRequired = value;
					this.SendPropertyChanged("isRequired");
					this.OnisRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMultiSelect", DbType="Bit NOT NULL")]
		public bool isMultiSelect
		{
			get
			{
				return this._isMultiSelect;
			}
			set
			{
				if ((this._isMultiSelect != value))
				{
					this.OnisMultiSelectChanging(value);
					this.SendPropertyChanging();
					this._isMultiSelect = value;
					this.SendPropertyChanged("isMultiSelect");
					this.OnisMultiSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceGroupTbl_PackageServiceTbl", Storage="_PackageServiceTbls", ThisKey="ID", OtherKey="serviceGroupID")]
		public EntitySet<PackageServiceTbl> PackageServiceTbls
		{
			get
			{
				return this._PackageServiceTbls;
			}
			set
			{
				this._PackageServiceTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageServiceTbls(PackageServiceTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceGroupTbl = this;
		}
		
		private void detach_PackageServiceTbls(PackageServiceTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceGroupTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceOrder_ReportTbl")]
	public partial class ServiceOrder_ReportTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _count;
		
		private System.DateTime _requestDate;
		
		private int _packageId;
		
		private int _repairmanId;
		
		private double _totalPrice;
		
		private double _finalPrice;
		
		private double _onlinePayOrderDiscountValue;
		
		private double _giftCardDiscountValue;
		
		private double _serviceOrderDiscountValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    partial void OnrequestDateChanging(System.DateTime value);
    partial void OnrequestDateChanged();
    partial void OnpackageIdChanging(int value);
    partial void OnpackageIdChanged();
    partial void OnrepairmanIdChanging(int value);
    partial void OnrepairmanIdChanged();
    partial void OntotalPriceChanging(double value);
    partial void OntotalPriceChanged();
    partial void OnfinalPriceChanging(double value);
    partial void OnfinalPriceChanged();
    partial void OnonlinePayOrderDiscountValueChanging(double value);
    partial void OnonlinePayOrderDiscountValueChanged();
    partial void OngiftCardDiscountValueChanging(double value);
    partial void OngiftCardDiscountValueChanged();
    partial void OnserviceOrderDiscountValueChanging(double value);
    partial void OnserviceOrderDiscountValueChanged();
    #endregion
		
		public ServiceOrder_ReportTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestDate", DbType="Date NOT NULL")]
		public System.DateTime requestDate
		{
			get
			{
				return this._requestDate;
			}
			set
			{
				if ((this._requestDate != value))
				{
					this.OnrequestDateChanging(value);
					this.SendPropertyChanging();
					this._requestDate = value;
					this.SendPropertyChanged("requestDate");
					this.OnrequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageId", DbType="Int NOT NULL")]
		public int packageId
		{
			get
			{
				return this._packageId;
			}
			set
			{
				if ((this._packageId != value))
				{
					this.OnpackageIdChanging(value);
					this.SendPropertyChanging();
					this._packageId = value;
					this.SendPropertyChanged("packageId");
					this.OnpackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanId", DbType="Int NOT NULL")]
		public int repairmanId
		{
			get
			{
				return this._repairmanId;
			}
			set
			{
				if ((this._repairmanId != value))
				{
					this.OnrepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._repairmanId = value;
					this.SendPropertyChanged("repairmanId");
					this.OnrepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPrice", DbType="Float NOT NULL")]
		public double totalPrice
		{
			get
			{
				return this._totalPrice;
			}
			set
			{
				if ((this._totalPrice != value))
				{
					this.OntotalPriceChanging(value);
					this.SendPropertyChanging();
					this._totalPrice = value;
					this.SendPropertyChanged("totalPrice");
					this.OntotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finalPrice", DbType="Float NOT NULL")]
		public double finalPrice
		{
			get
			{
				return this._finalPrice;
			}
			set
			{
				if ((this._finalPrice != value))
				{
					this.OnfinalPriceChanging(value);
					this.SendPropertyChanging();
					this._finalPrice = value;
					this.SendPropertyChanged("finalPrice");
					this.OnfinalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onlinePayOrderDiscountValue", DbType="Float NOT NULL")]
		public double onlinePayOrderDiscountValue
		{
			get
			{
				return this._onlinePayOrderDiscountValue;
			}
			set
			{
				if ((this._onlinePayOrderDiscountValue != value))
				{
					this.OnonlinePayOrderDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._onlinePayOrderDiscountValue = value;
					this.SendPropertyChanged("onlinePayOrderDiscountValue");
					this.OnonlinePayOrderDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giftCardDiscountValue", DbType="Float NOT NULL")]
		public double giftCardDiscountValue
		{
			get
			{
				return this._giftCardDiscountValue;
			}
			set
			{
				if ((this._giftCardDiscountValue != value))
				{
					this.OngiftCardDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._giftCardDiscountValue = value;
					this.SendPropertyChanged("giftCardDiscountValue");
					this.OngiftCardDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderDiscountValue", DbType="Float NOT NULL")]
		public double serviceOrderDiscountValue
		{
			get
			{
				return this._serviceOrderDiscountValue;
			}
			set
			{
				if ((this._serviceOrderDiscountValue != value))
				{
					this.OnserviceOrderDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderDiscountValue = value;
					this.SendPropertyChanged("serviceOrderDiscountValue");
					this.OnserviceOrderDiscountValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceOrderDiscountTbl")]
	public partial class ServiceOrderDiscountTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private double _maxPrice;
		
		private double _minPrice;
		
		private bool _isPercent;
		
		private double _value;
		
		private System.DateTime _startTime;
		
		private System.DateTime _endTime;
		
		private byte _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmaxPriceChanging(double value);
    partial void OnmaxPriceChanged();
    partial void OnminPriceChanging(double value);
    partial void OnminPriceChanged();
    partial void OnisPercentChanging(bool value);
    partial void OnisPercentChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ServiceOrderDiscountTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxPrice", DbType="Float NOT NULL")]
		public double maxPrice
		{
			get
			{
				return this._maxPrice;
			}
			set
			{
				if ((this._maxPrice != value))
				{
					this.OnmaxPriceChanging(value);
					this.SendPropertyChanging();
					this._maxPrice = value;
					this.SendPropertyChanged("maxPrice");
					this.OnmaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minPrice", DbType="Float NOT NULL")]
		public double minPrice
		{
			get
			{
				return this._minPrice;
			}
			set
			{
				if ((this._minPrice != value))
				{
					this.OnminPriceChanging(value);
					this.SendPropertyChanging();
					this._minPrice = value;
					this.SendPropertyChanged("minPrice");
					this.OnminPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPercent", DbType="Bit NOT NULL")]
		public bool isPercent
		{
			get
			{
				return this._isPercent;
			}
			set
			{
				if ((this._isPercent != value))
				{
					this.OnisPercentChanging(value);
					this.SendPropertyChanging();
					this._isPercent = value;
					this.SendPropertyChanged("isPercent");
					this.OnisPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceOrderLatencyTbl")]
	public partial class ServiceOrderLatencyTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceOrderId;
		
		private System.Nullable<System.DateTime> _handleTime;
		
		private System.DateTime _regDate;
		
		private System.Nullable<long> _operatorId;
		
		private string _operatorName;
		
		private string _operatorFamily;
		
		private string _operatorMobile;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceOrderIdChanging(long value);
    partial void OnserviceOrderIdChanged();
    partial void OnhandleTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnhandleTimeChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnoperatorIdChanging(System.Nullable<long> value);
    partial void OnoperatorIdChanged();
    partial void OnoperatorNameChanging(string value);
    partial void OnoperatorNameChanged();
    partial void OnoperatorFamilyChanging(string value);
    partial void OnoperatorFamilyChanged();
    partial void OnoperatorMobileChanging(string value);
    partial void OnoperatorMobileChanged();
    #endregion
		
		public ServiceOrderLatencyTbl()
		{
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderId", DbType="BigInt NOT NULL")]
		public long serviceOrderId
		{
			get
			{
				return this._serviceOrderId;
			}
			set
			{
				if ((this._serviceOrderId != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderId = value;
					this.SendPropertyChanged("serviceOrderId");
					this.OnserviceOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handleTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> handleTime
		{
			get
			{
				return this._handleTime;
			}
			set
			{
				if ((this._handleTime != value))
				{
					this.OnhandleTimeChanging(value);
					this.SendPropertyChanging();
					this._handleTime = value;
					this.SendPropertyChanged("handleTime");
					this.OnhandleTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorId", DbType="BigInt")]
		public System.Nullable<long> operatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnoperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("operatorId");
					this.OnoperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorName", DbType="NVarChar(200)")]
		public string operatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnoperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("operatorName");
					this.OnoperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorFamily", DbType="NVarChar(200)")]
		public string operatorFamily
		{
			get
			{
				return this._operatorFamily;
			}
			set
			{
				if ((this._operatorFamily != value))
				{
					this.OnoperatorFamilyChanging(value);
					this.SendPropertyChanging();
					this._operatorFamily = value;
					this.SendPropertyChanged("operatorFamily");
					this.OnoperatorFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorMobile", DbType="Char(11)")]
		public string operatorMobile
		{
			get
			{
				return this._operatorMobile;
			}
			set
			{
				if ((this._operatorMobile != value))
				{
					this.OnoperatorMobileChanging(value);
					this.SendPropertyChanging();
					this._operatorMobile = value;
					this.SendPropertyChanged("operatorMobile");
					this.OnoperatorMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_ServiceOrderLatencyTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.ServiceOrderLatencyTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderLatencyTbls.Add(this);
						this._serviceOrderId = value.ID;
					}
					else
					{
						this._serviceOrderId = default(long);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceOrderProductDetailProductFieldsTbl")]
	public partial class ServiceOrderProductDetailProductFieldsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceOrderProductDetailId;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<ServiceOrderProductDetailTbl> _ServiceOrderProductDetailTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceOrderProductDetailIdChanging(long value);
    partial void OnserviceOrderProductDetailIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public ServiceOrderProductDetailProductFieldsTbl()
		{
			this._ServiceOrderProductDetailTbl = default(EntityRef<ServiceOrderProductDetailTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderProductDetailId", DbType="BigInt NOT NULL")]
		public long serviceOrderProductDetailId
		{
			get
			{
				return this._serviceOrderProductDetailId;
			}
			set
			{
				if ((this._serviceOrderProductDetailId != value))
				{
					if (this._ServiceOrderProductDetailTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderProductDetailIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderProductDetailId = value;
					this.SendPropertyChanged("serviceOrderProductDetailId");
					this.OnserviceOrderProductDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderProductDetailTbl_ServiceOrderProductDetailProductFieldsTbl", Storage="_ServiceOrderProductDetailTbl", ThisKey="serviceOrderProductDetailId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderProductDetailTbl ServiceOrderProductDetailTbl
		{
			get
			{
				return this._ServiceOrderProductDetailTbl.Entity;
			}
			set
			{
				ServiceOrderProductDetailTbl previousValue = this._ServiceOrderProductDetailTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderProductDetailTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderProductDetailTbl.Entity = null;
						previousValue.ServiceOrderProductDetailProductFieldsTbls.Remove(this);
					}
					this._ServiceOrderProductDetailTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderProductDetailProductFieldsTbls.Add(this);
						this._serviceOrderProductDetailId = value.ID;
					}
					else
					{
						this._serviceOrderProductDetailId = default(long);
					}
					this.SendPropertyChanged("ServiceOrderProductDetailTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceOrderProductDetailTbl")]
	public partial class ServiceOrderProductDetailTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceOrderId;
		
		private string _productCode;
		
		private long _productId;
		
		private double _productDiscountValue;
		
		private double _quantity;
		
		private string _productName;
		
		private double _productPrice;
		
		private string _productDescription;
		
		private string _productUnitName;
		
		private byte _status;
		
		private EntitySet<ServiceOrderProductDetailProductFieldsTbl> _ServiceOrderProductDetailProductFieldsTbls;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceOrderIdChanging(long value);
    partial void OnserviceOrderIdChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnproductDiscountValueChanging(double value);
    partial void OnproductDiscountValueChanged();
    partial void OnquantityChanging(double value);
    partial void OnquantityChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnproductPriceChanging(double value);
    partial void OnproductPriceChanged();
    partial void OnproductDescriptionChanging(string value);
    partial void OnproductDescriptionChanged();
    partial void OnproductUnitNameChanging(string value);
    partial void OnproductUnitNameChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ServiceOrderProductDetailTbl()
		{
			this._ServiceOrderProductDetailProductFieldsTbls = new EntitySet<ServiceOrderProductDetailProductFieldsTbl>(new Action<ServiceOrderProductDetailProductFieldsTbl>(this.attach_ServiceOrderProductDetailProductFieldsTbls), new Action<ServiceOrderProductDetailProductFieldsTbl>(this.detach_ServiceOrderProductDetailProductFieldsTbls));
			this._ProductTbl = default(EntityRef<ProductTbl>);
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderId", DbType="BigInt NOT NULL")]
		public long serviceOrderId
		{
			get
			{
				return this._serviceOrderId;
			}
			set
			{
				if ((this._serviceOrderId != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIdChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderId = value;
					this.SendPropertyChanged("serviceOrderId");
					this.OnserviceOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDiscountValue", DbType="Float NOT NULL")]
		public double productDiscountValue
		{
			get
			{
				return this._productDiscountValue;
			}
			set
			{
				if ((this._productDiscountValue != value))
				{
					this.OnproductDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._productDiscountValue = value;
					this.SendPropertyChanged("productDiscountValue");
					this.OnproductDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Float NOT NULL")]
		public double quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Float NOT NULL")]
		public double productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string productDescription
		{
			get
			{
				return this._productDescription;
			}
			set
			{
				if ((this._productDescription != value))
				{
					this.OnproductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._productDescription = value;
					this.SendPropertyChanged("productDescription");
					this.OnproductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productUnitName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productUnitName
		{
			get
			{
				return this._productUnitName;
			}
			set
			{
				if ((this._productUnitName != value))
				{
					this.OnproductUnitNameChanging(value);
					this.SendPropertyChanging();
					this._productUnitName = value;
					this.SendPropertyChanged("productUnitName");
					this.OnproductUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderProductDetailTbl_ServiceOrderProductDetailProductFieldsTbl", Storage="_ServiceOrderProductDetailProductFieldsTbls", ThisKey="ID", OtherKey="serviceOrderProductDetailId")]
		public EntitySet<ServiceOrderProductDetailProductFieldsTbl> ServiceOrderProductDetailProductFieldsTbls
		{
			get
			{
				return this._ServiceOrderProductDetailProductFieldsTbls;
			}
			set
			{
				this._ServiceOrderProductDetailProductFieldsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ServiceOrderProductDetailTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ServiceOrderProductDetailTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderProductDetailTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_ServiceOrderProductDetailTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.ServiceOrderProductDetailTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderProductDetailTbls.Add(this);
						this._serviceOrderId = value.ID;
					}
					else
					{
						this._serviceOrderId = default(long);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceOrderProductDetailProductFieldsTbls(ServiceOrderProductDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderProductDetailTbl = this;
		}
		
		private void detach_ServiceOrderProductDetailProductFieldsTbls(ServiceOrderProductDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderProductDetailTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceOrderServiceDetailTbl")]
	public partial class ServiceOrderServiceDetailTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _serviceOrderID;
		
		private long _serviceCarTypeID;
		
		private long _carId;
		
		private string _carPlateNumber;
		
		private double _price;
		
		private double _serviceDiscountValue;
		
		private int _timePeriod;
		
		private byte _status;
		
		private EntityRef<CarTbl> _CarTbl;
		
		private EntityRef<Service_CarTypeTbl> _Service_CarTypeTbl;
		
		private EntityRef<ServiceOrderTbl> _ServiceOrderTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnserviceOrderIDChanging(long value);
    partial void OnserviceOrderIDChanged();
    partial void OnserviceCarTypeIDChanging(long value);
    partial void OnserviceCarTypeIDChanged();
    partial void OncarIdChanging(long value);
    partial void OncarIdChanged();
    partial void OncarPlateNumberChanging(string value);
    partial void OncarPlateNumberChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnserviceDiscountValueChanging(double value);
    partial void OnserviceDiscountValueChanged();
    partial void OntimePeriodChanging(int value);
    partial void OntimePeriodChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ServiceOrderServiceDetailTbl()
		{
			this._CarTbl = default(EntityRef<CarTbl>);
			this._Service_CarTypeTbl = default(EntityRef<Service_CarTypeTbl>);
			this._ServiceOrderTbl = default(EntityRef<ServiceOrderTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderID", DbType="BigInt NOT NULL")]
		public long serviceOrderID
		{
			get
			{
				return this._serviceOrderID;
			}
			set
			{
				if ((this._serviceOrderID != value))
				{
					if (this._ServiceOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceOrderIDChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderID = value;
					this.SendPropertyChanged("serviceOrderID");
					this.OnserviceOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceCarTypeID", DbType="BigInt NOT NULL")]
		public long serviceCarTypeID
		{
			get
			{
				return this._serviceCarTypeID;
			}
			set
			{
				if ((this._serviceCarTypeID != value))
				{
					if (this._Service_CarTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceCarTypeIDChanging(value);
					this.SendPropertyChanging();
					this._serviceCarTypeID = value;
					this.SendPropertyChanged("serviceCarTypeID");
					this.OnserviceCarTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carId", DbType="BigInt NOT NULL")]
		public long carId
		{
			get
			{
				return this._carId;
			}
			set
			{
				if ((this._carId != value))
				{
					if (this._CarTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncarIdChanging(value);
					this.SendPropertyChanging();
					this._carId = value;
					this.SendPropertyChanged("carId");
					this.OncarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carPlateNumber", DbType="NVarChar(100)")]
		public string carPlateNumber
		{
			get
			{
				return this._carPlateNumber;
			}
			set
			{
				if ((this._carPlateNumber != value))
				{
					this.OncarPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._carPlateNumber = value;
					this.SendPropertyChanged("carPlateNumber");
					this.OncarPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceDiscountValue", DbType="Float NOT NULL")]
		public double serviceDiscountValue
		{
			get
			{
				return this._serviceDiscountValue;
			}
			set
			{
				if ((this._serviceDiscountValue != value))
				{
					this.OnserviceDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._serviceDiscountValue = value;
					this.SendPropertyChanged("serviceDiscountValue");
					this.OnserviceDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timePeriod", DbType="Int NOT NULL")]
		public int timePeriod
		{
			get
			{
				return this._timePeriod;
			}
			set
			{
				if ((this._timePeriod != value))
				{
					this.OntimePeriodChanging(value);
					this.SendPropertyChanging();
					this._timePeriod = value;
					this.SendPropertyChanged("timePeriod");
					this.OntimePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTbl_ServiceOrderServiceDetailTbl", Storage="_CarTbl", ThisKey="carId", OtherKey="ID", IsForeignKey=true)]
		public CarTbl CarTbl
		{
			get
			{
				return this._CarTbl.Entity;
			}
			set
			{
				CarTbl previousValue = this._CarTbl.Entity;
				if (((previousValue != value) 
							|| (this._CarTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarTbl.Entity = null;
						previousValue.ServiceOrderServiceDetailTbls.Remove(this);
					}
					this._CarTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderServiceDetailTbls.Add(this);
						this._carId = value.ID;
					}
					else
					{
						this._carId = default(long);
					}
					this.SendPropertyChanged("CarTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_CarTypeTbl_ServiceOrderServiceDetailTbl", Storage="_Service_CarTypeTbl", ThisKey="serviceCarTypeID", OtherKey="ID", IsForeignKey=true)]
		public Service_CarTypeTbl Service_CarTypeTbl
		{
			get
			{
				return this._Service_CarTypeTbl.Entity;
			}
			set
			{
				Service_CarTypeTbl previousValue = this._Service_CarTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._Service_CarTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service_CarTypeTbl.Entity = null;
						previousValue.ServiceOrderServiceDetailTbls.Remove(this);
					}
					this._Service_CarTypeTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderServiceDetailTbls.Add(this);
						this._serviceCarTypeID = value.ID;
					}
					else
					{
						this._serviceCarTypeID = default(long);
					}
					this.SendPropertyChanged("Service_CarTypeTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_ServiceOrderServiceDetailTbl", Storage="_ServiceOrderTbl", ThisKey="serviceOrderID", OtherKey="ID", IsForeignKey=true)]
		public ServiceOrderTbl ServiceOrderTbl
		{
			get
			{
				return this._ServiceOrderTbl.Entity;
			}
			set
			{
				ServiceOrderTbl previousValue = this._ServiceOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ServiceOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceOrderTbl.Entity = null;
						previousValue.ServiceOrderServiceDetailTbls.Remove(this);
					}
					this._ServiceOrderTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderServiceDetailTbls.Add(this);
						this._serviceOrderID = value.ID;
					}
					else
					{
						this._serviceOrderID = default(long);
					}
					this.SendPropertyChanged("ServiceOrderTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceOrderTbl")]
	public partial class ServiceOrderTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _repairmanId;
		
		private string _code;
		
		private System.Nullable<long> _distributorId;
		
		private System.DateTime _requestTime;
		
		private long _customerId;
		
		private long _packageId;
		
		private byte _payStatus;
		
		private System.Nullable<byte> _repairmanScore;
		
		private string _cancelReason;
		
		private System.Nullable<long> _cancelerId;
		
		private bool _distributeDone;
		
		private double _latitude;
		
		private double _longitude;
		
		private string _addressTitle;
		
		private int _houseNumber;
		
		private System.Nullable<int> _houseUnit;
		
		private byte _state;
		
		private double _onlinePayOrderDiscountValue;
		
		private double _serviceOrderDiscountValue;
		
		private double _giftCardDiscountValue;
		
		private double _totalDiscountValue;
		
		private double _totalPriceWithTotalDiscount;
		
		private double _totalPrice;
		
		private double _finalPrice;
		
		private double _exraTotalPrice;
		
		private long _carId;
		
		private System.Nullable<long> _customer_GiftCardId;
		
		private string _repairmanName;
		
		private string _repairmanFamily;
		
		private string _repairmanMobile;
		
		private string _distributorName;
		
		private string _distributorFamily;
		
		private string _distributorMobile;
		
		private string _customerName;
		
		private string _customerFamily;
		
		private string _customerMobile;
		
		private string _servicePriceTariffDayName;
		
		private double _servicePriceTariffPercent;
		
		private System.Nullable<System.TimeSpan> _servicePriceTariffStartTime;
		
		private System.Nullable<System.TimeSpan> _servicePriceTariffEndTime;
		
		private System.DateTime _regDate;
		
		private System.Nullable<System.DateTime> _moveToCustomerDate;
		
		private System.Nullable<System.DateTime> _processingDate;
		
		private System.Nullable<System.DateTime> _DoneDate;
		
		private System.Nullable<System.DateTime> _cancelByOperatorDate;
		
		private System.Nullable<System.DateTime> _cancelByCustomerDate;
		
		private string _signCode;
		
		private System.Nullable<System.DateTime> _signCodeRegDate;
		
		private System.Nullable<byte> _signCodeRerty;
		
		private EntitySet<CustomerPendingRateTbl> _CustomerPendingRateTbls;
		
		private EntitySet<CustomerRateTbl> _CustomerRateTbls;
		
		private EntitySet<CustomerWalletTbl> _CustomerWalletTbls;
		
		private EntitySet<DistributorCancelerLogTbl> _DistributorCancelerLogTbls;
		
		private EntitySet<RepairmanCancelerLogTbl> _RepairmanCancelerLogTbls;
		
		private EntitySet<RepairmanCancelingOrderTbl> _RepairmanCancelingOrderTbls;
		
		private EntitySet<ServiceOrderLatencyTbl> _ServiceOrderLatencyTbls;
		
		private EntitySet<ServiceOrderProductDetailTbl> _ServiceOrderProductDetailTbls;
		
		private EntitySet<ServiceOrderServiceDetailTbl> _ServiceOrderServiceDetailTbls;
		
		private EntityRef<CarTbl> _CarTbl;
		
		private EntityRef<Customer_GiftCardTbl> _Customer_GiftCardTbl;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
		private EntityRef<PackageTbl> _PackageTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
		private EntityRef<UserTbl> _UserTbl1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnrepairmanIdChanging(long value);
    partial void OnrepairmanIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndistributorIdChanging(System.Nullable<long> value);
    partial void OndistributorIdChanged();
    partial void OnrequestTimeChanging(System.DateTime value);
    partial void OnrequestTimeChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnpackageIdChanging(long value);
    partial void OnpackageIdChanged();
    partial void OnpayStatusChanging(byte value);
    partial void OnpayStatusChanged();
    partial void OnrepairmanScoreChanging(System.Nullable<byte> value);
    partial void OnrepairmanScoreChanged();
    partial void OncancelReasonChanging(string value);
    partial void OncancelReasonChanged();
    partial void OncancelerIdChanging(System.Nullable<long> value);
    partial void OncancelerIdChanged();
    partial void OndistributeDoneChanging(bool value);
    partial void OndistributeDoneChanged();
    partial void OnlatitudeChanging(double value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(double value);
    partial void OnlongitudeChanged();
    partial void OnaddressTitleChanging(string value);
    partial void OnaddressTitleChanged();
    partial void OnhouseNumberChanging(int value);
    partial void OnhouseNumberChanged();
    partial void OnhouseUnitChanging(System.Nullable<int> value);
    partial void OnhouseUnitChanged();
    partial void OnstateChanging(byte value);
    partial void OnstateChanged();
    partial void OnonlinePayOrderDiscountValueChanging(double value);
    partial void OnonlinePayOrderDiscountValueChanged();
    partial void OnserviceOrderDiscountValueChanging(double value);
    partial void OnserviceOrderDiscountValueChanged();
    partial void OngiftCardDiscountValueChanging(double value);
    partial void OngiftCardDiscountValueChanged();
    partial void OntotalDiscountValueChanging(double value);
    partial void OntotalDiscountValueChanged();
    partial void OntotalPriceWithTotalDiscountChanging(double value);
    partial void OntotalPriceWithTotalDiscountChanged();
    partial void OntotalPriceChanging(double value);
    partial void OntotalPriceChanged();
    partial void OnfinalPriceChanging(double value);
    partial void OnfinalPriceChanged();
    partial void OnexraTotalPriceChanging(double value);
    partial void OnexraTotalPriceChanged();
    partial void OncarIdChanging(long value);
    partial void OncarIdChanged();
    partial void Oncustomer_GiftCardIdChanging(System.Nullable<long> value);
    partial void Oncustomer_GiftCardIdChanged();
    partial void OnrepairmanNameChanging(string value);
    partial void OnrepairmanNameChanged();
    partial void OnrepairmanFamilyChanging(string value);
    partial void OnrepairmanFamilyChanged();
    partial void OnrepairmanMobileChanging(string value);
    partial void OnrepairmanMobileChanged();
    partial void OndistributorNameChanging(string value);
    partial void OndistributorNameChanged();
    partial void OndistributorFamilyChanging(string value);
    partial void OndistributorFamilyChanged();
    partial void OndistributorMobileChanging(string value);
    partial void OndistributorMobileChanged();
    partial void OncustomerNameChanging(string value);
    partial void OncustomerNameChanged();
    partial void OncustomerFamilyChanging(string value);
    partial void OncustomerFamilyChanged();
    partial void OncustomerMobileChanging(string value);
    partial void OncustomerMobileChanged();
    partial void OnservicePriceTariffDayNameChanging(string value);
    partial void OnservicePriceTariffDayNameChanged();
    partial void OnservicePriceTariffPercentChanging(double value);
    partial void OnservicePriceTariffPercentChanged();
    partial void OnservicePriceTariffStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnservicePriceTariffStartTimeChanged();
    partial void OnservicePriceTariffEndTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnservicePriceTariffEndTimeChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnmoveToCustomerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnmoveToCustomerDateChanged();
    partial void OnprocessingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnprocessingDateChanged();
    partial void OnDoneDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDoneDateChanged();
    partial void OncancelByOperatorDateChanging(System.Nullable<System.DateTime> value);
    partial void OncancelByOperatorDateChanged();
    partial void OncancelByCustomerDateChanging(System.Nullable<System.DateTime> value);
    partial void OncancelByCustomerDateChanged();
    partial void OnsignCodeChanging(string value);
    partial void OnsignCodeChanged();
    partial void OnsignCodeRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsignCodeRegDateChanged();
    partial void OnsignCodeRertyChanging(System.Nullable<byte> value);
    partial void OnsignCodeRertyChanged();
    #endregion
		
		public ServiceOrderTbl()
		{
			this._CustomerPendingRateTbls = new EntitySet<CustomerPendingRateTbl>(new Action<CustomerPendingRateTbl>(this.attach_CustomerPendingRateTbls), new Action<CustomerPendingRateTbl>(this.detach_CustomerPendingRateTbls));
			this._CustomerRateTbls = new EntitySet<CustomerRateTbl>(new Action<CustomerRateTbl>(this.attach_CustomerRateTbls), new Action<CustomerRateTbl>(this.detach_CustomerRateTbls));
			this._CustomerWalletTbls = new EntitySet<CustomerWalletTbl>(new Action<CustomerWalletTbl>(this.attach_CustomerWalletTbls), new Action<CustomerWalletTbl>(this.detach_CustomerWalletTbls));
			this._DistributorCancelerLogTbls = new EntitySet<DistributorCancelerLogTbl>(new Action<DistributorCancelerLogTbl>(this.attach_DistributorCancelerLogTbls), new Action<DistributorCancelerLogTbl>(this.detach_DistributorCancelerLogTbls));
			this._RepairmanCancelerLogTbls = new EntitySet<RepairmanCancelerLogTbl>(new Action<RepairmanCancelerLogTbl>(this.attach_RepairmanCancelerLogTbls), new Action<RepairmanCancelerLogTbl>(this.detach_RepairmanCancelerLogTbls));
			this._RepairmanCancelingOrderTbls = new EntitySet<RepairmanCancelingOrderTbl>(new Action<RepairmanCancelingOrderTbl>(this.attach_RepairmanCancelingOrderTbls), new Action<RepairmanCancelingOrderTbl>(this.detach_RepairmanCancelingOrderTbls));
			this._ServiceOrderLatencyTbls = new EntitySet<ServiceOrderLatencyTbl>(new Action<ServiceOrderLatencyTbl>(this.attach_ServiceOrderLatencyTbls), new Action<ServiceOrderLatencyTbl>(this.detach_ServiceOrderLatencyTbls));
			this._ServiceOrderProductDetailTbls = new EntitySet<ServiceOrderProductDetailTbl>(new Action<ServiceOrderProductDetailTbl>(this.attach_ServiceOrderProductDetailTbls), new Action<ServiceOrderProductDetailTbl>(this.detach_ServiceOrderProductDetailTbls));
			this._ServiceOrderServiceDetailTbls = new EntitySet<ServiceOrderServiceDetailTbl>(new Action<ServiceOrderServiceDetailTbl>(this.attach_ServiceOrderServiceDetailTbls), new Action<ServiceOrderServiceDetailTbl>(this.detach_ServiceOrderServiceDetailTbls));
			this._CarTbl = default(EntityRef<CarTbl>);
			this._Customer_GiftCardTbl = default(EntityRef<Customer_GiftCardTbl>);
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			this._PackageTbl = default(EntityRef<PackageTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			this._UserTbl1 = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanId", DbType="BigInt NOT NULL")]
		public long repairmanId
		{
			get
			{
				return this._repairmanId;
			}
			set
			{
				if ((this._repairmanId != value))
				{
					if (this._UserTbl1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrepairmanIdChanging(value);
					this.SendPropertyChanging();
					this._repairmanId = value;
					this.SendPropertyChanged("repairmanId");
					this.OnrepairmanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distributorId", DbType="BigInt")]
		public System.Nullable<long> distributorId
		{
			get
			{
				return this._distributorId;
			}
			set
			{
				if ((this._distributorId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndistributorIdChanging(value);
					this.SendPropertyChanging();
					this._distributorId = value;
					this.SendPropertyChanged("distributorId");
					this.OndistributorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestTime", DbType="DateTime NOT NULL")]
		public System.DateTime requestTime
		{
			get
			{
				return this._requestTime;
			}
			set
			{
				if ((this._requestTime != value))
				{
					this.OnrequestTimeChanging(value);
					this.SendPropertyChanging();
					this._requestTime = value;
					this.SendPropertyChanged("requestTime");
					this.OnrequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packageId", DbType="BigInt NOT NULL")]
		public long packageId
		{
			get
			{
				return this._packageId;
			}
			set
			{
				if ((this._packageId != value))
				{
					if (this._PackageTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpackageIdChanging(value);
					this.SendPropertyChanging();
					this._packageId = value;
					this.SendPropertyChanged("packageId");
					this.OnpackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payStatus", DbType="TinyInt NOT NULL")]
		public byte payStatus
		{
			get
			{
				return this._payStatus;
			}
			set
			{
				if ((this._payStatus != value))
				{
					this.OnpayStatusChanging(value);
					this.SendPropertyChanging();
					this._payStatus = value;
					this.SendPropertyChanged("payStatus");
					this.OnpayStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanScore", DbType="TinyInt")]
		public System.Nullable<byte> repairmanScore
		{
			get
			{
				return this._repairmanScore;
			}
			set
			{
				if ((this._repairmanScore != value))
				{
					this.OnrepairmanScoreChanging(value);
					this.SendPropertyChanging();
					this._repairmanScore = value;
					this.SendPropertyChanged("repairmanScore");
					this.OnrepairmanScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelReason", DbType="NVarChar(200)")]
		public string cancelReason
		{
			get
			{
				return this._cancelReason;
			}
			set
			{
				if ((this._cancelReason != value))
				{
					this.OncancelReasonChanging(value);
					this.SendPropertyChanging();
					this._cancelReason = value;
					this.SendPropertyChanged("cancelReason");
					this.OncancelReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelerId", DbType="BigInt")]
		public System.Nullable<long> cancelerId
		{
			get
			{
				return this._cancelerId;
			}
			set
			{
				if ((this._cancelerId != value))
				{
					this.OncancelerIdChanging(value);
					this.SendPropertyChanging();
					this._cancelerId = value;
					this.SendPropertyChanged("cancelerId");
					this.OncancelerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distributeDone", DbType="Bit NOT NULL")]
		public bool distributeDone
		{
			get
			{
				return this._distributeDone;
			}
			set
			{
				if ((this._distributeDone != value))
				{
					this.OndistributeDoneChanging(value);
					this.SendPropertyChanging();
					this._distributeDone = value;
					this.SendPropertyChanged("distributeDone");
					this.OndistributeDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float NOT NULL")]
		public double latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float NOT NULL")]
		public double longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressTitle", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string addressTitle
		{
			get
			{
				return this._addressTitle;
			}
			set
			{
				if ((this._addressTitle != value))
				{
					this.OnaddressTitleChanging(value);
					this.SendPropertyChanging();
					this._addressTitle = value;
					this.SendPropertyChanged("addressTitle");
					this.OnaddressTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_houseNumber", DbType="Int NOT NULL")]
		public int houseNumber
		{
			get
			{
				return this._houseNumber;
			}
			set
			{
				if ((this._houseNumber != value))
				{
					this.OnhouseNumberChanging(value);
					this.SendPropertyChanging();
					this._houseNumber = value;
					this.SendPropertyChanged("houseNumber");
					this.OnhouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_houseUnit", DbType="Int")]
		public System.Nullable<int> houseUnit
		{
			get
			{
				return this._houseUnit;
			}
			set
			{
				if ((this._houseUnit != value))
				{
					this.OnhouseUnitChanging(value);
					this.SendPropertyChanging();
					this._houseUnit = value;
					this.SendPropertyChanged("houseUnit");
					this.OnhouseUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="TinyInt NOT NULL")]
		public byte state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onlinePayOrderDiscountValue", DbType="Float NOT NULL")]
		public double onlinePayOrderDiscountValue
		{
			get
			{
				return this._onlinePayOrderDiscountValue;
			}
			set
			{
				if ((this._onlinePayOrderDiscountValue != value))
				{
					this.OnonlinePayOrderDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._onlinePayOrderDiscountValue = value;
					this.SendPropertyChanged("onlinePayOrderDiscountValue");
					this.OnonlinePayOrderDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceOrderDiscountValue", DbType="Float NOT NULL")]
		public double serviceOrderDiscountValue
		{
			get
			{
				return this._serviceOrderDiscountValue;
			}
			set
			{
				if ((this._serviceOrderDiscountValue != value))
				{
					this.OnserviceOrderDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._serviceOrderDiscountValue = value;
					this.SendPropertyChanged("serviceOrderDiscountValue");
					this.OnserviceOrderDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giftCardDiscountValue", DbType="Float NOT NULL")]
		public double giftCardDiscountValue
		{
			get
			{
				return this._giftCardDiscountValue;
			}
			set
			{
				if ((this._giftCardDiscountValue != value))
				{
					this.OngiftCardDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._giftCardDiscountValue = value;
					this.SendPropertyChanged("giftCardDiscountValue");
					this.OngiftCardDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDiscountValue", DbType="Float NOT NULL")]
		public double totalDiscountValue
		{
			get
			{
				return this._totalDiscountValue;
			}
			set
			{
				if ((this._totalDiscountValue != value))
				{
					this.OntotalDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._totalDiscountValue = value;
					this.SendPropertyChanged("totalDiscountValue");
					this.OntotalDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPriceWithTotalDiscount", DbType="Float NOT NULL")]
		public double totalPriceWithTotalDiscount
		{
			get
			{
				return this._totalPriceWithTotalDiscount;
			}
			set
			{
				if ((this._totalPriceWithTotalDiscount != value))
				{
					this.OntotalPriceWithTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._totalPriceWithTotalDiscount = value;
					this.SendPropertyChanged("totalPriceWithTotalDiscount");
					this.OntotalPriceWithTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPrice", DbType="Float NOT NULL")]
		public double totalPrice
		{
			get
			{
				return this._totalPrice;
			}
			set
			{
				if ((this._totalPrice != value))
				{
					this.OntotalPriceChanging(value);
					this.SendPropertyChanging();
					this._totalPrice = value;
					this.SendPropertyChanged("totalPrice");
					this.OntotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finalPrice", DbType="Float NOT NULL")]
		public double finalPrice
		{
			get
			{
				return this._finalPrice;
			}
			set
			{
				if ((this._finalPrice != value))
				{
					this.OnfinalPriceChanging(value);
					this.SendPropertyChanging();
					this._finalPrice = value;
					this.SendPropertyChanged("finalPrice");
					this.OnfinalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exraTotalPrice", DbType="Float NOT NULL")]
		public double exraTotalPrice
		{
			get
			{
				return this._exraTotalPrice;
			}
			set
			{
				if ((this._exraTotalPrice != value))
				{
					this.OnexraTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._exraTotalPrice = value;
					this.SendPropertyChanged("exraTotalPrice");
					this.OnexraTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carId", DbType="BigInt NOT NULL")]
		public long carId
		{
			get
			{
				return this._carId;
			}
			set
			{
				if ((this._carId != value))
				{
					if (this._CarTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncarIdChanging(value);
					this.SendPropertyChanging();
					this._carId = value;
					this.SendPropertyChanged("carId");
					this.OncarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_GiftCardId", DbType="BigInt")]
		public System.Nullable<long> customer_GiftCardId
		{
			get
			{
				return this._customer_GiftCardId;
			}
			set
			{
				if ((this._customer_GiftCardId != value))
				{
					if (this._Customer_GiftCardTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_GiftCardIdChanging(value);
					this.SendPropertyChanging();
					this._customer_GiftCardId = value;
					this.SendPropertyChanged("customer_GiftCardId");
					this.Oncustomer_GiftCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string repairmanName
		{
			get
			{
				return this._repairmanName;
			}
			set
			{
				if ((this._repairmanName != value))
				{
					this.OnrepairmanNameChanging(value);
					this.SendPropertyChanging();
					this._repairmanName = value;
					this.SendPropertyChanged("repairmanName");
					this.OnrepairmanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string repairmanFamily
		{
			get
			{
				return this._repairmanFamily;
			}
			set
			{
				if ((this._repairmanFamily != value))
				{
					this.OnrepairmanFamilyChanging(value);
					this.SendPropertyChanging();
					this._repairmanFamily = value;
					this.SendPropertyChanged("repairmanFamily");
					this.OnrepairmanFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string repairmanMobile
		{
			get
			{
				return this._repairmanMobile;
			}
			set
			{
				if ((this._repairmanMobile != value))
				{
					this.OnrepairmanMobileChanging(value);
					this.SendPropertyChanging();
					this._repairmanMobile = value;
					this.SendPropertyChanged("repairmanMobile");
					this.OnrepairmanMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distributorName", DbType="NVarChar(200)")]
		public string distributorName
		{
			get
			{
				return this._distributorName;
			}
			set
			{
				if ((this._distributorName != value))
				{
					this.OndistributorNameChanging(value);
					this.SendPropertyChanging();
					this._distributorName = value;
					this.SendPropertyChanged("distributorName");
					this.OndistributorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distributorFamily", DbType="NVarChar(200)")]
		public string distributorFamily
		{
			get
			{
				return this._distributorFamily;
			}
			set
			{
				if ((this._distributorFamily != value))
				{
					this.OndistributorFamilyChanging(value);
					this.SendPropertyChanging();
					this._distributorFamily = value;
					this.SendPropertyChanged("distributorFamily");
					this.OndistributorFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distributorMobile", DbType="Char(11)")]
		public string distributorMobile
		{
			get
			{
				return this._distributorMobile;
			}
			set
			{
				if ((this._distributorMobile != value))
				{
					this.OndistributorMobileChanging(value);
					this.SendPropertyChanging();
					this._distributorMobile = value;
					this.SendPropertyChanged("distributorMobile");
					this.OndistributorMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OncustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("customerName");
					this.OncustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerFamily
		{
			get
			{
				return this._customerFamily;
			}
			set
			{
				if ((this._customerFamily != value))
				{
					this.OncustomerFamilyChanging(value);
					this.SendPropertyChanging();
					this._customerFamily = value;
					this.SendPropertyChanged("customerFamily");
					this.OncustomerFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string customerMobile
		{
			get
			{
				return this._customerMobile;
			}
			set
			{
				if ((this._customerMobile != value))
				{
					this.OncustomerMobileChanging(value);
					this.SendPropertyChanging();
					this._customerMobile = value;
					this.SendPropertyChanged("customerMobile");
					this.OncustomerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicePriceTariffDayName", DbType="NVarChar(200)")]
		public string servicePriceTariffDayName
		{
			get
			{
				return this._servicePriceTariffDayName;
			}
			set
			{
				if ((this._servicePriceTariffDayName != value))
				{
					this.OnservicePriceTariffDayNameChanging(value);
					this.SendPropertyChanging();
					this._servicePriceTariffDayName = value;
					this.SendPropertyChanged("servicePriceTariffDayName");
					this.OnservicePriceTariffDayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicePriceTariffPercent", DbType="Float NOT NULL")]
		public double servicePriceTariffPercent
		{
			get
			{
				return this._servicePriceTariffPercent;
			}
			set
			{
				if ((this._servicePriceTariffPercent != value))
				{
					this.OnservicePriceTariffPercentChanging(value);
					this.SendPropertyChanging();
					this._servicePriceTariffPercent = value;
					this.SendPropertyChanged("servicePriceTariffPercent");
					this.OnservicePriceTariffPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicePriceTariffStartTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> servicePriceTariffStartTime
		{
			get
			{
				return this._servicePriceTariffStartTime;
			}
			set
			{
				if ((this._servicePriceTariffStartTime != value))
				{
					this.OnservicePriceTariffStartTimeChanging(value);
					this.SendPropertyChanging();
					this._servicePriceTariffStartTime = value;
					this.SendPropertyChanged("servicePriceTariffStartTime");
					this.OnservicePriceTariffStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicePriceTariffEndTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> servicePriceTariffEndTime
		{
			get
			{
				return this._servicePriceTariffEndTime;
			}
			set
			{
				if ((this._servicePriceTariffEndTime != value))
				{
					this.OnservicePriceTariffEndTimeChanging(value);
					this.SendPropertyChanging();
					this._servicePriceTariffEndTime = value;
					this.SendPropertyChanged("servicePriceTariffEndTime");
					this.OnservicePriceTariffEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moveToCustomerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> moveToCustomerDate
		{
			get
			{
				return this._moveToCustomerDate;
			}
			set
			{
				if ((this._moveToCustomerDate != value))
				{
					this.OnmoveToCustomerDateChanging(value);
					this.SendPropertyChanging();
					this._moveToCustomerDate = value;
					this.SendPropertyChanged("moveToCustomerDate");
					this.OnmoveToCustomerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> processingDate
		{
			get
			{
				return this._processingDate;
			}
			set
			{
				if ((this._processingDate != value))
				{
					this.OnprocessingDateChanging(value);
					this.SendPropertyChanging();
					this._processingDate = value;
					this.SendPropertyChanged("processingDate");
					this.OnprocessingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoneDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DoneDate
		{
			get
			{
				return this._DoneDate;
			}
			set
			{
				if ((this._DoneDate != value))
				{
					this.OnDoneDateChanging(value);
					this.SendPropertyChanging();
					this._DoneDate = value;
					this.SendPropertyChanged("DoneDate");
					this.OnDoneDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelByOperatorDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> cancelByOperatorDate
		{
			get
			{
				return this._cancelByOperatorDate;
			}
			set
			{
				if ((this._cancelByOperatorDate != value))
				{
					this.OncancelByOperatorDateChanging(value);
					this.SendPropertyChanging();
					this._cancelByOperatorDate = value;
					this.SendPropertyChanged("cancelByOperatorDate");
					this.OncancelByOperatorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelByCustomerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> cancelByCustomerDate
		{
			get
			{
				return this._cancelByCustomerDate;
			}
			set
			{
				if ((this._cancelByCustomerDate != value))
				{
					this.OncancelByCustomerDateChanging(value);
					this.SendPropertyChanging();
					this._cancelByCustomerDate = value;
					this.SendPropertyChanged("cancelByCustomerDate");
					this.OncancelByCustomerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCode", DbType="Char(6)")]
		public string signCode
		{
			get
			{
				return this._signCode;
			}
			set
			{
				if ((this._signCode != value))
				{
					this.OnsignCodeChanging(value);
					this.SendPropertyChanging();
					this._signCode = value;
					this.SendPropertyChanged("signCode");
					this.OnsignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCodeRegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> signCodeRegDate
		{
			get
			{
				return this._signCodeRegDate;
			}
			set
			{
				if ((this._signCodeRegDate != value))
				{
					this.OnsignCodeRegDateChanging(value);
					this.SendPropertyChanging();
					this._signCodeRegDate = value;
					this.SendPropertyChanged("signCodeRegDate");
					this.OnsignCodeRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCodeRerty", DbType="TinyInt")]
		public System.Nullable<byte> signCodeRerty
		{
			get
			{
				return this._signCodeRerty;
			}
			set
			{
				if ((this._signCodeRerty != value))
				{
					this.OnsignCodeRertyChanging(value);
					this.SendPropertyChanging();
					this._signCodeRerty = value;
					this.SendPropertyChanged("signCodeRerty");
					this.OnsignCodeRertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_CustomerPendingRateTbl", Storage="_CustomerPendingRateTbls", ThisKey="ID", OtherKey="serviceOrderId")]
		public EntitySet<CustomerPendingRateTbl> CustomerPendingRateTbls
		{
			get
			{
				return this._CustomerPendingRateTbls;
			}
			set
			{
				this._CustomerPendingRateTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_CustomerRateTbl", Storage="_CustomerRateTbls", ThisKey="ID", OtherKey="serviceOrderId")]
		public EntitySet<CustomerRateTbl> CustomerRateTbls
		{
			get
			{
				return this._CustomerRateTbls;
			}
			set
			{
				this._CustomerRateTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_CustomerWalletTbl", Storage="_CustomerWalletTbls", ThisKey="ID", OtherKey="serviceOrderId")]
		public EntitySet<CustomerWalletTbl> CustomerWalletTbls
		{
			get
			{
				return this._CustomerWalletTbls;
			}
			set
			{
				this._CustomerWalletTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_DistributorCancelerLogTbl", Storage="_DistributorCancelerLogTbls", ThisKey="ID", OtherKey="serviceOrderId")]
		public EntitySet<DistributorCancelerLogTbl> DistributorCancelerLogTbls
		{
			get
			{
				return this._DistributorCancelerLogTbls;
			}
			set
			{
				this._DistributorCancelerLogTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_RepairmanCancelerLogTbl", Storage="_RepairmanCancelerLogTbls", ThisKey="ID", OtherKey="serviceOrderId")]
		public EntitySet<RepairmanCancelerLogTbl> RepairmanCancelerLogTbls
		{
			get
			{
				return this._RepairmanCancelerLogTbls;
			}
			set
			{
				this._RepairmanCancelerLogTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_RepairmanCancelingOrderTbl", Storage="_RepairmanCancelingOrderTbls", ThisKey="ID", OtherKey="serviceOrderId")]
		public EntitySet<RepairmanCancelingOrderTbl> RepairmanCancelingOrderTbls
		{
			get
			{
				return this._RepairmanCancelingOrderTbls;
			}
			set
			{
				this._RepairmanCancelingOrderTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_ServiceOrderLatencyTbl", Storage="_ServiceOrderLatencyTbls", ThisKey="ID", OtherKey="serviceOrderId")]
		public EntitySet<ServiceOrderLatencyTbl> ServiceOrderLatencyTbls
		{
			get
			{
				return this._ServiceOrderLatencyTbls;
			}
			set
			{
				this._ServiceOrderLatencyTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_ServiceOrderProductDetailTbl", Storage="_ServiceOrderProductDetailTbls", ThisKey="ID", OtherKey="serviceOrderId")]
		public EntitySet<ServiceOrderProductDetailTbl> ServiceOrderProductDetailTbls
		{
			get
			{
				return this._ServiceOrderProductDetailTbls;
			}
			set
			{
				this._ServiceOrderProductDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceOrderTbl_ServiceOrderServiceDetailTbl", Storage="_ServiceOrderServiceDetailTbls", ThisKey="ID", OtherKey="serviceOrderID")]
		public EntitySet<ServiceOrderServiceDetailTbl> ServiceOrderServiceDetailTbls
		{
			get
			{
				return this._ServiceOrderServiceDetailTbls;
			}
			set
			{
				this._ServiceOrderServiceDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarTbl_ServiceOrderTbl", Storage="_CarTbl", ThisKey="carId", OtherKey="ID", IsForeignKey=true)]
		public CarTbl CarTbl
		{
			get
			{
				return this._CarTbl.Entity;
			}
			set
			{
				CarTbl previousValue = this._CarTbl.Entity;
				if (((previousValue != value) 
							|| (this._CarTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarTbl.Entity = null;
						previousValue.ServiceOrderTbls.Remove(this);
					}
					this._CarTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderTbls.Add(this);
						this._carId = value.ID;
					}
					else
					{
						this._carId = default(long);
					}
					this.SendPropertyChanged("CarTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_GiftCardTbl_ServiceOrderTbl", Storage="_Customer_GiftCardTbl", ThisKey="customer_GiftCardId", OtherKey="ID", IsForeignKey=true)]
		public Customer_GiftCardTbl Customer_GiftCardTbl
		{
			get
			{
				return this._Customer_GiftCardTbl.Entity;
			}
			set
			{
				Customer_GiftCardTbl previousValue = this._Customer_GiftCardTbl.Entity;
				if (((previousValue != value) 
							|| (this._Customer_GiftCardTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_GiftCardTbl.Entity = null;
						previousValue.ServiceOrderTbls.Remove(this);
					}
					this._Customer_GiftCardTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderTbls.Add(this);
						this._customer_GiftCardId = value.ID;
					}
					else
					{
						this._customer_GiftCardId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Customer_GiftCardTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_ServiceOrderTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.ServiceOrderTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageTbl_ServiceOrderTbl", Storage="_PackageTbl", ThisKey="packageId", OtherKey="ID", IsForeignKey=true)]
		public PackageTbl PackageTbl
		{
			get
			{
				return this._PackageTbl.Entity;
			}
			set
			{
				PackageTbl previousValue = this._PackageTbl.Entity;
				if (((previousValue != value) 
							|| (this._PackageTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageTbl.Entity = null;
						previousValue.ServiceOrderTbls.Remove(this);
					}
					this._PackageTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderTbls.Add(this);
						this._packageId = value.ID;
					}
					else
					{
						this._packageId = default(long);
					}
					this.SendPropertyChanged("PackageTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ServiceOrderTbl", Storage="_UserTbl", ThisKey="distributorId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.ServiceOrderTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderTbls.Add(this);
						this._distributorId = value.ID;
					}
					else
					{
						this._distributorId = default(Nullable<long>);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ServiceOrderTbl1", Storage="_UserTbl1", ThisKey="repairmanId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl1
		{
			get
			{
				return this._UserTbl1.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl1.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl1.Entity = null;
						previousValue.ServiceOrderTbls1.Remove(this);
					}
					this._UserTbl1.Entity = value;
					if ((value != null))
					{
						value.ServiceOrderTbls1.Add(this);
						this._repairmanId = value.ID;
					}
					else
					{
						this._repairmanId = default(long);
					}
					this.SendPropertyChanged("UserTbl1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerPendingRateTbls(CustomerPendingRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_CustomerPendingRateTbls(CustomerPendingRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
		
		private void attach_CustomerRateTbls(CustomerRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_CustomerRateTbls(CustomerRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
		
		private void attach_CustomerWalletTbls(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_CustomerWalletTbls(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
		
		private void attach_DistributorCancelerLogTbls(DistributorCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_DistributorCancelerLogTbls(DistributorCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
		
		private void attach_RepairmanCancelerLogTbls(RepairmanCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_RepairmanCancelerLogTbls(RepairmanCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
		
		private void attach_RepairmanCancelingOrderTbls(RepairmanCancelingOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_RepairmanCancelingOrderTbls(RepairmanCancelingOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
		
		private void attach_ServiceOrderLatencyTbls(ServiceOrderLatencyTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_ServiceOrderLatencyTbls(ServiceOrderLatencyTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
		
		private void attach_ServiceOrderProductDetailTbls(ServiceOrderProductDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_ServiceOrderProductDetailTbls(ServiceOrderProductDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
		
		private void attach_ServiceOrderServiceDetailTbls(ServiceOrderServiceDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = this;
		}
		
		private void detach_ServiceOrderServiceDetailTbls(ServiceOrderServiceDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceOrderTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServicePriceTariffTbl")]
	public partial class ServicePriceTariffTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _dayId;
		
		private System.TimeSpan _startTime;
		
		private System.TimeSpan _endTime;
		
		private double _percent;
		
		private byte _status;
		
		private EntityRef<DayTbl> _DayTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OndayIdChanging(long value);
    partial void OndayIdChanged();
    partial void OnstartTimeChanging(System.TimeSpan value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.TimeSpan value);
    partial void OnendTimeChanged();
    partial void OnpercentChanging(double value);
    partial void OnpercentChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ServicePriceTariffTbl()
		{
			this._DayTbl = default(EntityRef<DayTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayId", DbType="BigInt NOT NULL")]
		public long dayId
		{
			get
			{
				return this._dayId;
			}
			set
			{
				if ((this._dayId != value))
				{
					if (this._DayTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndayIdChanging(value);
					this.SendPropertyChanging();
					this._dayId = value;
					this.SendPropertyChanged("dayId");
					this.OndayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="Time NOT NULL")]
		public System.TimeSpan startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="Time NOT NULL")]
		public System.TimeSpan endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[percent]", Storage="_percent", DbType="Float NOT NULL")]
		public double percent
		{
			get
			{
				return this._percent;
			}
			set
			{
				if ((this._percent != value))
				{
					this.OnpercentChanging(value);
					this.SendPropertyChanging();
					this._percent = value;
					this.SendPropertyChanged("percent");
					this.OnpercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayTbl_ServicePriceTariffTbl", Storage="_DayTbl", ThisKey="dayId", OtherKey="ID", IsForeignKey=true)]
		public DayTbl DayTbl
		{
			get
			{
				return this._DayTbl.Entity;
			}
			set
			{
				DayTbl previousValue = this._DayTbl.Entity;
				if (((previousValue != value) 
							|| (this._DayTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayTbl.Entity = null;
						previousValue.ServicePriceTariffTbls.Remove(this);
					}
					this._DayTbl.Entity = value;
					if ((value != null))
					{
						value.ServicePriceTariffTbls.Add(this);
						this._dayId = value.ID;
					}
					else
					{
						this._dayId = default(long);
					}
					this.SendPropertyChanged("DayTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceTbl")]
	public partial class ServiceTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _description;
		
		private bool _isSubService;
		
		private int _executionTime;
		
		private string _image;
		
		private byte _status;
		
		private string _periodMessageText;
		
		private EntitySet<PackageServiceTbl> _PackageServiceTbls;
		
		private EntitySet<PeriodTbl> _PeriodTbls;
		
		private EntitySet<Service_CarTypeTbl> _Service_CarTypeTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisSubServiceChanging(bool value);
    partial void OnisSubServiceChanged();
    partial void OnexecutionTimeChanging(int value);
    partial void OnexecutionTimeChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnperiodMessageTextChanging(string value);
    partial void OnperiodMessageTextChanged();
    #endregion
		
		public ServiceTbl()
		{
			this._PackageServiceTbls = new EntitySet<PackageServiceTbl>(new Action<PackageServiceTbl>(this.attach_PackageServiceTbls), new Action<PackageServiceTbl>(this.detach_PackageServiceTbls));
			this._PeriodTbls = new EntitySet<PeriodTbl>(new Action<PeriodTbl>(this.attach_PeriodTbls), new Action<PeriodTbl>(this.detach_PeriodTbls));
			this._Service_CarTypeTbls = new EntitySet<Service_CarTypeTbl>(new Action<Service_CarTypeTbl>(this.attach_Service_CarTypeTbls), new Action<Service_CarTypeTbl>(this.detach_Service_CarTypeTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSubService", DbType="Bit NOT NULL")]
		public bool isSubService
		{
			get
			{
				return this._isSubService;
			}
			set
			{
				if ((this._isSubService != value))
				{
					this.OnisSubServiceChanging(value);
					this.SendPropertyChanging();
					this._isSubService = value;
					this.SendPropertyChanged("isSubService");
					this.OnisSubServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_executionTime", DbType="Int NOT NULL")]
		public int executionTime
		{
			get
			{
				return this._executionTime;
			}
			set
			{
				if ((this._executionTime != value))
				{
					this.OnexecutionTimeChanging(value);
					this.SendPropertyChanging();
					this._executionTime = value;
					this.SendPropertyChanged("executionTime");
					this.OnexecutionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_periodMessageText", DbType="NVarChar(200)")]
		public string periodMessageText
		{
			get
			{
				return this._periodMessageText;
			}
			set
			{
				if ((this._periodMessageText != value))
				{
					this.OnperiodMessageTextChanging(value);
					this.SendPropertyChanging();
					this._periodMessageText = value;
					this.SendPropertyChanged("periodMessageText");
					this.OnperiodMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceTbl_PackageServiceTbl", Storage="_PackageServiceTbls", ThisKey="ID", OtherKey="serviceID")]
		public EntitySet<PackageServiceTbl> PackageServiceTbls
		{
			get
			{
				return this._PackageServiceTbls;
			}
			set
			{
				this._PackageServiceTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceTbl_PeriodTbl", Storage="_PeriodTbls", ThisKey="ID", OtherKey="serviceId")]
		public EntitySet<PeriodTbl> PeriodTbls
		{
			get
			{
				return this._PeriodTbls;
			}
			set
			{
				this._PeriodTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceTbl_Service_CarTypeTbl", Storage="_Service_CarTypeTbls", ThisKey="ID", OtherKey="serviceId")]
		public EntitySet<Service_CarTypeTbl> Service_CarTypeTbls
		{
			get
			{
				return this._Service_CarTypeTbls;
			}
			set
			{
				this._Service_CarTypeTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageServiceTbls(PackageServiceTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceTbl = this;
		}
		
		private void detach_PackageServiceTbls(PackageServiceTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceTbl = null;
		}
		
		private void attach_PeriodTbls(PeriodTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceTbl = this;
		}
		
		private void detach_PeriodTbls(PeriodTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceTbl = null;
		}
		
		private void attach_Service_CarTypeTbls(Service_CarTypeTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceTbl = this;
		}
		
		private void detach_Service_CarTypeTbls(Service_CarTypeTbl entity)
		{
			this.SendPropertyChanging();
			entity.ServiceTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceTimeTariffTbl")]
	public partial class ServiceTimeTariffTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _dayId;
		
		private System.TimeSpan _startTime;
		
		private System.TimeSpan _endTime;
		
		private double _percent;
		
		private EntityRef<DayTbl> _DayTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OndayIdChanging(long value);
    partial void OndayIdChanged();
    partial void OnstartTimeChanging(System.TimeSpan value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.TimeSpan value);
    partial void OnendTimeChanged();
    partial void OnpercentChanging(double value);
    partial void OnpercentChanged();
    #endregion
		
		public ServiceTimeTariffTbl()
		{
			this._DayTbl = default(EntityRef<DayTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dayId", DbType="BigInt NOT NULL")]
		public long dayId
		{
			get
			{
				return this._dayId;
			}
			set
			{
				if ((this._dayId != value))
				{
					if (this._DayTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndayIdChanging(value);
					this.SendPropertyChanging();
					this._dayId = value;
					this.SendPropertyChanged("dayId");
					this.OndayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="Time NOT NULL")]
		public System.TimeSpan startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="Time NOT NULL")]
		public System.TimeSpan endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[percent]", Storage="_percent", DbType="Float NOT NULL")]
		public double percent
		{
			get
			{
				return this._percent;
			}
			set
			{
				if ((this._percent != value))
				{
					this.OnpercentChanging(value);
					this.SendPropertyChanging();
					this._percent = value;
					this.SendPropertyChanged("percent");
					this.OnpercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayTbl_ServiceTimeTariffTbl", Storage="_DayTbl", ThisKey="dayId", OtherKey="ID", IsForeignKey=true)]
		public DayTbl DayTbl
		{
			get
			{
				return this._DayTbl.Entity;
			}
			set
			{
				DayTbl previousValue = this._DayTbl.Entity;
				if (((previousValue != value) 
							|| (this._DayTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayTbl.Entity = null;
						previousValue.ServiceTimeTariffTbls.Remove(this);
					}
					this._DayTbl.Entity = value;
					if ((value != null))
					{
						value.ServiceTimeTariffTbls.Add(this);
						this._dayId = value.ID;
					}
					else
					{
						this._dayId = default(long);
					}
					this.SendPropertyChanged("DayTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SettingTbl")]
	public partial class SettingTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _value;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public SettingTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopOrderDetailProductFieldsTbl")]
	public partial class ShopOrderDetailProductFieldsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _shopOrderDetailId;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<ShopOrderDetailTbl> _ShopOrderDetailTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnshopOrderDetailIdChanging(long value);
    partial void OnshopOrderDetailIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public ShopOrderDetailProductFieldsTbl()
		{
			this._ShopOrderDetailTbl = default(EntityRef<ShopOrderDetailTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopOrderDetailId", DbType="BigInt NOT NULL")]
		public long shopOrderDetailId
		{
			get
			{
				return this._shopOrderDetailId;
			}
			set
			{
				if ((this._shopOrderDetailId != value))
				{
					if (this._ShopOrderDetailTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopOrderDetailIdChanging(value);
					this.SendPropertyChanging();
					this._shopOrderDetailId = value;
					this.SendPropertyChanged("shopOrderDetailId");
					this.OnshopOrderDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopOrderDetailTbl_ShopOrderDetailProductFieldsTbl", Storage="_ShopOrderDetailTbl", ThisKey="shopOrderDetailId", OtherKey="ID", IsForeignKey=true)]
		public ShopOrderDetailTbl ShopOrderDetailTbl
		{
			get
			{
				return this._ShopOrderDetailTbl.Entity;
			}
			set
			{
				ShopOrderDetailTbl previousValue = this._ShopOrderDetailTbl.Entity;
				if (((previousValue != value) 
							|| (this._ShopOrderDetailTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopOrderDetailTbl.Entity = null;
						previousValue.ShopOrderDetailProductFieldsTbls.Remove(this);
					}
					this._ShopOrderDetailTbl.Entity = value;
					if ((value != null))
					{
						value.ShopOrderDetailProductFieldsTbls.Add(this);
						this._shopOrderDetailId = value.ID;
					}
					else
					{
						this._shopOrderDetailId = default(long);
					}
					this.SendPropertyChanged("ShopOrderDetailTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopOrderDetailTbl")]
	public partial class ShopOrderDetailTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _shopOrderId;
		
		private long _productId;
		
		private string _productCode;
		
		private double _quantity;
		
		private double _price;
		
		private double _unitPrice;
		
		private string _productName;
		
		private double _productPrice;
		
		private string _productDescription;
		
		private long _productUnitName;
		
		private EntitySet<ShopOrderDetailProductFieldsTbl> _ShopOrderDetailProductFieldsTbls;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
		private EntityRef<ShopOrderTbl> _ShopOrderTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnshopOrderIdChanging(long value);
    partial void OnshopOrderIdChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OnquantityChanging(double value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnunitPriceChanging(double value);
    partial void OnunitPriceChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnproductPriceChanging(double value);
    partial void OnproductPriceChanged();
    partial void OnproductDescriptionChanging(string value);
    partial void OnproductDescriptionChanged();
    partial void OnproductUnitNameChanging(long value);
    partial void OnproductUnitNameChanged();
    #endregion
		
		public ShopOrderDetailTbl()
		{
			this._ShopOrderDetailProductFieldsTbls = new EntitySet<ShopOrderDetailProductFieldsTbl>(new Action<ShopOrderDetailProductFieldsTbl>(this.attach_ShopOrderDetailProductFieldsTbls), new Action<ShopOrderDetailProductFieldsTbl>(this.detach_ShopOrderDetailProductFieldsTbls));
			this._ProductTbl = default(EntityRef<ProductTbl>);
			this._ShopOrderTbl = default(EntityRef<ShopOrderTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopOrderId", DbType="BigInt NOT NULL")]
		public long shopOrderId
		{
			get
			{
				return this._shopOrderId;
			}
			set
			{
				if ((this._shopOrderId != value))
				{
					if (this._ShopOrderTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopOrderIdChanging(value);
					this.SendPropertyChanging();
					this._shopOrderId = value;
					this.SendPropertyChanged("shopOrderId");
					this.OnshopOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Float NOT NULL")]
		public double quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Float NOT NULL")]
		public double unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Float NOT NULL")]
		public double productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string productDescription
		{
			get
			{
				return this._productDescription;
			}
			set
			{
				if ((this._productDescription != value))
				{
					this.OnproductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._productDescription = value;
					this.SendPropertyChanged("productDescription");
					this.OnproductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productUnitName", DbType="BigInt NOT NULL")]
		public long productUnitName
		{
			get
			{
				return this._productUnitName;
			}
			set
			{
				if ((this._productUnitName != value))
				{
					this.OnproductUnitNameChanging(value);
					this.SendPropertyChanging();
					this._productUnitName = value;
					this.SendPropertyChanged("productUnitName");
					this.OnproductUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopOrderDetailTbl_ShopOrderDetailProductFieldsTbl", Storage="_ShopOrderDetailProductFieldsTbls", ThisKey="ID", OtherKey="shopOrderDetailId")]
		public EntitySet<ShopOrderDetailProductFieldsTbl> ShopOrderDetailProductFieldsTbls
		{
			get
			{
				return this._ShopOrderDetailProductFieldsTbls;
			}
			set
			{
				this._ShopOrderDetailProductFieldsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ShopOrderDetailTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ShopOrderDetailTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ShopOrderDetailTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopOrderTbl_ShopOrderDetailTbl", Storage="_ShopOrderTbl", ThisKey="shopOrderId", OtherKey="ID", IsForeignKey=true)]
		public ShopOrderTbl ShopOrderTbl
		{
			get
			{
				return this._ShopOrderTbl.Entity;
			}
			set
			{
				ShopOrderTbl previousValue = this._ShopOrderTbl.Entity;
				if (((previousValue != value) 
							|| (this._ShopOrderTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopOrderTbl.Entity = null;
						previousValue.ShopOrderDetailTbls.Remove(this);
					}
					this._ShopOrderTbl.Entity = value;
					if ((value != null))
					{
						value.ShopOrderDetailTbls.Add(this);
						this._shopOrderId = value.ID;
					}
					else
					{
						this._shopOrderId = default(long);
					}
					this.SendPropertyChanged("ShopOrderTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopOrderDetailProductFieldsTbls(ShopOrderDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ShopOrderDetailTbl = this;
		}
		
		private void detach_ShopOrderDetailProductFieldsTbls(ShopOrderDetailProductFieldsTbl entity)
		{
			this.SendPropertyChanging();
			entity.ShopOrderDetailTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopOrderDiscountTbl")]
	public partial class ShopOrderDiscountTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private double _maxPrice;
		
		private bool _isPercent;
		
		private double _value;
		
		private System.DateTime _startTime;
		
		private double _minPrice;
		
		private System.DateTime _endTime;
		
		private byte _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmaxPriceChanging(double value);
    partial void OnmaxPriceChanged();
    partial void OnisPercentChanging(bool value);
    partial void OnisPercentChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnminPriceChanging(double value);
    partial void OnminPriceChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public ShopOrderDiscountTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxPrice", DbType="Float NOT NULL")]
		public double maxPrice
		{
			get
			{
				return this._maxPrice;
			}
			set
			{
				if ((this._maxPrice != value))
				{
					this.OnmaxPriceChanging(value);
					this.SendPropertyChanging();
					this._maxPrice = value;
					this.SendPropertyChanged("maxPrice");
					this.OnmaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPercent", DbType="Bit NOT NULL")]
		public bool isPercent
		{
			get
			{
				return this._isPercent;
			}
			set
			{
				if ((this._isPercent != value))
				{
					this.OnisPercentChanging(value);
					this.SendPropertyChanging();
					this._isPercent = value;
					this.SendPropertyChanged("isPercent");
					this.OnisPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minPrice", DbType="Float NOT NULL")]
		public double minPrice
		{
			get
			{
				return this._minPrice;
			}
			set
			{
				if ((this._minPrice != value))
				{
					this.OnminPriceChanging(value);
					this.SendPropertyChanging();
					this._minPrice = value;
					this.SendPropertyChanged("minPrice");
					this.OnminPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopOrderTbl")]
	public partial class ShopOrderTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private System.DateTime _date;
		
		private long _refId;
		
		private string _customerName;
		
		private string _customerFamily;
		
		private string _customerMobile;
		
		private EntitySet<CustomerWalletTbl> _CustomerWalletTbls;
		
		private EntitySet<ShopOrderDetailTbl> _ShopOrderDetailTbls;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnrefIdChanging(long value);
    partial void OnrefIdChanged();
    partial void OncustomerNameChanging(string value);
    partial void OncustomerNameChanged();
    partial void OncustomerFamilyChanging(string value);
    partial void OncustomerFamilyChanged();
    partial void OncustomerMobileChanging(string value);
    partial void OncustomerMobileChanged();
    #endregion
		
		public ShopOrderTbl()
		{
			this._CustomerWalletTbls = new EntitySet<CustomerWalletTbl>(new Action<CustomerWalletTbl>(this.attach_CustomerWalletTbls), new Action<CustomerWalletTbl>(this.detach_CustomerWalletTbls));
			this._ShopOrderDetailTbls = new EntitySet<ShopOrderDetailTbl>(new Action<ShopOrderDetailTbl>(this.attach_ShopOrderDetailTbls), new Action<ShopOrderDetailTbl>(this.detach_ShopOrderDetailTbls));
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refId", DbType="BigInt NOT NULL")]
		public long refId
		{
			get
			{
				return this._refId;
			}
			set
			{
				if ((this._refId != value))
				{
					this.OnrefIdChanging(value);
					this.SendPropertyChanging();
					this._refId = value;
					this.SendPropertyChanged("refId");
					this.OnrefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OncustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("customerName");
					this.OncustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerFamily
		{
			get
			{
				return this._customerFamily;
			}
			set
			{
				if ((this._customerFamily != value))
				{
					this.OncustomerFamilyChanging(value);
					this.SendPropertyChanging();
					this._customerFamily = value;
					this.SendPropertyChanged("customerFamily");
					this.OncustomerFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string customerMobile
		{
			get
			{
				return this._customerMobile;
			}
			set
			{
				if ((this._customerMobile != value))
				{
					this.OncustomerMobileChanging(value);
					this.SendPropertyChanging();
					this._customerMobile = value;
					this.SendPropertyChanged("customerMobile");
					this.OncustomerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopOrderTbl_CustomerWalletTbl", Storage="_CustomerWalletTbls", ThisKey="ID", OtherKey="shopOrderId")]
		public EntitySet<CustomerWalletTbl> CustomerWalletTbls
		{
			get
			{
				return this._CustomerWalletTbls;
			}
			set
			{
				this._CustomerWalletTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopOrderTbl_ShopOrderDetailTbl", Storage="_ShopOrderDetailTbls", ThisKey="ID", OtherKey="shopOrderId")]
		public EntitySet<ShopOrderDetailTbl> ShopOrderDetailTbls
		{
			get
			{
				return this._ShopOrderDetailTbls;
			}
			set
			{
				this._ShopOrderDetailTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_ShopOrderTbl", Storage="_CustomerTbl", ThisKey="customerId", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.ShopOrderTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.ShopOrderTbls.Add(this);
						this._customerId = value.ID;
					}
					else
					{
						this._customerId = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerWalletTbls(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.ShopOrderTbl = this;
		}
		
		private void detach_CustomerWalletTbls(CustomerWalletTbl entity)
		{
			this.SendPropertyChanging();
			entity.ShopOrderTbl = null;
		}
		
		private void attach_ShopOrderDetailTbls(ShopOrderDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ShopOrderTbl = this;
		}
		
		private void detach_ShopOrderDetailTbls(ShopOrderDetailTbl entity)
		{
			this.SendPropertyChanging();
			entity.ShopOrderTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopProductCommentTbl")]
	public partial class ShopProductCommentTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerId;
		
		private long _productId;
		
		private string _productCode;
		
		private string _text;
		
		private byte _rate;
		
		private EntityRef<ProductTbl> _ProductTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIdChanging(long value);
    partial void OncustomerIdChanged();
    partial void OnproductIdChanging(long value);
    partial void OnproductIdChanged();
    partial void OnproductCodeChanging(string value);
    partial void OnproductCodeChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnrateChanging(byte value);
    partial void OnrateChanged();
    #endregion
		
		public ShopProductCommentTbl()
		{
			this._ProductTbl = default(EntityRef<ProductTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="BigInt NOT NULL")]
		public long customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="BigInt NOT NULL")]
		public long productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string productCode
		{
			get
			{
				return this._productCode;
			}
			set
			{
				if ((this._productCode != value))
				{
					this.OnproductCodeChanging(value);
					this.SendPropertyChanging();
					this._productCode = value;
					this.SendPropertyChanged("productCode");
					this.OnproductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate", DbType="TinyInt NOT NULL")]
		public byte rate
		{
			get
			{
				return this._rate;
			}
			set
			{
				if ((this._rate != value))
				{
					this.OnrateChanging(value);
					this.SendPropertyChanging();
					this._rate = value;
					this.SendPropertyChanged("rate");
					this.OnrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTbl_ShopProductCommentTbl", Storage="_ProductTbl", ThisKey="productId", OtherKey="ID", IsForeignKey=true)]
		public ProductTbl ProductTbl
		{
			get
			{
				return this._ProductTbl.Entity;
			}
			set
			{
				ProductTbl previousValue = this._ProductTbl.Entity;
				if (((previousValue != value) 
							|| (this._ProductTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTbl.Entity = null;
						previousValue.ShopProductCommentTbls.Remove(this);
					}
					this._ProductTbl.Entity = value;
					if ((value != null))
					{
						value.ShopProductCommentTbls.Add(this);
						this._productId = value.ID;
					}
					else
					{
						this._productId = default(long);
					}
					this.SendPropertyChanged("ProductTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecificationOptionTbl")]
	public partial class SpecificationOptionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _specificationId;
		
		private string _name;
		
		private int _displayOrder;
		
		private EntitySet<Product_SpecificationOptionTbl> _Product_SpecificationOptionTbls;
		
		private EntityRef<SpecificationTbl> _SpecificationTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnspecificationIdChanging(long value);
    partial void OnspecificationIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndisplayOrderChanging(int value);
    partial void OndisplayOrderChanged();
    #endregion
		
		public SpecificationOptionTbl()
		{
			this._Product_SpecificationOptionTbls = new EntitySet<Product_SpecificationOptionTbl>(new Action<Product_SpecificationOptionTbl>(this.attach_Product_SpecificationOptionTbls), new Action<Product_SpecificationOptionTbl>(this.detach_Product_SpecificationOptionTbls));
			this._SpecificationTbl = default(EntityRef<SpecificationTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specificationId", DbType="BigInt NOT NULL")]
		public long specificationId
		{
			get
			{
				return this._specificationId;
			}
			set
			{
				if ((this._specificationId != value))
				{
					if (this._SpecificationTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspecificationIdChanging(value);
					this.SendPropertyChanging();
					this._specificationId = value;
					this.SendPropertyChanged("specificationId");
					this.OnspecificationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayOrder", DbType="Int NOT NULL")]
		public int displayOrder
		{
			get
			{
				return this._displayOrder;
			}
			set
			{
				if ((this._displayOrder != value))
				{
					this.OndisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._displayOrder = value;
					this.SendPropertyChanged("displayOrder");
					this.OndisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificationOptionTbl_Product_SpecificationOptionTbl", Storage="_Product_SpecificationOptionTbls", ThisKey="ID", OtherKey="specificationOptionId")]
		public EntitySet<Product_SpecificationOptionTbl> Product_SpecificationOptionTbls
		{
			get
			{
				return this._Product_SpecificationOptionTbls;
			}
			set
			{
				this._Product_SpecificationOptionTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificationTbl_SpecificationOptionTbl", Storage="_SpecificationTbl", ThisKey="specificationId", OtherKey="ID", IsForeignKey=true)]
		public SpecificationTbl SpecificationTbl
		{
			get
			{
				return this._SpecificationTbl.Entity;
			}
			set
			{
				SpecificationTbl previousValue = this._SpecificationTbl.Entity;
				if (((previousValue != value) 
							|| (this._SpecificationTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecificationTbl.Entity = null;
						previousValue.SpecificationOptionTbls.Remove(this);
					}
					this._SpecificationTbl.Entity = value;
					if ((value != null))
					{
						value.SpecificationOptionTbls.Add(this);
						this._specificationId = value.ID;
					}
					else
					{
						this._specificationId = default(long);
					}
					this.SendPropertyChanged("SpecificationTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_SpecificationOptionTbls(Product_SpecificationOptionTbl entity)
		{
			this.SendPropertyChanging();
			entity.SpecificationOptionTbl = this;
		}
		
		private void detach_Product_SpecificationOptionTbls(Product_SpecificationOptionTbl entity)
		{
			this.SendPropertyChanging();
			entity.SpecificationOptionTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecificationTbl")]
	public partial class SpecificationTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private int _displayOrder;
		
		private bool _isCombo;
		
		private bool _isList;
		
		private bool _isCheckList;
		
		private EntitySet<SpecificationOptionTbl> _SpecificationOptionTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndisplayOrderChanging(int value);
    partial void OndisplayOrderChanged();
    partial void OnisComboChanging(bool value);
    partial void OnisComboChanged();
    partial void OnisListChanging(bool value);
    partial void OnisListChanged();
    partial void OnisCheckListChanging(bool value);
    partial void OnisCheckListChanged();
    #endregion
		
		public SpecificationTbl()
		{
			this._SpecificationOptionTbls = new EntitySet<SpecificationOptionTbl>(new Action<SpecificationOptionTbl>(this.attach_SpecificationOptionTbls), new Action<SpecificationOptionTbl>(this.detach_SpecificationOptionTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayOrder", DbType="Int NOT NULL")]
		public int displayOrder
		{
			get
			{
				return this._displayOrder;
			}
			set
			{
				if ((this._displayOrder != value))
				{
					this.OndisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._displayOrder = value;
					this.SendPropertyChanged("displayOrder");
					this.OndisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCombo", DbType="Bit NOT NULL")]
		public bool isCombo
		{
			get
			{
				return this._isCombo;
			}
			set
			{
				if ((this._isCombo != value))
				{
					this.OnisComboChanging(value);
					this.SendPropertyChanging();
					this._isCombo = value;
					this.SendPropertyChanged("isCombo");
					this.OnisComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isList", DbType="Bit NOT NULL")]
		public bool isList
		{
			get
			{
				return this._isList;
			}
			set
			{
				if ((this._isList != value))
				{
					this.OnisListChanging(value);
					this.SendPropertyChanging();
					this._isList = value;
					this.SendPropertyChanged("isList");
					this.OnisListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCheckList", DbType="Bit NOT NULL")]
		public bool isCheckList
		{
			get
			{
				return this._isCheckList;
			}
			set
			{
				if ((this._isCheckList != value))
				{
					this.OnisCheckListChanging(value);
					this.SendPropertyChanging();
					this._isCheckList = value;
					this.SendPropertyChanged("isCheckList");
					this.OnisCheckListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificationTbl_SpecificationOptionTbl", Storage="_SpecificationOptionTbls", ThisKey="ID", OtherKey="specificationId")]
		public EntitySet<SpecificationOptionTbl> SpecificationOptionTbls
		{
			get
			{
				return this._SpecificationOptionTbls;
			}
			set
			{
				this._SpecificationOptionTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpecificationOptionTbls(SpecificationOptionTbl entity)
		{
			this.SendPropertyChanging();
			entity.SpecificationTbl = this;
		}
		
		private void detach_SpecificationOptionTbls(SpecificationOptionTbl entity)
		{
			this.SendPropertyChanging();
			entity.SpecificationTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemMessageTextTbl")]
	public partial class SystemMessageTextTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _value;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public SystemMessageTextTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionTypeTbl")]
	public partial class TransactionTypeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private byte _TransactionId;
		
		private string _TransactinName;
		
		private bool _TransactionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransactionIdChanging(byte value);
    partial void OnTransactionIdChanged();
    partial void OnTransactinNameChanging(string value);
    partial void OnTransactinNameChanged();
    partial void OnTransactionTypeChanging(bool value);
    partial void OnTransactionTypeChanged();
    #endregion
		
		public TransactionTypeTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="TinyInt NOT NULL")]
		public byte TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactinName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransactinName
		{
			get
			{
				return this._TransactinName;
			}
			set
			{
				if ((this._TransactinName != value))
				{
					this.OnTransactinNameChanging(value);
					this.SendPropertyChanging();
					this._TransactinName = value;
					this.SendPropertyChanged("TransactinName");
					this.OnTransactinNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="Bit NOT NULL")]
		public bool TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitTbl")]
	public partial class UnitTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private EntitySet<ProductTbl> _ProductTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public UnitTbl()
		{
			this._ProductTbls = new EntitySet<ProductTbl>(new Action<ProductTbl>(this.attach_ProductTbls), new Action<ProductTbl>(this.detach_ProductTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitTbl_ProductTbl", Storage="_ProductTbls", ThisKey="ID", OtherKey="unitId")]
		public EntitySet<ProductTbl> ProductTbls
		{
			get
			{
				return this._ProductTbls;
			}
			set
			{
				this._ProductTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductTbls(ProductTbl entity)
		{
			this.SendPropertyChanging();
			entity.UnitTbl = this;
		}
		
		private void detach_ProductTbls(ProductTbl entity)
		{
			this.SendPropertyChanging();
			entity.UnitTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_RoleTbl")]
	public partial class User_RoleTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userId;
		
		private System.DateTime _startTime;
		
		private System.DateTime _endTime;
		
		private bool _isActive;
		
		private long _registerUserId;
		
		private long _roleId;
		
		private string _userName;
		
		private string _userFamily;
		
		private string _userMobile;
		
		private string _registerUserName;
		
		private string _registerUserFamily;
		
		private string _registerUserMobile;
		
		private EntityRef<RoleTbl> _RoleTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnregisterUserIdChanging(long value);
    partial void OnregisterUserIdChanged();
    partial void OnroleIdChanging(long value);
    partial void OnroleIdChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserFamilyChanging(string value);
    partial void OnuserFamilyChanged();
    partial void OnuserMobileChanging(string value);
    partial void OnuserMobileChanged();
    partial void OnregisterUserNameChanging(string value);
    partial void OnregisterUserNameChanged();
    partial void OnregisterUserFamilyChanging(string value);
    partial void OnregisterUserFamilyChanged();
    partial void OnregisterUserMobileChanging(string value);
    partial void OnregisterUserMobileChanged();
    #endregion
		
		public User_RoleTbl()
		{
			this._RoleTbl = default(EntityRef<RoleTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserId", DbType="BigInt NOT NULL")]
		public long registerUserId
		{
			get
			{
				return this._registerUserId;
			}
			set
			{
				if ((this._registerUserId != value))
				{
					this.OnregisterUserIdChanging(value);
					this.SendPropertyChanging();
					this._registerUserId = value;
					this.SendPropertyChanged("registerUserId");
					this.OnregisterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="BigInt NOT NULL")]
		public long roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					if (this._RoleTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string userFamily
		{
			get
			{
				return this._userFamily;
			}
			set
			{
				if ((this._userFamily != value))
				{
					this.OnuserFamilyChanging(value);
					this.SendPropertyChanging();
					this._userFamily = value;
					this.SendPropertyChanged("userFamily");
					this.OnuserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string userMobile
		{
			get
			{
				return this._userMobile;
			}
			set
			{
				if ((this._userMobile != value))
				{
					this.OnuserMobileChanging(value);
					this.SendPropertyChanging();
					this._userMobile = value;
					this.SendPropertyChanged("userMobile");
					this.OnuserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string registerUserName
		{
			get
			{
				return this._registerUserName;
			}
			set
			{
				if ((this._registerUserName != value))
				{
					this.OnregisterUserNameChanging(value);
					this.SendPropertyChanging();
					this._registerUserName = value;
					this.SendPropertyChanged("registerUserName");
					this.OnregisterUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string registerUserFamily
		{
			get
			{
				return this._registerUserFamily;
			}
			set
			{
				if ((this._registerUserFamily != value))
				{
					this.OnregisterUserFamilyChanging(value);
					this.SendPropertyChanging();
					this._registerUserFamily = value;
					this.SendPropertyChanged("registerUserFamily");
					this.OnregisterUserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerUserMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string registerUserMobile
		{
			get
			{
				return this._registerUserMobile;
			}
			set
			{
				if ((this._registerUserMobile != value))
				{
					this.OnregisterUserMobileChanging(value);
					this.SendPropertyChanging();
					this._registerUserMobile = value;
					this.SendPropertyChanged("registerUserMobile");
					this.OnregisterUserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleTbl_User_RoleTbl", Storage="_RoleTbl", ThisKey="roleId", OtherKey="ID", IsForeignKey=true)]
		public RoleTbl RoleTbl
		{
			get
			{
				return this._RoleTbl.Entity;
			}
			set
			{
				RoleTbl previousValue = this._RoleTbl.Entity;
				if (((previousValue != value) 
							|| (this._RoleTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleTbl.Entity = null;
						previousValue.User_RoleTbls.Remove(this);
					}
					this._RoleTbl.Entity = value;
					if ((value != null))
					{
						value.User_RoleTbls.Add(this);
						this._roleId = value.ID;
					}
					else
					{
						this._roleId = default(long);
					}
					this.SendPropertyChanged("RoleTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_User_RoleTbl", Storage="_UserTbl", ThisKey="userId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.User_RoleTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.User_RoleTbls.Add(this);
						this._userId = value.ID;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGeoTrackTbl")]
	public partial class UserGeoTrackTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userId;
		
		private double _latitude;
		
		private double _longitude;
		
		private System.DateTime _lastUpdate;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OnlatitudeChanging(double value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(double value);
    partial void OnlongitudeChanged();
    partial void OnlastUpdateChanging(System.DateTime value);
    partial void OnlastUpdateChanged();
    #endregion
		
		public UserGeoTrackTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float NOT NULL")]
		public double latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float NOT NULL")]
		public double longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_UserGeoTrackTbl", Storage="_UserTbl", ThisKey="userId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.UserGeoTrackTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.UserGeoTrackTbls.Add(this);
						this._userId = value.ID;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInactiveTimeTbl")]
	public partial class UserInactiveTimeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userId;
		
		private System.DateTime _date;
		
		private System.TimeSpan _startTime;
		
		private System.TimeSpan _endTime;
		
		private System.DateTime _regDate;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnstartTimeChanging(System.TimeSpan value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.TimeSpan value);
    partial void OnendTimeChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public UserInactiveTimeTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="Time NOT NULL")]
		public System.TimeSpan startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="Time NOT NULL")]
		public System.TimeSpan endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_UserInactiveTimeTbl", Storage="_UserTbl", ThisKey="userId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.UserInactiveTimeTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.UserInactiveTimeTbls.Add(this);
						this._userId = value.ID;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMessageTbl")]
	public partial class UserMessageTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userId;
		
		private string _text;
		
		private bool _isRead;
		
		private System.DateTime _regDate;
		
		private byte _type;
		
		private string _userName;
		
		private string _userFamily;
		
		private string _userMobile;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnisReadChanging(bool value);
    partial void OnisReadChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserFamilyChanging(string value);
    partial void OnuserFamilyChanged();
    partial void OnuserMobileChanging(string value);
    partial void OnuserMobileChanged();
    #endregion
		
		public UserMessageTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRead", DbType="Bit NOT NULL")]
		public bool isRead
		{
			get
			{
				return this._isRead;
			}
			set
			{
				if ((this._isRead != value))
				{
					this.OnisReadChanging(value);
					this.SendPropertyChanging();
					this._isRead = value;
					this.SendPropertyChanged("isRead");
					this.OnisReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userFamily", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string userFamily
		{
			get
			{
				return this._userFamily;
			}
			set
			{
				if ((this._userFamily != value))
				{
					this.OnuserFamilyChanging(value);
					this.SendPropertyChanging();
					this._userFamily = value;
					this.SendPropertyChanged("userFamily");
					this.OnuserFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userMobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string userMobile
		{
			get
			{
				return this._userMobile;
			}
			set
			{
				if ((this._userMobile != value))
				{
					this.OnuserMobileChanging(value);
					this.SendPropertyChanging();
					this._userMobile = value;
					this.SendPropertyChanged("userMobile");
					this.OnuserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_UserMessageTbl", Storage="_UserTbl", ThisKey="userId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.UserMessageTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.UserMessageTbls.Add(this);
						this._userId = value.ID;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userPushTbl")]
	public partial class userPushTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userId;
		
		private string _token;
		
		private System.DateTime _lastUpdate;
		
		private System.DateTime _regDate;
		
		private int _openedCount;
		
		private string _platform;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIdChanging(long value);
    partial void OnuserIdChanged();
    partial void OntokenChanging(string value);
    partial void OntokenChanged();
    partial void OnlastUpdateChanging(System.DateTime value);
    partial void OnlastUpdateChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnopenedCountChanging(int value);
    partial void OnopenedCountChanged();
    partial void OnplatformChanging(string value);
    partial void OnplatformChanged();
    #endregion
		
		public userPushTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="BigInt NOT NULL")]
		public long userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openedCount", DbType="Int NOT NULL")]
		public int openedCount
		{
			get
			{
				return this._openedCount;
			}
			set
			{
				if ((this._openedCount != value))
				{
					this.OnopenedCountChanging(value);
					this.SendPropertyChanging();
					this._openedCount = value;
					this.SendPropertyChanged("openedCount");
					this.OnopenedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_platform", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string platform
		{
			get
			{
				return this._platform;
			}
			set
			{
				if ((this._platform != value))
				{
					this.OnplatformChanging(value);
					this.SendPropertyChanging();
					this._platform = value;
					this.SendPropertyChanged("platform");
					this.OnplatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_userPushTbl", Storage="_UserTbl", ThisKey="userId", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.userPushTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.userPushTbls.Add(this);
						this._userId = value.ID;
					}
					else
					{
						this._userId = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTbl")]
	public partial class UserTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _family;
		
		private string _mobile;
		
		private string _password;
		
		private string _image;
		
		private System.DateTime _lastLoginDate;
		
		private System.DateTime _registerDate;
		
		private bool _isManager;
		
		private bool _isOperator;
		
		private bool _isRepairman;
		
		private bool _isDistributor;
		
		private bool _isWarehouseKeeper;
		
		private string _signCode;
		
		private System.Nullable<System.DateTime> _signCodeRegDate;
		
		private byte _status;
		
		private int _repairmanServiceCount;
		
		private int _repairmanScore;
		
		private EntitySet<AssetTbl> _AssetTbls;
		
		private EntitySet<CarTypeTbl> _CarTypeTbls;
		
		private EntitySet<CustomerPendingRateTbl> _CustomerPendingRateTbls;
		
		private EntitySet<CustomerRateTbl> _CustomerRateTbls;
		
		private EntitySet<DistributorCancelerLogTbl> _DistributorCancelerLogTbls;
		
		private EntitySet<DistributorCancelerLogTbl> _DistributorCancelerLogTbls1;
		
		private EntitySet<DistributorCancelingOrderTbl> _DistributorCancelingOrderTbls;
		
		private EntitySet<DistributorStartLocationTbl> _DistributorStartLocationTbls;
		
		private EntitySet<DistributorTimeSheetTbl> _DistributorTimeSheetTbls;
		
		private EntitySet<DraftTbl> _DraftTbls;
		
		private EntitySet<DraftTbl> _DraftTbls1;
		
		private EntitySet<MBProto_user_sessionTbl> _MBProto_user_sessionTbls;
		
		private EntitySet<ReceiptTbl> _ReceiptTbls;
		
		private EntitySet<ReceiptTbl> _ReceiptTbls1;
		
		private EntitySet<Repairman_AreaTbl> _Repairman_AreaTbls;
		
		private EntitySet<RepairmanCancelerLogTbl> _RepairmanCancelerLogTbls;
		
		private EntitySet<RepairmanCancelerLogTbl> _RepairmanCancelerLogTbls1;
		
		private EntitySet<RepairmanCancelerLogTbl> _RepairmanCancelerLogTbls2;
		
		private EntitySet<RepairmanCancelingOrderTbl> _RepairmanCancelingOrderTbls;
		
		private EntitySet<repairmanRoleDetailsTbl> _repairmanRoleDetailsTbls;
		
		private EntitySet<RepairmanTimeSheet1Tbl> _RepairmanTimeSheet1Tbls;
		
		private EntitySet<ReturnTbl> _ReturnTbls;
		
		private EntitySet<ReturnTbl> _ReturnTbls1;
		
		private EntitySet<ServiceOrderTbl> _ServiceOrderTbls;
		
		private EntitySet<ServiceOrderTbl> _ServiceOrderTbls1;
		
		private EntitySet<User_RoleTbl> _User_RoleTbls;
		
		private EntitySet<UserGeoTrackTbl> _UserGeoTrackTbls;
		
		private EntitySet<UserInactiveTimeTbl> _UserInactiveTimeTbls;
		
		private EntitySet<UserMessageTbl> _UserMessageTbls;
		
		private EntitySet<userPushTbl> _userPushTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfamilyChanging(string value);
    partial void OnfamilyChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnlastLoginDateChanging(System.DateTime value);
    partial void OnlastLoginDateChanged();
    partial void OnregisterDateChanging(System.DateTime value);
    partial void OnregisterDateChanged();
    partial void OnisManagerChanging(bool value);
    partial void OnisManagerChanged();
    partial void OnisOperatorChanging(bool value);
    partial void OnisOperatorChanged();
    partial void OnisRepairmanChanging(bool value);
    partial void OnisRepairmanChanged();
    partial void OnisDistributorChanging(bool value);
    partial void OnisDistributorChanged();
    partial void OnisWarehouseKeeperChanging(bool value);
    partial void OnisWarehouseKeeperChanged();
    partial void OnsignCodeChanging(string value);
    partial void OnsignCodeChanged();
    partial void OnsignCodeRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsignCodeRegDateChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnrepairmanServiceCountChanging(int value);
    partial void OnrepairmanServiceCountChanged();
    partial void OnrepairmanScoreChanging(int value);
    partial void OnrepairmanScoreChanged();
    #endregion
		
		public UserTbl()
		{
			this._AssetTbls = new EntitySet<AssetTbl>(new Action<AssetTbl>(this.attach_AssetTbls), new Action<AssetTbl>(this.detach_AssetTbls));
			this._CarTypeTbls = new EntitySet<CarTypeTbl>(new Action<CarTypeTbl>(this.attach_CarTypeTbls), new Action<CarTypeTbl>(this.detach_CarTypeTbls));
			this._CustomerPendingRateTbls = new EntitySet<CustomerPendingRateTbl>(new Action<CustomerPendingRateTbl>(this.attach_CustomerPendingRateTbls), new Action<CustomerPendingRateTbl>(this.detach_CustomerPendingRateTbls));
			this._CustomerRateTbls = new EntitySet<CustomerRateTbl>(new Action<CustomerRateTbl>(this.attach_CustomerRateTbls), new Action<CustomerRateTbl>(this.detach_CustomerRateTbls));
			this._DistributorCancelerLogTbls = new EntitySet<DistributorCancelerLogTbl>(new Action<DistributorCancelerLogTbl>(this.attach_DistributorCancelerLogTbls), new Action<DistributorCancelerLogTbl>(this.detach_DistributorCancelerLogTbls));
			this._DistributorCancelerLogTbls1 = new EntitySet<DistributorCancelerLogTbl>(new Action<DistributorCancelerLogTbl>(this.attach_DistributorCancelerLogTbls1), new Action<DistributorCancelerLogTbl>(this.detach_DistributorCancelerLogTbls1));
			this._DistributorCancelingOrderTbls = new EntitySet<DistributorCancelingOrderTbl>(new Action<DistributorCancelingOrderTbl>(this.attach_DistributorCancelingOrderTbls), new Action<DistributorCancelingOrderTbl>(this.detach_DistributorCancelingOrderTbls));
			this._DistributorStartLocationTbls = new EntitySet<DistributorStartLocationTbl>(new Action<DistributorStartLocationTbl>(this.attach_DistributorStartLocationTbls), new Action<DistributorStartLocationTbl>(this.detach_DistributorStartLocationTbls));
			this._DistributorTimeSheetTbls = new EntitySet<DistributorTimeSheetTbl>(new Action<DistributorTimeSheetTbl>(this.attach_DistributorTimeSheetTbls), new Action<DistributorTimeSheetTbl>(this.detach_DistributorTimeSheetTbls));
			this._DraftTbls = new EntitySet<DraftTbl>(new Action<DraftTbl>(this.attach_DraftTbls), new Action<DraftTbl>(this.detach_DraftTbls));
			this._DraftTbls1 = new EntitySet<DraftTbl>(new Action<DraftTbl>(this.attach_DraftTbls1), new Action<DraftTbl>(this.detach_DraftTbls1));
			this._MBProto_user_sessionTbls = new EntitySet<MBProto_user_sessionTbl>(new Action<MBProto_user_sessionTbl>(this.attach_MBProto_user_sessionTbls), new Action<MBProto_user_sessionTbl>(this.detach_MBProto_user_sessionTbls));
			this._ReceiptTbls = new EntitySet<ReceiptTbl>(new Action<ReceiptTbl>(this.attach_ReceiptTbls), new Action<ReceiptTbl>(this.detach_ReceiptTbls));
			this._ReceiptTbls1 = new EntitySet<ReceiptTbl>(new Action<ReceiptTbl>(this.attach_ReceiptTbls1), new Action<ReceiptTbl>(this.detach_ReceiptTbls1));
			this._Repairman_AreaTbls = new EntitySet<Repairman_AreaTbl>(new Action<Repairman_AreaTbl>(this.attach_Repairman_AreaTbls), new Action<Repairman_AreaTbl>(this.detach_Repairman_AreaTbls));
			this._RepairmanCancelerLogTbls = new EntitySet<RepairmanCancelerLogTbl>(new Action<RepairmanCancelerLogTbl>(this.attach_RepairmanCancelerLogTbls), new Action<RepairmanCancelerLogTbl>(this.detach_RepairmanCancelerLogTbls));
			this._RepairmanCancelerLogTbls1 = new EntitySet<RepairmanCancelerLogTbl>(new Action<RepairmanCancelerLogTbl>(this.attach_RepairmanCancelerLogTbls1), new Action<RepairmanCancelerLogTbl>(this.detach_RepairmanCancelerLogTbls1));
			this._RepairmanCancelerLogTbls2 = new EntitySet<RepairmanCancelerLogTbl>(new Action<RepairmanCancelerLogTbl>(this.attach_RepairmanCancelerLogTbls2), new Action<RepairmanCancelerLogTbl>(this.detach_RepairmanCancelerLogTbls2));
			this._RepairmanCancelingOrderTbls = new EntitySet<RepairmanCancelingOrderTbl>(new Action<RepairmanCancelingOrderTbl>(this.attach_RepairmanCancelingOrderTbls), new Action<RepairmanCancelingOrderTbl>(this.detach_RepairmanCancelingOrderTbls));
			this._repairmanRoleDetailsTbls = new EntitySet<repairmanRoleDetailsTbl>(new Action<repairmanRoleDetailsTbl>(this.attach_repairmanRoleDetailsTbls), new Action<repairmanRoleDetailsTbl>(this.detach_repairmanRoleDetailsTbls));
			this._RepairmanTimeSheet1Tbls = new EntitySet<RepairmanTimeSheet1Tbl>(new Action<RepairmanTimeSheet1Tbl>(this.attach_RepairmanTimeSheet1Tbls), new Action<RepairmanTimeSheet1Tbl>(this.detach_RepairmanTimeSheet1Tbls));
			this._ReturnTbls = new EntitySet<ReturnTbl>(new Action<ReturnTbl>(this.attach_ReturnTbls), new Action<ReturnTbl>(this.detach_ReturnTbls));
			this._ReturnTbls1 = new EntitySet<ReturnTbl>(new Action<ReturnTbl>(this.attach_ReturnTbls1), new Action<ReturnTbl>(this.detach_ReturnTbls1));
			this._ServiceOrderTbls = new EntitySet<ServiceOrderTbl>(new Action<ServiceOrderTbl>(this.attach_ServiceOrderTbls), new Action<ServiceOrderTbl>(this.detach_ServiceOrderTbls));
			this._ServiceOrderTbls1 = new EntitySet<ServiceOrderTbl>(new Action<ServiceOrderTbl>(this.attach_ServiceOrderTbls1), new Action<ServiceOrderTbl>(this.detach_ServiceOrderTbls1));
			this._User_RoleTbls = new EntitySet<User_RoleTbl>(new Action<User_RoleTbl>(this.attach_User_RoleTbls), new Action<User_RoleTbl>(this.detach_User_RoleTbls));
			this._UserGeoTrackTbls = new EntitySet<UserGeoTrackTbl>(new Action<UserGeoTrackTbl>(this.attach_UserGeoTrackTbls), new Action<UserGeoTrackTbl>(this.detach_UserGeoTrackTbls));
			this._UserInactiveTimeTbls = new EntitySet<UserInactiveTimeTbl>(new Action<UserInactiveTimeTbl>(this.attach_UserInactiveTimeTbls), new Action<UserInactiveTimeTbl>(this.detach_UserInactiveTimeTbls));
			this._UserMessageTbls = new EntitySet<UserMessageTbl>(new Action<UserMessageTbl>(this.attach_UserMessageTbls), new Action<UserMessageTbl>(this.detach_UserMessageTbls));
			this._userPushTbls = new EntitySet<userPushTbl>(new Action<userPushTbl>(this.attach_userPushTbls), new Action<userPushTbl>(this.detach_userPushTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string family
		{
			get
			{
				return this._family;
			}
			set
			{
				if ((this._family != value))
				{
					this.OnfamilyChanging(value);
					this.SendPropertyChanging();
					this._family = value;
					this.SendPropertyChanged("family");
					this.OnfamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(500)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime lastLoginDate
		{
			get
			{
				return this._lastLoginDate;
			}
			set
			{
				if ((this._lastLoginDate != value))
				{
					this.OnlastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._lastLoginDate = value;
					this.SendPropertyChanged("lastLoginDate");
					this.OnlastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerDate", DbType="DateTime NOT NULL")]
		public System.DateTime registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this.OnregisterDateChanging(value);
					this.SendPropertyChanging();
					this._registerDate = value;
					this.SendPropertyChanged("registerDate");
					this.OnregisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isManager", DbType="Bit NOT NULL")]
		public bool isManager
		{
			get
			{
				return this._isManager;
			}
			set
			{
				if ((this._isManager != value))
				{
					this.OnisManagerChanging(value);
					this.SendPropertyChanging();
					this._isManager = value;
					this.SendPropertyChanged("isManager");
					this.OnisManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOperator", DbType="Bit NOT NULL")]
		public bool isOperator
		{
			get
			{
				return this._isOperator;
			}
			set
			{
				if ((this._isOperator != value))
				{
					this.OnisOperatorChanging(value);
					this.SendPropertyChanging();
					this._isOperator = value;
					this.SendPropertyChanged("isOperator");
					this.OnisOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRepairman", DbType="Bit NOT NULL")]
		public bool isRepairman
		{
			get
			{
				return this._isRepairman;
			}
			set
			{
				if ((this._isRepairman != value))
				{
					this.OnisRepairmanChanging(value);
					this.SendPropertyChanging();
					this._isRepairman = value;
					this.SendPropertyChanged("isRepairman");
					this.OnisRepairmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDistributor", DbType="Bit NOT NULL")]
		public bool isDistributor
		{
			get
			{
				return this._isDistributor;
			}
			set
			{
				if ((this._isDistributor != value))
				{
					this.OnisDistributorChanging(value);
					this.SendPropertyChanging();
					this._isDistributor = value;
					this.SendPropertyChanged("isDistributor");
					this.OnisDistributorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isWarehouseKeeper", DbType="Bit NOT NULL")]
		public bool isWarehouseKeeper
		{
			get
			{
				return this._isWarehouseKeeper;
			}
			set
			{
				if ((this._isWarehouseKeeper != value))
				{
					this.OnisWarehouseKeeperChanging(value);
					this.SendPropertyChanging();
					this._isWarehouseKeeper = value;
					this.SendPropertyChanged("isWarehouseKeeper");
					this.OnisWarehouseKeeperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCode", DbType="Char(6)")]
		public string signCode
		{
			get
			{
				return this._signCode;
			}
			set
			{
				if ((this._signCode != value))
				{
					this.OnsignCodeChanging(value);
					this.SendPropertyChanging();
					this._signCode = value;
					this.SendPropertyChanged("signCode");
					this.OnsignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCodeRegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> signCodeRegDate
		{
			get
			{
				return this._signCodeRegDate;
			}
			set
			{
				if ((this._signCodeRegDate != value))
				{
					this.OnsignCodeRegDateChanging(value);
					this.SendPropertyChanging();
					this._signCodeRegDate = value;
					this.SendPropertyChanged("signCodeRegDate");
					this.OnsignCodeRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanServiceCount", DbType="Int NOT NULL")]
		public int repairmanServiceCount
		{
			get
			{
				return this._repairmanServiceCount;
			}
			set
			{
				if ((this._repairmanServiceCount != value))
				{
					this.OnrepairmanServiceCountChanging(value);
					this.SendPropertyChanging();
					this._repairmanServiceCount = value;
					this.SendPropertyChanged("repairmanServiceCount");
					this.OnrepairmanServiceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanScore", DbType="Int NOT NULL")]
		public int repairmanScore
		{
			get
			{
				return this._repairmanScore;
			}
			set
			{
				if ((this._repairmanScore != value))
				{
					this.OnrepairmanScoreChanging(value);
					this.SendPropertyChanging();
					this._repairmanScore = value;
					this.SendPropertyChanged("repairmanScore");
					this.OnrepairmanScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_AssetTbl", Storage="_AssetTbls", ThisKey="ID", OtherKey="userID")]
		public EntitySet<AssetTbl> AssetTbls
		{
			get
			{
				return this._AssetTbls;
			}
			set
			{
				this._AssetTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_CarTypeTbl", Storage="_CarTypeTbls", ThisKey="ID", OtherKey="registerUserId")]
		public EntitySet<CarTypeTbl> CarTypeTbls
		{
			get
			{
				return this._CarTypeTbls;
			}
			set
			{
				this._CarTypeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_CustomerPendingRateTbl", Storage="_CustomerPendingRateTbls", ThisKey="ID", OtherKey="repairmanId")]
		public EntitySet<CustomerPendingRateTbl> CustomerPendingRateTbls
		{
			get
			{
				return this._CustomerPendingRateTbls;
			}
			set
			{
				this._CustomerPendingRateTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_CustomerRateTbl", Storage="_CustomerRateTbls", ThisKey="ID", OtherKey="repairmanId")]
		public EntitySet<CustomerRateTbl> CustomerRateTbls
		{
			get
			{
				return this._CustomerRateTbls;
			}
			set
			{
				this._CustomerRateTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorCancelerLogTbl", Storage="_DistributorCancelerLogTbls", ThisKey="ID", OtherKey="cancelerId")]
		public EntitySet<DistributorCancelerLogTbl> DistributorCancelerLogTbls
		{
			get
			{
				return this._DistributorCancelerLogTbls;
			}
			set
			{
				this._DistributorCancelerLogTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorCancelerLogTbl1", Storage="_DistributorCancelerLogTbls1", ThisKey="ID", OtherKey="replaceId")]
		public EntitySet<DistributorCancelerLogTbl> DistributorCancelerLogTbls1
		{
			get
			{
				return this._DistributorCancelerLogTbls1;
			}
			set
			{
				this._DistributorCancelerLogTbls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorCancelingOrderTbl", Storage="_DistributorCancelingOrderTbls", ThisKey="ID", OtherKey="operatorId")]
		public EntitySet<DistributorCancelingOrderTbl> DistributorCancelingOrderTbls
		{
			get
			{
				return this._DistributorCancelingOrderTbls;
			}
			set
			{
				this._DistributorCancelingOrderTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorStartLocationTbl", Storage="_DistributorStartLocationTbls", ThisKey="ID", OtherKey="distributorId")]
		public EntitySet<DistributorStartLocationTbl> DistributorStartLocationTbls
		{
			get
			{
				return this._DistributorStartLocationTbls;
			}
			set
			{
				this._DistributorStartLocationTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DistributorTimeSheetTbl", Storage="_DistributorTimeSheetTbls", ThisKey="ID", OtherKey="distributorId")]
		public EntitySet<DistributorTimeSheetTbl> DistributorTimeSheetTbls
		{
			get
			{
				return this._DistributorTimeSheetTbls;
			}
			set
			{
				this._DistributorTimeSheetTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DraftTbl", Storage="_DraftTbls", ThisKey="ID", OtherKey="warehouseKeeperId")]
		public EntitySet<DraftTbl> DraftTbls
		{
			get
			{
				return this._DraftTbls;
			}
			set
			{
				this._DraftTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_DraftTbl1", Storage="_DraftTbls1", ThisKey="ID", OtherKey="userId")]
		public EntitySet<DraftTbl> DraftTbls1
		{
			get
			{
				return this._DraftTbls1;
			}
			set
			{
				this._DraftTbls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_MBProto_user_sessionTbl", Storage="_MBProto_user_sessionTbls", ThisKey="ID", OtherKey="userID")]
		public EntitySet<MBProto_user_sessionTbl> MBProto_user_sessionTbls
		{
			get
			{
				return this._MBProto_user_sessionTbls;
			}
			set
			{
				this._MBProto_user_sessionTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ReceiptTbl", Storage="_ReceiptTbls", ThisKey="ID", OtherKey="providerUserId")]
		public EntitySet<ReceiptTbl> ReceiptTbls
		{
			get
			{
				return this._ReceiptTbls;
			}
			set
			{
				this._ReceiptTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ReceiptTbl1", Storage="_ReceiptTbls1", ThisKey="ID", OtherKey="receiverUserId")]
		public EntitySet<ReceiptTbl> ReceiptTbls1
		{
			get
			{
				return this._ReceiptTbls1;
			}
			set
			{
				this._ReceiptTbls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_Repairman_AreaTbl", Storage="_Repairman_AreaTbls", ThisKey="ID", OtherKey="repairmanId")]
		public EntitySet<Repairman_AreaTbl> Repairman_AreaTbls
		{
			get
			{
				return this._Repairman_AreaTbls;
			}
			set
			{
				this._Repairman_AreaTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanCancelerLogTbl", Storage="_RepairmanCancelerLogTbls", ThisKey="ID", OtherKey="regUserId")]
		public EntitySet<RepairmanCancelerLogTbl> RepairmanCancelerLogTbls
		{
			get
			{
				return this._RepairmanCancelerLogTbls;
			}
			set
			{
				this._RepairmanCancelerLogTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanCancelerLogTbl1", Storage="_RepairmanCancelerLogTbls1", ThisKey="ID", OtherKey="cancelerId")]
		public EntitySet<RepairmanCancelerLogTbl> RepairmanCancelerLogTbls1
		{
			get
			{
				return this._RepairmanCancelerLogTbls1;
			}
			set
			{
				this._RepairmanCancelerLogTbls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanCancelerLogTbl2", Storage="_RepairmanCancelerLogTbls2", ThisKey="ID", OtherKey="replaceId")]
		public EntitySet<RepairmanCancelerLogTbl> RepairmanCancelerLogTbls2
		{
			get
			{
				return this._RepairmanCancelerLogTbls2;
			}
			set
			{
				this._RepairmanCancelerLogTbls2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanCancelingOrderTbl", Storage="_RepairmanCancelingOrderTbls", ThisKey="ID", OtherKey="operatorId")]
		public EntitySet<RepairmanCancelingOrderTbl> RepairmanCancelingOrderTbls
		{
			get
			{
				return this._RepairmanCancelingOrderTbls;
			}
			set
			{
				this._RepairmanCancelingOrderTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_repairmanRoleDetailsTbl", Storage="_repairmanRoleDetailsTbls", ThisKey="ID", OtherKey="repairmanId")]
		public EntitySet<repairmanRoleDetailsTbl> repairmanRoleDetailsTbls
		{
			get
			{
				return this._repairmanRoleDetailsTbls;
			}
			set
			{
				this._repairmanRoleDetailsTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_RepairmanTimeSheet1Tbl", Storage="_RepairmanTimeSheet1Tbls", ThisKey="ID", OtherKey="repairmanId")]
		public EntitySet<RepairmanTimeSheet1Tbl> RepairmanTimeSheet1Tbls
		{
			get
			{
				return this._RepairmanTimeSheet1Tbls;
			}
			set
			{
				this._RepairmanTimeSheet1Tbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ReturnTbl", Storage="_ReturnTbls", ThisKey="ID", OtherKey="userId")]
		public EntitySet<ReturnTbl> ReturnTbls
		{
			get
			{
				return this._ReturnTbls;
			}
			set
			{
				this._ReturnTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ReturnTbl1", Storage="_ReturnTbls1", ThisKey="ID", OtherKey="warehouseKeeperId")]
		public EntitySet<ReturnTbl> ReturnTbls1
		{
			get
			{
				return this._ReturnTbls1;
			}
			set
			{
				this._ReturnTbls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ServiceOrderTbl", Storage="_ServiceOrderTbls", ThisKey="ID", OtherKey="distributorId")]
		public EntitySet<ServiceOrderTbl> ServiceOrderTbls
		{
			get
			{
				return this._ServiceOrderTbls;
			}
			set
			{
				this._ServiceOrderTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_ServiceOrderTbl1", Storage="_ServiceOrderTbls1", ThisKey="ID", OtherKey="repairmanId")]
		public EntitySet<ServiceOrderTbl> ServiceOrderTbls1
		{
			get
			{
				return this._ServiceOrderTbls1;
			}
			set
			{
				this._ServiceOrderTbls1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_User_RoleTbl", Storage="_User_RoleTbls", ThisKey="ID", OtherKey="userId")]
		public EntitySet<User_RoleTbl> User_RoleTbls
		{
			get
			{
				return this._User_RoleTbls;
			}
			set
			{
				this._User_RoleTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_UserGeoTrackTbl", Storage="_UserGeoTrackTbls", ThisKey="ID", OtherKey="userId")]
		public EntitySet<UserGeoTrackTbl> UserGeoTrackTbls
		{
			get
			{
				return this._UserGeoTrackTbls;
			}
			set
			{
				this._UserGeoTrackTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_UserInactiveTimeTbl", Storage="_UserInactiveTimeTbls", ThisKey="ID", OtherKey="userId")]
		public EntitySet<UserInactiveTimeTbl> UserInactiveTimeTbls
		{
			get
			{
				return this._UserInactiveTimeTbls;
			}
			set
			{
				this._UserInactiveTimeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_UserMessageTbl", Storage="_UserMessageTbls", ThisKey="ID", OtherKey="userId")]
		public EntitySet<UserMessageTbl> UserMessageTbls
		{
			get
			{
				return this._UserMessageTbls;
			}
			set
			{
				this._UserMessageTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_userPushTbl", Storage="_userPushTbls", ThisKey="ID", OtherKey="userId")]
		public EntitySet<userPushTbl> userPushTbls
		{
			get
			{
				return this._userPushTbls;
			}
			set
			{
				this._userPushTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_CarTypeTbls(CarTypeTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_CarTypeTbls(CarTypeTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_CustomerPendingRateTbls(CustomerPendingRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_CustomerPendingRateTbls(CustomerPendingRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_CustomerRateTbls(CustomerRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_CustomerRateTbls(CustomerRateTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_DistributorCancelerLogTbls(DistributorCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_DistributorCancelerLogTbls(DistributorCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_DistributorCancelerLogTbls1(DistributorCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = this;
		}
		
		private void detach_DistributorCancelerLogTbls1(DistributorCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = null;
		}
		
		private void attach_DistributorCancelingOrderTbls(DistributorCancelingOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_DistributorCancelingOrderTbls(DistributorCancelingOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_DistributorStartLocationTbls(DistributorStartLocationTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_DistributorStartLocationTbls(DistributorStartLocationTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_DistributorTimeSheetTbls(DistributorTimeSheetTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_DistributorTimeSheetTbls(DistributorTimeSheetTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_DraftTbls(DraftTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_DraftTbls(DraftTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_DraftTbls1(DraftTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = this;
		}
		
		private void detach_DraftTbls1(DraftTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = null;
		}
		
		private void attach_MBProto_user_sessionTbls(MBProto_user_sessionTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_MBProto_user_sessionTbls(MBProto_user_sessionTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_ReceiptTbls(ReceiptTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_ReceiptTbls(ReceiptTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_ReceiptTbls1(ReceiptTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = this;
		}
		
		private void detach_ReceiptTbls1(ReceiptTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = null;
		}
		
		private void attach_Repairman_AreaTbls(Repairman_AreaTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_Repairman_AreaTbls(Repairman_AreaTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_RepairmanCancelerLogTbls(RepairmanCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_RepairmanCancelerLogTbls(RepairmanCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_RepairmanCancelerLogTbls1(RepairmanCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = this;
		}
		
		private void detach_RepairmanCancelerLogTbls1(RepairmanCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = null;
		}
		
		private void attach_RepairmanCancelerLogTbls2(RepairmanCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl2 = this;
		}
		
		private void detach_RepairmanCancelerLogTbls2(RepairmanCancelerLogTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl2 = null;
		}
		
		private void attach_RepairmanCancelingOrderTbls(RepairmanCancelingOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_RepairmanCancelingOrderTbls(RepairmanCancelingOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_repairmanRoleDetailsTbls(repairmanRoleDetailsTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_repairmanRoleDetailsTbls(repairmanRoleDetailsTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_RepairmanTimeSheet1Tbls(RepairmanTimeSheet1Tbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_RepairmanTimeSheet1Tbls(RepairmanTimeSheet1Tbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_ReturnTbls(ReturnTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_ReturnTbls(ReturnTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_ReturnTbls1(ReturnTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = this;
		}
		
		private void detach_ReturnTbls1(ReturnTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = null;
		}
		
		private void attach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_ServiceOrderTbls(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_ServiceOrderTbls1(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = this;
		}
		
		private void detach_ServiceOrderTbls1(ServiceOrderTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl1 = null;
		}
		
		private void attach_User_RoleTbls(User_RoleTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_User_RoleTbls(User_RoleTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_UserGeoTrackTbls(UserGeoTrackTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_UserGeoTrackTbls(UserGeoTrackTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_UserInactiveTimeTbls(UserInactiveTimeTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_UserInactiveTimeTbls(UserInactiveTimeTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_UserMessageTbls(UserMessageTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_UserMessageTbls(UserMessageTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_userPushTbls(userPushTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_userPushTbls(userPushTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
	}
}
#pragma warning restore 1591
